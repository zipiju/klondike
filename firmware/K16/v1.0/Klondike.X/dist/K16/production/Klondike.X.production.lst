

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Jan 31 12:30:16 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	idataBANK6,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    19                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	swtext1,local,class=CONST,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	text44,local,class=CODE,merge=1,delta=2
    72                           	psect	text45,local,class=CODE,merge=1,delta=2
    73                           	psect	text46,local,class=CODE,merge=1,delta=2
    74                           	psect	text47,local,class=CODE,merge=1,delta=2
    75                           	psect	text48,local,class=CODE,merge=1,delta=2
    76                           	psect	text49,local,class=CODE,merge=1,delta=2
    77                           	psect	text50,local,class=CODE,merge=1,delta=2
    78                           	psect	text51,local,class=CODE,merge=1,delta=2
    79                           	psect	text52,local,class=CODE,merge=1,delta=2
    80                           	psect	text53,local,class=CODE,merge=1,delta=2
    81                           	psect	text54,local,class=CODE,merge=1,delta=2
    82                           	psect	text55,local,class=CODE,merge=1,delta=2
    83                           	psect	text56,local,class=CODE,merge=1,delta=2
    84                           	psect	text57,local,class=CODE,merge=1,delta=2
    85                           	psect	text58,local,class=CODE,merge=1,delta=2
    86                           	psect	text59,local,class=CODE,merge=1,delta=2
    87                           	psect	text60,local,class=CODE,merge=1,delta=2
    88                           	psect	text61,local,class=CODE,merge=1,delta=2
    89                           	psect	text62,local,class=CODE,merge=1,delta=2
    90                           	psect	text63,local,class=CODE,merge=1,delta=2
    91                           	psect	text64,local,class=CODE,merge=1,delta=2
    92                           	psect	intentry,global,class=CODE,delta=2
    93                           	psect	text66,local,class=CODE,merge=1,delta=2
    94                           	psect	text67,local,class=CODE,merge=1,delta=2
    95                           	psect	text68,local,class=CODE,merge=1,delta=2
    96                           	psect	text69,local,class=CODE,merge=1,delta=2
    97                           	dabs	1,0x620,48
    98                           	dabs	1,0x5A0,80
    99                           	dabs	1,0x520,80
   100                           	dabs	1,0x4A0,80
   101                           	dabs	1,0x428,72
   102                           	dabs	1,0x20,32,_BDT
   103                           	dabs	1,0x48,8,_CtrlTrfData
   104                           	dabs	1,0x40,8,_SetupPkt
   105                           	dabs	1,0x220,64,_INPacket
   106                           	dabs	1,0x2A0,64,_OUTPacket
   107                           	dabs	1,0x2288,0,_WorkQue
   108                           	dabs	1,0x7E,2
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011D                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  018E                     	;# 
   168  0191                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0199                     	;# 
   177  019A                     	;# 
   178  019B                     	;# 
   179  019C                     	;# 
   180  019D                     	;# 
   181  019E                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  0211                     	;# 
   186  0211                     	;# 
   187  0212                     	;# 
   188  0212                     	;# 
   189  0213                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0214                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0216                     	;# 
   197  0216                     	;# 
   198  0217                     	;# 
   199  0217                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  0394                     	;# 
   204  0395                     	;# 
   205  0396                     	;# 
   206  039A                     	;# 
   207  039B                     	;# 
   208  0611                     	;# 
   209  0612                     	;# 
   210  0613                     	;# 
   211  0613                     	;# 
   212  0614                     	;# 
   213  0615                     	;# 
   214  0616                     	;# 
   215  0616                     	;# 
   216  0691                     	;# 
   217  0692                     	;# 
   218  0693                     	;# 
   219  0694                     	;# 
   220  0695                     	;# 
   221  0E8E                     	;# 
   222  0E8F                     	;# 
   223  0E90                     	;# 
   224  0E91                     	;# 
   225  0E92                     	;# 
   226  0E93                     	;# 
   227  0E94                     	;# 
   228  0E94                     	;# 
   229  0E95                     	;# 
   230  0E96                     	;# 
   231  0E97                     	;# 
   232  0E98                     	;# 
   233  0E99                     	;# 
   234  0E9A                     	;# 
   235  0E9B                     	;# 
   236  0E9C                     	;# 
   237  0E9D                     	;# 
   238  0E9E                     	;# 
   239  0E9F                     	;# 
   240  0FE4                     	;# 
   241  0FE5                     	;# 
   242  0FE6                     	;# 
   243  0FE7                     	;# 
   244  0FE8                     	;# 
   245  0FE9                     	;# 
   246  0FEA                     	;# 
   247  0FEB                     	;# 
   248  0FED                     	;# 
   249  0FEE                     	;# 
   250  0FEF                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  0111                     	;# 
   298  0112                     	;# 
   299  0113                     	;# 
   300  0114                     	;# 
   301  0115                     	;# 
   302  0116                     	;# 
   303  0117                     	;# 
   304  0118                     	;# 
   305  0119                     	;# 
   306  011D                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  018E                     	;# 
   310  0191                     	;# 
   311  0191                     	;# 
   312  0192                     	;# 
   313  0193                     	;# 
   314  0193                     	;# 
   315  0194                     	;# 
   316  0195                     	;# 
   317  0196                     	;# 
   318  0199                     	;# 
   319  019A                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020D                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0391                     	;# 
   343  0392                     	;# 
   344  0393                     	;# 
   345  0394                     	;# 
   346  0395                     	;# 
   347  0396                     	;# 
   348  039A                     	;# 
   349  039B                     	;# 
   350  0611                     	;# 
   351  0612                     	;# 
   352  0613                     	;# 
   353  0613                     	;# 
   354  0614                     	;# 
   355  0615                     	;# 
   356  0616                     	;# 
   357  0616                     	;# 
   358  0691                     	;# 
   359  0692                     	;# 
   360  0693                     	;# 
   361  0694                     	;# 
   362  0695                     	;# 
   363  0E8E                     	;# 
   364  0E8F                     	;# 
   365  0E90                     	;# 
   366  0E91                     	;# 
   367  0E92                     	;# 
   368  0E93                     	;# 
   369  0E94                     	;# 
   370  0E94                     	;# 
   371  0E95                     	;# 
   372  0E96                     	;# 
   373  0E97                     	;# 
   374  0E98                     	;# 
   375  0E99                     	;# 
   376  0E9A                     	;# 
   377  0E9B                     	;# 
   378  0E9C                     	;# 
   379  0E9D                     	;# 
   380  0E9E                     	;# 
   381  0E9F                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011D                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  018E                     	;# 
   452  0191                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  0193                     	;# 
   456  0193                     	;# 
   457  0194                     	;# 
   458  0195                     	;# 
   459  0196                     	;# 
   460  0199                     	;# 
   461  019A                     	;# 
   462  019B                     	;# 
   463  019C                     	;# 
   464  019D                     	;# 
   465  019E                     	;# 
   466  019F                     	;# 
   467  020C                     	;# 
   468  020D                     	;# 
   469  0211                     	;# 
   470  0211                     	;# 
   471  0212                     	;# 
   472  0212                     	;# 
   473  0213                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0214                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0215                     	;# 
   480  0216                     	;# 
   481  0216                     	;# 
   482  0217                     	;# 
   483  0217                     	;# 
   484  0391                     	;# 
   485  0392                     	;# 
   486  0393                     	;# 
   487  0394                     	;# 
   488  0395                     	;# 
   489  0396                     	;# 
   490  039A                     	;# 
   491  039B                     	;# 
   492  0611                     	;# 
   493  0612                     	;# 
   494  0613                     	;# 
   495  0613                     	;# 
   496  0614                     	;# 
   497  0615                     	;# 
   498  0616                     	;# 
   499  0616                     	;# 
   500  0691                     	;# 
   501  0692                     	;# 
   502  0693                     	;# 
   503  0694                     	;# 
   504  0695                     	;# 
   505  0E8E                     	;# 
   506  0E8F                     	;# 
   507  0E90                     	;# 
   508  0E91                     	;# 
   509  0E92                     	;# 
   510  0E93                     	;# 
   511  0E94                     	;# 
   512  0E94                     	;# 
   513  0E95                     	;# 
   514  0E96                     	;# 
   515  0E97                     	;# 
   516  0E98                     	;# 
   517  0E99                     	;# 
   518  0E9A                     	;# 
   519  0E9B                     	;# 
   520  0E9C                     	;# 
   521  0E9D                     	;# 
   522  0E9E                     	;# 
   523  0E9F                     	;# 
   524  0FE4                     	;# 
   525  0FE5                     	;# 
   526  0FE6                     	;# 
   527  0FE7                     	;# 
   528  0FE8                     	;# 
   529  0FE9                     	;# 
   530  0FEA                     	;# 
   531  0FEB                     	;# 
   532  0FED                     	;# 
   533  0FEE                     	;# 
   534  0FEF                     	;# 
   535  0000                     	;# 
   536  0001                     	;# 
   537  0002                     	;# 
   538  0003                     	;# 
   539  0004                     	;# 
   540  0005                     	;# 
   541  0006                     	;# 
   542  0007                     	;# 
   543  0008                     	;# 
   544  0009                     	;# 
   545  000A                     	;# 
   546  000B                     	;# 
   547  000C                     	;# 
   548  000D                     	;# 
   549  000E                     	;# 
   550  0011                     	;# 
   551  0012                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  008C                     	;# 
   562  008D                     	;# 
   563  008E                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0095                     	;# 
   567  0096                     	;# 
   568  0097                     	;# 
   569  0098                     	;# 
   570  0099                     	;# 
   571  009A                     	;# 
   572  009B                     	;# 
   573  009B                     	;# 
   574  009C                     	;# 
   575  009D                     	;# 
   576  009E                     	;# 
   577  009F                     	;# 
   578  010C                     	;# 
   579  010D                     	;# 
   580  010E                     	;# 
   581  0111                     	;# 
   582  0112                     	;# 
   583  0113                     	;# 
   584  0114                     	;# 
   585  0115                     	;# 
   586  0116                     	;# 
   587  0117                     	;# 
   588  0118                     	;# 
   589  0119                     	;# 
   590  011D                     	;# 
   591  018C                     	;# 
   592  018D                     	;# 
   593  018E                     	;# 
   594  0191                     	;# 
   595  0191                     	;# 
   596  0192                     	;# 
   597  0193                     	;# 
   598  0193                     	;# 
   599  0194                     	;# 
   600  0195                     	;# 
   601  0196                     	;# 
   602  0199                     	;# 
   603  019A                     	;# 
   604  019B                     	;# 
   605  019C                     	;# 
   606  019D                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  020C                     	;# 
   610  020D                     	;# 
   611  0211                     	;# 
   612  0211                     	;# 
   613  0212                     	;# 
   614  0212                     	;# 
   615  0213                     	;# 
   616  0213                     	;# 
   617  0214                     	;# 
   618  0214                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  0391                     	;# 
   627  0392                     	;# 
   628  0393                     	;# 
   629  0394                     	;# 
   630  0395                     	;# 
   631  0396                     	;# 
   632  039A                     	;# 
   633  039B                     	;# 
   634  0611                     	;# 
   635  0612                     	;# 
   636  0613                     	;# 
   637  0613                     	;# 
   638  0614                     	;# 
   639  0615                     	;# 
   640  0616                     	;# 
   641  0616                     	;# 
   642  0691                     	;# 
   643  0692                     	;# 
   644  0693                     	;# 
   645  0694                     	;# 
   646  0695                     	;# 
   647  0E8E                     	;# 
   648  0E8F                     	;# 
   649  0E90                     	;# 
   650  0E91                     	;# 
   651  0E92                     	;# 
   652  0E93                     	;# 
   653  0E94                     	;# 
   654  0E94                     	;# 
   655  0E95                     	;# 
   656  0E96                     	;# 
   657  0E97                     	;# 
   658  0E98                     	;# 
   659  0E99                     	;# 
   660  0E9A                     	;# 
   661  0E9B                     	;# 
   662  0E9C                     	;# 
   663  0E9D                     	;# 
   664  0E9E                     	;# 
   665  0E9F                     	;# 
   666  0FE4                     	;# 
   667  0FE5                     	;# 
   668  0FE6                     	;# 
   669  0FE7                     	;# 
   670  0FE8                     	;# 
   671  0FE9                     	;# 
   672  0FEA                     	;# 
   673  0FEB                     	;# 
   674  0FED                     	;# 
   675  0FEE                     	;# 
   676  0FEF                     	;# 
   677  0000                     	;# 
   678  0001                     	;# 
   679  0002                     	;# 
   680  0003                     	;# 
   681  0004                     	;# 
   682  0005                     	;# 
   683  0006                     	;# 
   684  0007                     	;# 
   685  0008                     	;# 
   686  0009                     	;# 
   687  000A                     	;# 
   688  000B                     	;# 
   689  000C                     	;# 
   690  000D                     	;# 
   691  000E                     	;# 
   692  0011                     	;# 
   693  0012                     	;# 
   694  0015                     	;# 
   695  0016                     	;# 
   696  0016                     	;# 
   697  0017                     	;# 
   698  0018                     	;# 
   699  0019                     	;# 
   700  001A                     	;# 
   701  001B                     	;# 
   702  001C                     	;# 
   703  008C                     	;# 
   704  008D                     	;# 
   705  008E                     	;# 
   706  0091                     	;# 
   707  0092                     	;# 
   708  0095                     	;# 
   709  0096                     	;# 
   710  0097                     	;# 
   711  0098                     	;# 
   712  0099                     	;# 
   713  009A                     	;# 
   714  009B                     	;# 
   715  009B                     	;# 
   716  009C                     	;# 
   717  009D                     	;# 
   718  009E                     	;# 
   719  009F                     	;# 
   720  010C                     	;# 
   721  010D                     	;# 
   722  010E                     	;# 
   723  0111                     	;# 
   724  0112                     	;# 
   725  0113                     	;# 
   726  0114                     	;# 
   727  0115                     	;# 
   728  0116                     	;# 
   729  0117                     	;# 
   730  0118                     	;# 
   731  0119                     	;# 
   732  011D                     	;# 
   733  018C                     	;# 
   734  018D                     	;# 
   735  018E                     	;# 
   736  0191                     	;# 
   737  0191                     	;# 
   738  0192                     	;# 
   739  0193                     	;# 
   740  0193                     	;# 
   741  0194                     	;# 
   742  0195                     	;# 
   743  0196                     	;# 
   744  0199                     	;# 
   745  019A                     	;# 
   746  019B                     	;# 
   747  019C                     	;# 
   748  019D                     	;# 
   749  019E                     	;# 
   750  019F                     	;# 
   751  020C                     	;# 
   752  020D                     	;# 
   753  0211                     	;# 
   754  0211                     	;# 
   755  0212                     	;# 
   756  0212                     	;# 
   757  0213                     	;# 
   758  0213                     	;# 
   759  0214                     	;# 
   760  0214                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0216                     	;# 
   765  0216                     	;# 
   766  0217                     	;# 
   767  0217                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  0393                     	;# 
   771  0394                     	;# 
   772  0395                     	;# 
   773  0396                     	;# 
   774  039A                     	;# 
   775  039B                     	;# 
   776  0611                     	;# 
   777  0612                     	;# 
   778  0613                     	;# 
   779  0613                     	;# 
   780  0614                     	;# 
   781  0615                     	;# 
   782  0616                     	;# 
   783  0616                     	;# 
   784  0691                     	;# 
   785  0692                     	;# 
   786  0693                     	;# 
   787  0694                     	;# 
   788  0695                     	;# 
   789  0E8E                     	;# 
   790  0E8F                     	;# 
   791  0E90                     	;# 
   792  0E91                     	;# 
   793  0E92                     	;# 
   794  0E93                     	;# 
   795  0E94                     	;# 
   796  0E94                     	;# 
   797  0E95                     	;# 
   798  0E96                     	;# 
   799  0E97                     	;# 
   800  0E98                     	;# 
   801  0E99                     	;# 
   802  0E9A                     	;# 
   803  0E9B                     	;# 
   804  0E9C                     	;# 
   805  0E9D                     	;# 
   806  0E9E                     	;# 
   807  0E9F                     	;# 
   808  0FE4                     	;# 
   809  0FE5                     	;# 
   810  0FE6                     	;# 
   811  0FE7                     	;# 
   812  0FE8                     	;# 
   813  0FE9                     	;# 
   814  0FEA                     	;# 
   815  0FEB                     	;# 
   816  0FED                     	;# 
   817  0FEE                     	;# 
   818  0FEF                     	;# 
   819  0000                     	;# 
   820  0001                     	;# 
   821  0002                     	;# 
   822  0003                     	;# 
   823  0004                     	;# 
   824  0005                     	;# 
   825  0006                     	;# 
   826  0007                     	;# 
   827  0008                     	;# 
   828  0009                     	;# 
   829  000A                     	;# 
   830  000B                     	;# 
   831  000C                     	;# 
   832  000D                     	;# 
   833  000E                     	;# 
   834  0011                     	;# 
   835  0012                     	;# 
   836  0015                     	;# 
   837  0016                     	;# 
   838  0016                     	;# 
   839  0017                     	;# 
   840  0018                     	;# 
   841  0019                     	;# 
   842  001A                     	;# 
   843  001B                     	;# 
   844  001C                     	;# 
   845  008C                     	;# 
   846  008D                     	;# 
   847  008E                     	;# 
   848  0091                     	;# 
   849  0092                     	;# 
   850  0095                     	;# 
   851  0096                     	;# 
   852  0097                     	;# 
   853  0098                     	;# 
   854  0099                     	;# 
   855  009A                     	;# 
   856  009B                     	;# 
   857  009B                     	;# 
   858  009C                     	;# 
   859  009D                     	;# 
   860  009E                     	;# 
   861  009F                     	;# 
   862  010C                     	;# 
   863  010D                     	;# 
   864  010E                     	;# 
   865  0111                     	;# 
   866  0112                     	;# 
   867  0113                     	;# 
   868  0114                     	;# 
   869  0115                     	;# 
   870  0116                     	;# 
   871  0117                     	;# 
   872  0118                     	;# 
   873  0119                     	;# 
   874  011D                     	;# 
   875  018C                     	;# 
   876  018D                     	;# 
   877  018E                     	;# 
   878  0191                     	;# 
   879  0191                     	;# 
   880  0192                     	;# 
   881  0193                     	;# 
   882  0193                     	;# 
   883  0194                     	;# 
   884  0195                     	;# 
   885  0196                     	;# 
   886  0199                     	;# 
   887  019A                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019D                     	;# 
   891  019E                     	;# 
   892  019F                     	;# 
   893  020C                     	;# 
   894  020D                     	;# 
   895  0211                     	;# 
   896  0211                     	;# 
   897  0212                     	;# 
   898  0212                     	;# 
   899  0213                     	;# 
   900  0213                     	;# 
   901  0214                     	;# 
   902  0214                     	;# 
   903  0215                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0216                     	;# 
   907  0216                     	;# 
   908  0217                     	;# 
   909  0217                     	;# 
   910  0391                     	;# 
   911  0392                     	;# 
   912  0393                     	;# 
   913  0394                     	;# 
   914  0395                     	;# 
   915  0396                     	;# 
   916  039A                     	;# 
   917  039B                     	;# 
   918  0611                     	;# 
   919  0612                     	;# 
   920  0613                     	;# 
   921  0613                     	;# 
   922  0614                     	;# 
   923  0615                     	;# 
   924  0616                     	;# 
   925  0616                     	;# 
   926  0691                     	;# 
   927  0692                     	;# 
   928  0693                     	;# 
   929  0694                     	;# 
   930  0695                     	;# 
   931  0E8E                     	;# 
   932  0E8F                     	;# 
   933  0E90                     	;# 
   934  0E91                     	;# 
   935  0E92                     	;# 
   936  0E93                     	;# 
   937  0E94                     	;# 
   938  0E94                     	;# 
   939  0E95                     	;# 
   940  0E96                     	;# 
   941  0E97                     	;# 
   942  0E98                     	;# 
   943  0E99                     	;# 
   944  0E9A                     	;# 
   945  0E9B                     	;# 
   946  0E9C                     	;# 
   947  0E9D                     	;# 
   948  0E9E                     	;# 
   949  0E9F                     	;# 
   950  0FE4                     	;# 
   951  0FE5                     	;# 
   952  0FE6                     	;# 
   953  0FE7                     	;# 
   954  0FE8                     	;# 
   955  0FE9                     	;# 
   956  0FEA                     	;# 
   957  0FEB                     	;# 
   958  0FED                     	;# 
   959  0FEE                     	;# 
   960  0FEF                     	;# 
   961  0000                     	;# 
   962  0001                     	;# 
   963  0002                     	;# 
   964  0003                     	;# 
   965  0004                     	;# 
   966  0005                     	;# 
   967  0006                     	;# 
   968  0007                     	;# 
   969  0008                     	;# 
   970  0009                     	;# 
   971  000A                     	;# 
   972  000B                     	;# 
   973  000C                     	;# 
   974  000D                     	;# 
   975  000E                     	;# 
   976  0011                     	;# 
   977  0012                     	;# 
   978  0015                     	;# 
   979  0016                     	;# 
   980  0016                     	;# 
   981  0017                     	;# 
   982  0018                     	;# 
   983  0019                     	;# 
   984  001A                     	;# 
   985  001B                     	;# 
   986  001C                     	;# 
   987  008C                     	;# 
   988  008D                     	;# 
   989  008E                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0097                     	;# 
   995  0098                     	;# 
   996  0099                     	;# 
   997  009A                     	;# 
   998  009B                     	;# 
   999  009B                     	;# 
  1000  009C                     	;# 
  1001  009D                     	;# 
  1002  009E                     	;# 
  1003  009F                     	;# 
  1004  010C                     	;# 
  1005  010D                     	;# 
  1006  010E                     	;# 
  1007  0111                     	;# 
  1008  0112                     	;# 
  1009  0113                     	;# 
  1010  0114                     	;# 
  1011  0115                     	;# 
  1012  0116                     	;# 
  1013  0117                     	;# 
  1014  0118                     	;# 
  1015  0119                     	;# 
  1016  011D                     	;# 
  1017  018C                     	;# 
  1018  018D                     	;# 
  1019  018E                     	;# 
  1020  0191                     	;# 
  1021  0191                     	;# 
  1022  0192                     	;# 
  1023  0193                     	;# 
  1024  0193                     	;# 
  1025  0194                     	;# 
  1026  0195                     	;# 
  1027  0196                     	;# 
  1028  0199                     	;# 
  1029  019A                     	;# 
  1030  019B                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019E                     	;# 
  1034  019F                     	;# 
  1035  020C                     	;# 
  1036  020D                     	;# 
  1037  0211                     	;# 
  1038  0211                     	;# 
  1039  0212                     	;# 
  1040  0212                     	;# 
  1041  0213                     	;# 
  1042  0213                     	;# 
  1043  0214                     	;# 
  1044  0214                     	;# 
  1045  0215                     	;# 
  1046  0215                     	;# 
  1047  0215                     	;# 
  1048  0216                     	;# 
  1049  0216                     	;# 
  1050  0217                     	;# 
  1051  0217                     	;# 
  1052  0391                     	;# 
  1053  0392                     	;# 
  1054  0393                     	;# 
  1055  0394                     	;# 
  1056  0395                     	;# 
  1057  0396                     	;# 
  1058  039A                     	;# 
  1059  039B                     	;# 
  1060  0611                     	;# 
  1061  0612                     	;# 
  1062  0613                     	;# 
  1063  0613                     	;# 
  1064  0614                     	;# 
  1065  0615                     	;# 
  1066  0616                     	;# 
  1067  0616                     	;# 
  1068  0691                     	;# 
  1069  0692                     	;# 
  1070  0693                     	;# 
  1071  0694                     	;# 
  1072  0695                     	;# 
  1073  0E8E                     	;# 
  1074  0E8F                     	;# 
  1075  0E90                     	;# 
  1076  0E91                     	;# 
  1077  0E92                     	;# 
  1078  0E93                     	;# 
  1079  0E94                     	;# 
  1080  0E94                     	;# 
  1081  0E95                     	;# 
  1082  0E96                     	;# 
  1083  0E97                     	;# 
  1084  0E98                     	;# 
  1085  0E99                     	;# 
  1086  0E9A                     	;# 
  1087  0E9B                     	;# 
  1088  0E9C                     	;# 
  1089  0E9D                     	;# 
  1090  0E9E                     	;# 
  1091  0E9F                     	;# 
  1092  0FE4                     	;# 
  1093  0FE5                     	;# 
  1094  0FE6                     	;# 
  1095  0FE7                     	;# 
  1096  0FE8                     	;# 
  1097  0FE9                     	;# 
  1098  0FEA                     	;# 
  1099  0FEB                     	;# 
  1100  0FED                     	;# 
  1101  0FEE                     	;# 
  1102  0FEF                     	;# 
  1103  0000                     	;# 
  1104  0001                     	;# 
  1105  0002                     	;# 
  1106  0003                     	;# 
  1107  0004                     	;# 
  1108  0005                     	;# 
  1109  0006                     	;# 
  1110  0007                     	;# 
  1111  0008                     	;# 
  1112  0009                     	;# 
  1113  000A                     	;# 
  1114  000B                     	;# 
  1115  000C                     	;# 
  1116  000D                     	;# 
  1117  000E                     	;# 
  1118  0011                     	;# 
  1119  0012                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001C                     	;# 
  1129  008C                     	;# 
  1130  008D                     	;# 
  1131  008E                     	;# 
  1132  0091                     	;# 
  1133  0092                     	;# 
  1134  0095                     	;# 
  1135  0096                     	;# 
  1136  0097                     	;# 
  1137  0098                     	;# 
  1138  0099                     	;# 
  1139  009A                     	;# 
  1140  009B                     	;# 
  1141  009B                     	;# 
  1142  009C                     	;# 
  1143  009D                     	;# 
  1144  009E                     	;# 
  1145  009F                     	;# 
  1146  010C                     	;# 
  1147  010D                     	;# 
  1148  010E                     	;# 
  1149  0111                     	;# 
  1150  0112                     	;# 
  1151  0113                     	;# 
  1152  0114                     	;# 
  1153  0115                     	;# 
  1154  0116                     	;# 
  1155  0117                     	;# 
  1156  0118                     	;# 
  1157  0119                     	;# 
  1158  011D                     	;# 
  1159  018C                     	;# 
  1160  018D                     	;# 
  1161  018E                     	;# 
  1162  0191                     	;# 
  1163  0191                     	;# 
  1164  0192                     	;# 
  1165  0193                     	;# 
  1166  0193                     	;# 
  1167  0194                     	;# 
  1168  0195                     	;# 
  1169  0196                     	;# 
  1170  0199                     	;# 
  1171  019A                     	;# 
  1172  019B                     	;# 
  1173  019C                     	;# 
  1174  019D                     	;# 
  1175  019E                     	;# 
  1176  019F                     	;# 
  1177  020C                     	;# 
  1178  020D                     	;# 
  1179  0211                     	;# 
  1180  0211                     	;# 
  1181  0212                     	;# 
  1182  0212                     	;# 
  1183  0213                     	;# 
  1184  0213                     	;# 
  1185  0214                     	;# 
  1186  0214                     	;# 
  1187  0215                     	;# 
  1188  0215                     	;# 
  1189  0215                     	;# 
  1190  0216                     	;# 
  1191  0216                     	;# 
  1192  0217                     	;# 
  1193  0217                     	;# 
  1194  0391                     	;# 
  1195  0392                     	;# 
  1196  0393                     	;# 
  1197  0394                     	;# 
  1198  0395                     	;# 
  1199  0396                     	;# 
  1200  039A                     	;# 
  1201  039B                     	;# 
  1202  0611                     	;# 
  1203  0612                     	;# 
  1204  0613                     	;# 
  1205  0613                     	;# 
  1206  0614                     	;# 
  1207  0615                     	;# 
  1208  0616                     	;# 
  1209  0616                     	;# 
  1210  0691                     	;# 
  1211  0692                     	;# 
  1212  0693                     	;# 
  1213  0694                     	;# 
  1214  0695                     	;# 
  1215  0E8E                     	;# 
  1216  0E8F                     	;# 
  1217  0E90                     	;# 
  1218  0E91                     	;# 
  1219  0E92                     	;# 
  1220  0E93                     	;# 
  1221  0E94                     	;# 
  1222  0E94                     	;# 
  1223  0E95                     	;# 
  1224  0E96                     	;# 
  1225  0E97                     	;# 
  1226  0E98                     	;# 
  1227  0E99                     	;# 
  1228  0E9A                     	;# 
  1229  0E9B                     	;# 
  1230  0E9C                     	;# 
  1231  0E9D                     	;# 
  1232  0E9E                     	;# 
  1233  0E9F                     	;# 
  1234  0FE4                     	;# 
  1235  0FE5                     	;# 
  1236  0FE6                     	;# 
  1237  0FE7                     	;# 
  1238  0FE8                     	;# 
  1239  0FE9                     	;# 
  1240  0FEA                     	;# 
  1241  0FEB                     	;# 
  1242  0FED                     	;# 
  1243  0FEE                     	;# 
  1244  0FEF                     	;_WorkQue
  1245                           
  1246                           	psect	idataBANK2
  1247  1ABE                     __pidataBANK2:	
  1248                           
  1249                           ;initializer for _Status
  1250  1ABE  3449               	retlw	73
  1251  1ABF  3400               	retlw	0
  1252  1AC0  3400               	retlw	0
  1253  1AC1  3400               	retlw	0
  1254  1AC2  3400               	retlw	0
  1255  1AC3  3400               	retlw	0
  1256  1AC4  3400               	retlw	0
  1257  1AC5  3400               	retlw	0
  1258  1AC6  3400               	retlw	0
  1259  1AC7  3400               	retlw	0
  1260  1AC8  3400               	retlw	0
  1261  1AC9  3440               	retlw	64
  1262  1ACA  3400               	retlw	0
  1263                           
  1264                           	psect	idataBANK3
  1265  1AEE                     __pidataBANK3:	
  1266                           
  1267                           ;initializer for AsicPreCalc@F3343
  1268  1AEE  3498               	retlw	152
  1269  1AEF  342F               	retlw	47
  1270  1AF0  348A               	retlw	138
  1271  1AF1  3442               	retlw	66
  1272  1AF2  3491               	retlw	145
  1273  1AF3  3444               	retlw	68
  1274  1AF4  3437               	retlw	55
  1275  1AF5  3471               	retlw	113
  1276  1AF6  34CF               	retlw	207
  1277  1AF7  34FB               	retlw	251
  1278  1AF8  34C0               	retlw	192
  1279  1AF9  34B5               	retlw	181
  1280                           
  1281                           ;initializer for _Cfg
  1282  1AFA  34B0               	retlw	176
  1283  1AFB  3404               	retlw	4
  1284  1AFC  348F               	retlw	143
  1285  1AFD  3400               	retlw	0
  1286  1AFE  3400               	retlw	0
  1287  1AFF  3400               	retlw	0
  1288                           
  1289                           	psect	idataBANK6
  1290  1C35                     __pidataBANK6:	
  1291                           
  1292                           ;initializer for _BankRanges
  1293  1C35  3400               	retlw	0
  1294  1C36  3400               	retlw	0
  1295  1C37  3400               	retlw	0
  1296  1C38  3400               	retlw	0
  1297  1C39  3400               	retlw	0
  1298  1C3A  3400               	retlw	0
  1299  1C3B  3400               	retlw	0
  1300  1C3C  3440               	retlw	64
  1301  1C3D  34AA               	retlw	170
  1302  1C3E  34AA               	retlw	170
  1303  1C3F  34AA               	retlw	170
  1304  1C40  342A               	retlw	42
  1305  1C41  3400               	retlw	0
  1306  1C42  3400               	retlw	0
  1307  1C43  3400               	retlw	0
  1308  1C44  3420               	retlw	32
  1309  1C45  3499               	retlw	153
  1310  1C46  3499               	retlw	153
  1311  1C47  3499               	retlw	153
  1312  1C48  3419               	retlw	25
  1313  1C49  3455               	retlw	85
  1314  1C4A  3455               	retlw	85
  1315  1C4B  3455               	retlw	85
  1316  1C4C  3415               	retlw	21
  1317  1C4D  3492               	retlw	146
  1318  1C4E  3424               	retlw	36
  1319  1C4F  3449               	retlw	73
  1320  1C50  3412               	retlw	18
  1321  1C51  3400               	retlw	0
  1322  1C52  3400               	retlw	0
  1323  1C53  3400               	retlw	0
  1324  1C54  3410               	retlw	16
  1325                           
  1326                           	psect	strings
  1327  0800                     __pstrings:	
  1328  0800                     __stringtab:	
  1329  0800  3400               	retlw	0
  1330  0801                     __end_of__stringtab:	
  1331  0801                     _USB_SD_Ptr:	
  1332  0801  34AB               	retlw	(_sd000| (0+32768))& (0+255)
  1333  0802  3405               	retlw	(_sd001| (0+32768))& (0+255)
  1334  0803  3439               	retlw	(_sd002| (0+32768))& (0+255)
  1335  0804                     __end_of_USB_SD_Ptr:	
  1336  0804                     _USB_CD_Ptr:	
  1337  0804  346D               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1338  0805                     __end_of_USB_CD_Ptr:	
  1339  0805                     _sd001:	
  1340  0805  3434               	retlw	52
  1341  0806  3403               	retlw	3
  1342  0807  344B               	retlw	75
  1343  0808  3400               	retlw	0
  1344  0809  346C               	retlw	108
  1345  080A  3400               	retlw	0
  1346  080B  346F               	retlw	111
  1347  080C  3400               	retlw	0
  1348  080D  346E               	retlw	110
  1349  080E  3400               	retlw	0
  1350  080F  3464               	retlw	100
  1351  0810  3400               	retlw	0
  1352  0811  3469               	retlw	105
  1353  0812  3400               	retlw	0
  1354  0813  346B               	retlw	107
  1355  0814  3400               	retlw	0
  1356  0815  3465               	retlw	101
  1357  0816  3400               	retlw	0
  1358  0817  3420               	retlw	32
  1359  0818  3400               	retlw	0
  1360  0819  3450               	retlw	80
  1361  081A  3400               	retlw	0
  1362  081B  3472               	retlw	114
  1363  081C  3400               	retlw	0
  1364  081D  346F               	retlw	111
  1365  081E  3400               	retlw	0
  1366  081F  346A               	retlw	106
  1367  0820  3400               	retlw	0
  1368  0821  3465               	retlw	101
  1369  0822  3400               	retlw	0
  1370  0823  3463               	retlw	99
  1371  0824  3400               	retlw	0
  1372  0825  3474               	retlw	116
  1373  0826  3400               	retlw	0
  1374  0827  3400               	retlw	0
  1375  0828  3400               	retlw	0
  1376  0829  3400               	retlw	0
  1377  082A  3400               	retlw	0
  1378  082B  3400               	retlw	0
  1379  082C  3400               	retlw	0
  1380  082D  3400               	retlw	0
  1381  082E  3400               	retlw	0
  1382  082F  3400               	retlw	0
  1383  0830  3400               	retlw	0
  1384  0831  3400               	retlw	0
  1385  0832  3400               	retlw	0
  1386  0833  3400               	retlw	0
  1387  0834  3400               	retlw	0
  1388  0835  3400               	retlw	0
  1389  0836  3400               	retlw	0
  1390  0837  3400               	retlw	0
  1391  0838  3400               	retlw	0
  1392  0839                     __end_of_sd001:	
  1393  0839                     _sd002:	
  1394  0839  3434               	retlw	52
  1395  083A  3403               	retlw	3
  1396  083B  344B               	retlw	75
  1397  083C  3400               	retlw	0
  1398  083D  3431               	retlw	49
  1399  083E  3400               	retlw	0
  1400  083F  3436               	retlw	54
  1401  0840  3400               	retlw	0
  1402  0841  3400               	retlw	0
  1403  0842  3400               	retlw	0
  1404  0843  3400               	retlw	0
  1405  0844  3400               	retlw	0
  1406  0845  3400               	retlw	0
  1407  0846  3400               	retlw	0
  1408  0847  3400               	retlw	0
  1409  0848  3400               	retlw	0
  1410  0849  3400               	retlw	0
  1411  084A  3400               	retlw	0
  1412  084B  3400               	retlw	0
  1413  084C  3400               	retlw	0
  1414  084D  3400               	retlw	0
  1415  084E  3400               	retlw	0
  1416  084F  3400               	retlw	0
  1417  0850  3400               	retlw	0
  1418  0851  3400               	retlw	0
  1419  0852  3400               	retlw	0
  1420  0853  3400               	retlw	0
  1421  0854  3400               	retlw	0
  1422  0855  3400               	retlw	0
  1423  0856  3400               	retlw	0
  1424  0857  3400               	retlw	0
  1425  0858  3400               	retlw	0
  1426  0859  3400               	retlw	0
  1427  085A  3400               	retlw	0
  1428  085B  3400               	retlw	0
  1429  085C  3400               	retlw	0
  1430  085D  3400               	retlw	0
  1431  085E  3400               	retlw	0
  1432  085F  3400               	retlw	0
  1433  0860  3400               	retlw	0
  1434  0861  3400               	retlw	0
  1435  0862  3400               	retlw	0
  1436  0863  3400               	retlw	0
  1437  0864  3400               	retlw	0
  1438  0865  3400               	retlw	0
  1439  0866  3400               	retlw	0
  1440  0867  3400               	retlw	0
  1441  0868  3400               	retlw	0
  1442  0869  3400               	retlw	0
  1443  086A  3400               	retlw	0
  1444  086B  3400               	retlw	0
  1445  086C  3400               	retlw	0
  1446  086D                     __end_of_sd002:	
  1447  086D                     _configDescriptor1:	
  1448  086D  3409               	retlw	9
  1449  086E  3402               	retlw	2
  1450  086F  3420               	retlw	32
  1451  0870  3400               	retlw	0
  1452  0871  3401               	retlw	1
  1453  0872  3401               	retlw	1
  1454  0873  3400               	retlw	0
  1455  0874  34C0               	retlw	192
  1456  0875  3432               	retlw	50
  1457  0876  3409               	retlw	9
  1458  0877  3404               	retlw	4
  1459  0878  3400               	retlw	0
  1460  0879  3400               	retlw	0
  1461  087A  3402               	retlw	2
  1462  087B  34FF               	retlw	255
  1463  087C  34FF               	retlw	255
  1464  087D  34FF               	retlw	255
  1465  087E  3400               	retlw	0
  1466  087F  3407               	retlw	7
  1467  0880  3405               	retlw	5
  1468  0881  3401               	retlw	1
  1469  0882  3402               	retlw	2
  1470  0883  3440               	retlw	64
  1471  0884  3400               	retlw	0
  1472  0885  3401               	retlw	1
  1473  0886  3407               	retlw	7
  1474  0887  3405               	retlw	5
  1475  0888  3481               	retlw	129
  1476  0889  3402               	retlw	2
  1477  088A  3440               	retlw	64
  1478  088B  3400               	retlw	0
  1479  088C  3401               	retlw	1
  1480  088D                     __end_of_configDescriptor1:	
  1481  088D                     _device_dsc:	
  1482  088D  3412               	retlw	18
  1483  088E  3401               	retlw	1
  1484  088F  3400               	retlw	0
  1485  0890  3402               	retlw	2
  1486  0891  3400               	retlw	0
  1487  0892  3400               	retlw	0
  1488  0893  3400               	retlw	0
  1489  0894  3408               	retlw	8
  1490  0895  34D8               	retlw	216
  1491  0896  3404               	retlw	4
  1492  0897  340A               	retlw	10
  1493  0898  34F6               	retlw	246
  1494  0899  3400               	retlw	0
  1495  089A  3400               	retlw	0
  1496  089B  3401               	retlw	1
  1497  089C  3402               	retlw	2
  1498  089D  3400               	retlw	0
  1499  089E  3401               	retlw	1
  1500  089F                     __end_of_device_dsc:	
  1501  089F                     _ID:	
  1502  089F  3410               	retlw	16
  1503  08A0  344B               	retlw	75
  1504  08A1  3431               	retlw	49
  1505  08A2  3436               	retlw	54
  1506  08A3  3400               	retlw	0
  1507  08A4  3400               	retlw	0
  1508  08A5  3400               	retlw	0
  1509  08A6  3400               	retlw	0
  1510  08A7  34EF               	retlw	239
  1511  08A8  34BE               	retlw	190
  1512  08A9  34AD               	retlw	173
  1513  08AA  34DE               	retlw	222
  1514  08AB                     __end_of_ID:	
  1515  08AB                     _sd000:	
  1516  08AB  3404               	retlw	4
  1517  08AC  3403               	retlw	3
  1518  08AD  3409               	retlw	9
  1519  08AE  3404               	retlw	4
  1520  08AF                     __end_of_sd000:	
  1521                           
  1522                           	psect	nvBANK2
  1523  016A                     __pnvBANK2:	
  1524  016A                     _FanLevel:	
  1525  016A                     	ds	1
  1526  016B                     _HashTime:	
  1527  016B                     	ds	1
  1528  016C                     _BankSize:	
  1529  016C                     	ds	1
  1530                           
  1531                           	psect	nvBANK3
  1532  01E0                     __pnvBANK3:	
  1533  01E0                     _TempTarget:	
  1534  01E0                     	ds	1
  1535  000B                     _INTCONbits	set	11
  1536  0012                     _PIR2bits	set	18
  1537  001B                     _PR2	set	27
  1538  001C                     _T2CONbits	set	28
  1539  0015                     _TMR0	set	21
  1540  005F                     _GIE	set	95
  1541  008D                     _RCIF	set	141
  1542  008B                     _SSP1IF	set	139
  1543  005A                     _TMR0IF	set	90
  1544  0089                     _TMR2IF	set	137
  1545  00E2                     _TMR2ON	set	226
  1546  009D                     _ADCON0bits	set	157
  1547  009E                     _ADCON1bits	set	158
  1548  009F                     _ADCON2bits	set	159
  1549  009C                     _ADRESH	set	156
  1550  0095                     _OPTION_REGbits	set	149
  1551  0099                     _OSCCON	set	153
  1552  0098                     _OSCTUNE	set	152
  1553  0092                     _PIE2bits	set	146
  1554  008C                     _TRISAbits	set	140
  1555  008D                     _TRISBbits	set	141
  1556  008E                     _TRISCbits	set	142
  1557  04AD                     _TMR0CS	set	1197
  1558  010C                     _LATAbits	set	268
  1559  010E                     _LATC	set	270
  1560  018C                     _ANSELA	set	396
  1561  018D                     _ANSELB	set	397
  1562  018D                     _ANSELBbits	set	397
  1563  018E                     _ANSELC	set	398
  1564  019F                     _BAUDCONbits	set	415
  1565  0199                     _RCREG	set	409
  1566  019D                     _RCSTAbits	set	413
  1567  019E                     _TXSTAbits	set	414
  1568  0212                     _SSPADD	set	530
  1569  0211                     _SSPBUF	set	529
  1570  0215                     _SSPCON1bits	set	533
  1571  0216                     _SSPCON2bits	set	534
  1572  0217                     _SSPCON3bits	set	535
  1573  0214                     _SSPSTATbits	set	532
  1574  10AD                     _SSP1EN	set	4269
  1575  039B                     _ACTCON	set	923
  1576  0396                     _IOCBF	set	918
  1577  0394                     _IOCBPbits	set	916
  1578  0613                     _PWM1CON	set	1555
  1579  0612                     _PWM1DCH	set	1554
  1580  0611                     _PWM1DCL	set	1553
  1581  309E                     _PWM1OE	set	12446
  1582  0E96                     _UADDR	set	3734
  1583  0E91                     _UCFG	set	3729
  1584  0E8E                     _UCON	set	3726
  1585  0E8E                     _UCONbits	set	3726
  1586  0E97                     _UEIE	set	3735
  1587  0E93                     _UEIR	set	3731
  1588  0E98                     _UEP0bits	set	3736
  1589  0E92                     _UIE	set	3730
  1590  0E92                     _UIEbits	set	3730
  1591  0E90                     _UIR	set	3728
  1592  0E90                     _UIRbits	set	3728
  1593  0E8F                     _USTAT	set	3727
  1594  0E98                     _UEP0	set	3736
  1595  0E99                     _UEP1	set	3737
  1596                           
  1597                           ; #config settings
  1598  0000                     
  1599                           	psect	cinit
  1600  078F                     start_initialization:	
  1601  078F                     __initialization:		;BIGRAM
  1602                           
  1603                           ; Clear objects allocated to BIGRAM
  1604  078F  3088               	movlw	low (0+8840)
  1605  0790  0084               	movwf	4
  1606  0791  3022               	movlw	high (0+8840)
  1607  0792  0085               	movwf	5
  1608  0793  3068               	movlw	104
  1609  0794  00FE               	movwf	btemp
  1610  0795  3001               	movlw	1
  1611  0796  00FF               	movwf	btemp+1
  1612  0797  319A  22B2  3187   	fcall	clear_ram0
  1613                           
  1614                           ; Clear objects allocated to BANK0
  1615  079A  01E8               	clrf	__pbssBANK0& (0+127)
  1616  079B  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1617  079C  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1618  079D  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1619  079E  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1620  079F  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  1621  07A0  01EE               	clrf	(__pbssBANK0+6)& (0+127)
  1622  07A1  01EF               	clrf	(__pbssBANK0+7)& (0+127)
  1623                           
  1624                           ; Clear objects allocated to BANK1
  1625  07A2  0021               	movlb	1	; select bank1
  1626  07A3  01EE               	clrf	__pbssBANK1& (0+127)
  1627  07A4  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1628                           
  1629                           ; Clear objects allocated to BANK2
  1630  07A5  3020               	movlw	low __pbssBANK2
  1631  07A6  0084               	movwf	4
  1632  07A7  3001               	movlw	high __pbssBANK2
  1633  07A8  0085               	movwf	5
  1634  07A9  3032               	movlw	50
  1635  07AA  00FE               	movwf	btemp
  1636  07AB  3000               	movlw	0
  1637  07AC  00FF               	movwf	btemp+1
  1638  07AD  319A  22B2  3187   	fcall	clear_ram0
  1639                           
  1640                           ; Clear objects allocated to BANK3
  1641  07B0  30A0               	movlw	low __pbssBANK3
  1642  07B1  0084               	movwf	4
  1643  07B2  3001               	movlw	high __pbssBANK3
  1644  07B3  0085               	movwf	5
  1645  07B4  302E               	movlw	46
  1646  07B5  00FE               	movwf	btemp
  1647  07B6  3000               	movlw	0
  1648  07B7  00FF               	movwf	btemp+1
  1649  07B8  319A  22B2  3187   	fcall	clear_ram0
  1650                           
  1651                           ; Clear objects allocated to BANK4
  1652  07BB  3060               	movlw	low __pbssBANK4
  1653  07BC  0084               	movwf	4
  1654  07BD  3002               	movlw	high __pbssBANK4
  1655  07BE  0085               	movwf	5
  1656  07BF  3010               	movlw	16
  1657  07C0  00FE               	movwf	btemp
  1658  07C1  3000               	movlw	0
  1659  07C2  00FF               	movwf	btemp+1
  1660  07C3  319A  22B2  3187   	fcall	clear_ram0
  1661                           
  1662                           ; Clear objects allocated to BANK6
  1663  07C6  3020               	movlw	low __pbssBANK6
  1664  07C7  0084               	movwf	4
  1665  07C8  3003               	movlw	high __pbssBANK6
  1666  07C9  0085               	movwf	5
  1667  07CA  3020               	movlw	32
  1668  07CB  00FE               	movwf	btemp
  1669  07CC  3000               	movlw	0
  1670  07CD  00FF               	movwf	btemp+1
  1671  07CE  319A  22B2  3187   	fcall	clear_ram0
  1672                           
  1673                           ; Initialize objects allocated to BANK2
  1674  07D1  30BE               	movlw	low __pidataBANK2
  1675  07D2  0084               	movwf	4
  1676  07D3  309A               	movlw	(high __pidataBANK2)| (0+128)
  1677  07D4  0085               	movwf	5
  1678  07D5  3052               	movlw	low __pdataBANK2
  1679  07D6  0086               	movwf	6
  1680  07D7  3001               	movlw	high __pdataBANK2
  1681  07D8  0087               	movwf	7
  1682  07D9  3000               	movlw	0
  1683  07DA  00FF               	movwf	btemp+1
  1684  07DB  300D               	movlw	13
  1685  07DC  319A  22A6  3187   	fcall	init_ram
  1686                           
  1687                           ; Initialize objects allocated to BANK3
  1688  07DF  30EE               	movlw	low __pidataBANK3
  1689  07E0  0084               	movwf	4
  1690  07E1  309A               	movlw	(high __pidataBANK3)| (0+128)
  1691  07E2  0085               	movwf	5
  1692  07E3  30CE               	movlw	low __pdataBANK3
  1693  07E4  0086               	movwf	6
  1694  07E5  3001               	movlw	high __pdataBANK3
  1695  07E6  0087               	movwf	7
  1696  07E7  3000               	movlw	0
  1697  07E8  00FF               	movwf	btemp+1
  1698  07E9  3012               	movlw	18
  1699  07EA  319A  22A6  3187   	fcall	init_ram
  1700                           
  1701                           ; Initialize objects allocated to BANK6
  1702  07ED  3035               	movlw	low __pidataBANK6
  1703  07EE  0084               	movwf	4
  1704  07EF  309C               	movlw	(high __pidataBANK6)| (0+128)
  1705  07F0  0085               	movwf	5
  1706  07F1  3040               	movlw	low __pdataBANK6
  1707  07F2  0086               	movwf	6
  1708  07F3  3003               	movlw	high __pdataBANK6
  1709  07F4  0087               	movwf	7
  1710  07F5  3000               	movlw	0
  1711  07F6  00FF               	movwf	btemp+1
  1712  07F7  3020               	movlw	32
  1713  07F8  319A  22A6         	fcall	init_ram
  1714  07FA                     end_of_initialization:	
  1715                           ;End of C runtime variable initialization code
  1716                           
  1717  07FA                     __end_of__initialization:	
  1718  07FA  0020               	movlb	0
  1719  07FB  319B  2B54         	ljmp	_main	;jump to C main() function
  1720                           
  1721                           	psect	bssBANK0
  1722  0068                     __pbssBANK0:	
  1723  0068                     _pBDTEntryIn:	
  1724  0068                     	ds	2
  1725  006A                     _I2CCmd:	
  1726  006A                     	ds	1
  1727  006B                     _USBDeferStatusStagePacket:	
  1728  006B                     	ds	1
  1729  006C                     _controlTransferState:	
  1730  006C                     	ds	1
  1731  006D                     _pBDTEntryEP0OutCurrent:	
  1732  006D                     	ds	1
  1733  006E                     _pBDTEntryEP0OutNext:	
  1734  006E                     	ds	1
  1735  006F                     _ptr:	
  1736  006F                     	ds	1
  1737                           
  1738                           	psect	bssBANK1
  1739  00EE                     __pbssBANK1:	
  1740  00EE                     _USBDeviceState:	
  1741  00EE                     	ds	1
  1742  00EF                     _USTATcopy:	
  1743  00EF                     	ds	1
  1744                           
  1745                           	psect	bssBANK2
  1746  0120                     __pbssBANK2:	
  1747  0120                     USBCBSendResume@delay_count:	
  1748  0120                     	ds	2
  1749  0122                     _Step:	
  1750  0122                     	ds	2
  1751  0124                     _ep_data_in:	
  1752  0124                     	ds	2
  1753  0126                     _ep_data_out:	
  1754  0126                     	ds	2
  1755  0128                     _pBDTEntryOut:	
  1756  0128                     	ds	2
  1757  012A                     _send32_data:	
  1758  012A                     	ds	2
  1759  012C                     _BothEP0OutUOWNsSet:	
  1760  012C                     	ds	1
  1761  012D                     _I2CAddr:	
  1762  012D                     	ds	1
  1763  012E                     _I2CCount:	
  1764  012E                     	ds	1
  1765  012F                     _I2CInBuf:	
  1766  012F                     	ds	1
  1767  0130                     _I2CState:	
  1768  0130                     	ds	1
  1769  0131                     _LastTemp:	
  1770  0131                     	ds	1
  1771  0132                     _RemoteWakeup:	
  1772  0132                     	ds	1
  1773  0133                     _ResultQC:	
  1774  0133                     	ds	1
  1775  0134                     _SlaveAddress:	
  1776  0134                     	ds	1
  1777  0135                     _SlowTick:	
  1778  0135                     	ds	1
  1779  0136                     _TimeOut:	
  1780  0136                     	ds	1
  1781  0137                     _USBBusIsSuspended:	
  1782  0137                     	ds	1
  1783  0138                     _USBDeferINDataStagePackets:	
  1784  0138                     	ds	1
  1785  0139                     _USBDeferOUTDataStagePackets:	
  1786  0139                     	ds	1
  1787  013A                     _USBGenericInHandle:	
  1788  013A                     	ds	1
  1789  013B                     _USBGenericOutHandle:	
  1790  013B                     	ds	1
  1791  013C                     _USBStatusStageEnabledFlag1:	
  1792  013C                     	ds	1
  1793  013D                     _USBStatusStageEnabledFlag2:	
  1794  013D                     	ds	1
  1795  013E                     _USBStatusStageTimeoutCounter:	
  1796  013E                     	ds	1
  1797  013F                     _VerySlowTick:	
  1798  013F                     	ds	1
  1799  0140                     _WorkNow:	
  1800  0140                     	ds	1
  1801  0141                     _endpoint_number:	
  1802  0141                     	ds	1
  1803  0142                     _last_bit0:	
  1804  0142                     	ds	1
  1805  0143                     _last_bit1:	
  1806  0143                     	ds	1
  1807  0144                     _pDst:	
  1808  0144                     	ds	1
  1809  0145                     _send32_count:	
  1810  0145                     	ds	1
  1811  0146                     _shortPacketStatus:	
  1812  0146                     	ds	1
  1813  0147                     _inPipes:	
  1814  0147                     	ds	5
  1815  014C                     _Error:	
  1816  014C                     	ds	2
  1817  014E                     _USBActiveConfiguration:	
  1818  014E                     	ds	1
  1819  014F                     _USBAlternateInterface:	
  1820  014F                     	ds	1
  1821  0150                     _WQI:	
  1822  0150                     	ds	1
  1823  0151                     _WQX:	
  1824  0151                     	ds	1
  1825                           
  1826                           	psect	dataBANK2
  1827  0152                     __pdataBANK2:	
  1828  0152                     _Status:	
  1829  0152                     	ds	13
  1830                           
  1831                           	psect	bssBANK3
  1832  01A0                     __pbssBANK3:	
  1833  01A0                     _outPipes:	
  1834  01A0                     	ds	6
  1835  01A6                     _LastError:	
  1836  01A6                     	ds	2
  1837  01A8                     _PrecalcHashes:	
  1838  01A8                     	ds	24
  1839  01C0                     _ClockCfg:	
  1840  01C0                     	ds	8
  1841  01C8                     _ResultQue:	
  1842  01C8                     	ds	6
  1843                           
  1844                           	psect	dataBANK3
  1845  01CE                     __pdataBANK3:	
  1846  01CE                     AsicPreCalc@F3343:	
  1847  01CE                     	ds	12
  1848  01DA                     _Cfg:	
  1849  01DA                     	ds	6
  1850                           
  1851                           	psect	bssBANK4
  1852  0260                     __pbssBANK4:	
  1853  0260                     _buf:	
  1854  0260                     	ds	16
  1855                           
  1856                           	psect	bssBANK6
  1857  0320                     __pbssBANK6:	
  1858  0320                     _NonceRanges:	
  1859  0320                     	ds	32
  1860                           
  1861                           	psect	dataBANK6
  1862  0340                     __pdataBANK6:	
  1863  0340                     _BankRanges:	
  1864  0340                     	ds	32
  1865                           
  1866                           	psect	clrtext
  1867  1AB2                     clear_ram0:	
  1868                           ;	Called with FSR0 containing the base address, and
  1869                           ;	btemp/btemp+1 has the size to clear
  1870                           
  1871  1AB2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1872  1AB3                     clrloop0:	
  1873  1AB3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1874  1AB4  3101               	addfsr 0,1
  1875  1AB5  3001               	movlw	1
  1876  1AB6  02FE               	subwf	126,f
  1877  1AB7  3000               	movlw	0
  1878  1AB8  3BFF               	subwfb	127,f
  1879  1AB9  087F               	movf	127,w
  1880  1ABA  047E               	iorwf	126,w
  1881  1ABB  1903               	btfsc	3,2
  1882  1ABC  3400               	retlw	0	;all done for this memory range, return
  1883  1ABD  2AB3               	goto	clrloop0	;have we reached the end yet?
  1884                           
  1885                           	psect	inittext
  1886  1AA6                     init_ram:	
  1887  1AA6  00FE               	movwf	126
  1888  1AA7                     initloop:	
  1889  1AA7  0012               	moviw fsr0++
  1890  1AA8  001E               	movwi fsr1++
  1891  1AA9  3001               	movlw	1
  1892  1AAA  02FE               	subwf	126,f
  1893  1AAB  3000               	movlw	0
  1894  1AAC  3BFF               	subwfb	127,f
  1895  1AAD  087F               	movf	127,w
  1896  1AAE  047E               	iorwf	126,w
  1897  1AAF  1903               	btfsc	3,2
  1898  1AB0  3400               	retlw	0
  1899  1AB1  2AA7               	goto	initloop
  1900                           
  1901                           	psect	cstackBANK2
  1902  015F                     __pcstackBANK2:	
  1903  015F                     _ProcessCmd$1976:	
  1904                           
  1905                           ; 2 bytes @ 0x0
  1906  015F                     	ds	2
  1907  0161                     ProcessCmd@cmd:	
  1908                           
  1909                           ; 1 bytes @ 0x2
  1910  0161                     	ds	1
  1911  0162                     ??_ProcessIO:	
  1912                           
  1913                           ; 0 bytes @ 0x3
  1914  0162                     	ds	4
  1915  0166                     _ProcessIO$2274:	
  1916                           
  1917                           ; 2 bytes @ 0x7
  1918  0166                     	ds	2
  1919  0168                     _ProcessIO$2308:	
  1920                           
  1921                           ; 2 bytes @ 0x9
  1922  0168                     	ds	2
  1923                           
  1924                           	psect	cstackBANK1
  1925  00A0                     __pcstackBANK1:	
  1926  00A0                     ??_SendCmdReply:	
  1927  00A0                     ?_AsicPreCalc:	
  1928                           ; 0 bytes @ 0x0
  1929                           
  1930  00A0                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1931                           ; 0 bytes @ 0x0
  1932                           
  1933  00A0                     ?___ftmul:	
  1934                           ; 1 bytes @ 0x0
  1935                           
  1936  00A0                     AsicPreCalc@work:	
  1937                           ; 3 bytes @ 0x0
  1938                           
  1939  00A0                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1940                           ; 2 bytes @ 0x0
  1941                           
  1942  00A0                     _DetectAsics$2765:	
  1943                           ; 2 bytes @ 0x0
  1944                           
  1945  00A0                     ___ftmul@f1:	
  1946                           ; 2 bytes @ 0x0
  1947                           
  1948                           
  1949                           ; 3 bytes @ 0x0
  1950  00A0                     	ds	2
  1951  00A2                     ??_AsicPreCalc:	
  1952  00A2                     DetectAsics@x:	
  1953                           ; 0 bytes @ 0x2
  1954                           
  1955  00A2                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1956                           ; 1 bytes @ 0x2
  1957                           
  1958                           
  1959                           ; 2 bytes @ 0x2
  1960  00A2                     	ds	1
  1961  00A3                     ___ftmul@f2:	
  1962                           
  1963                           ; 3 bytes @ 0x3
  1964  00A3                     	ds	1
  1965  00A4                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1966                           
  1967                           ; 2 bytes @ 0x4
  1968  00A4                     	ds	2
  1969  00A6                     ??_USBWakeFromSuspend:	
  1970  00A6                     ??_USBSuspend:	
  1971                           ; 0 bytes @ 0x6
  1972                           
  1973  00A6                     ??_USBStdFeatureReqHandler:	
  1974                           ; 0 bytes @ 0x6
  1975                           
  1976  00A6                     ??_USBStdSetCfgHandler:	
  1977                           ; 0 bytes @ 0x6
  1978                           
  1979  00A6                     ??___ftmul:	
  1980                           ; 0 bytes @ 0x6
  1981                           
  1982                           
  1983                           ; 0 bytes @ 0x6
  1984  00A6                     	ds	1
  1985  00A7                     USBStdSetCfgHandler@p:	
  1986                           
  1987                           ; 2 bytes @ 0x7
  1988  00A7                     	ds	1
  1989  00A8                     USBStdFeatureReqHandler@pUEP:	
  1990                           
  1991                           ; 2 bytes @ 0x8
  1992  00A8                     	ds	1
  1993  00A9                     USBStdSetCfgHandler@i_1089:	
  1994                           
  1995                           ; 1 bytes @ 0x9
  1996  00A9                     	ds	1
  1997  00AA                     USBStdSetCfgHandler@i:	
  1998  00AA                     USBStdFeatureReqHandler@current_ep_data:	
  1999                           ; 1 bytes @ 0xA
  2000                           
  2001  00AA                     ___ftmul@exp:	
  2002                           ; 1 bytes @ 0xA
  2003                           
  2004                           
  2005                           ; 1 bytes @ 0xA
  2006  00AA                     	ds	1
  2007  00AB                     USBStdFeatureReqHandler@p:	
  2008  00AB                     ___ftmul@f3_as_product:	
  2009                           ; 1 bytes @ 0xB
  2010                           
  2011                           
  2012                           ; 3 bytes @ 0xB
  2013  00AB                     	ds	1
  2014  00AC                     ??_USBCheckStdRequest:	
  2015  00AC                     AsicPreCalc@K:	
  2016                           ; 0 bytes @ 0xC
  2017                           
  2018                           
  2019                           ; 12 bytes @ 0xC
  2020  00AC                     	ds	1
  2021  00AD                     ??_USBCtrlTrfSetupHandler:	
  2022                           
  2023                           ; 0 bytes @ 0xD
  2024  00AD                     	ds	1
  2025  00AE                     ??_USBCtrlEPService:	
  2026  00AE                     ___ftmul@cntr:	
  2027                           ; 0 bytes @ 0xE
  2028                           
  2029                           
  2030                           ; 1 bytes @ 0xE
  2031  00AE                     	ds	1
  2032  00AF                     ___ftmul@sign:	
  2033                           
  2034                           ; 1 bytes @ 0xF
  2035  00AF                     	ds	1
  2036  00B0                     ?___ftneg:	
  2037  00B0                     ___ftneg@f1:	
  2038                           ; 3 bytes @ 0x10
  2039                           
  2040                           
  2041                           ; 3 bytes @ 0x10
  2042  00B0                     	ds	1
  2043  00B1                     USBCtrlEPService@setup_cnt:	
  2044                           
  2045                           ; 1 bytes @ 0x11
  2046  00B1                     	ds	1
  2047  00B2                     ??_USBDeviceTasks:	
  2048                           
  2049                           ; 0 bytes @ 0x12
  2050  00B2                     	ds	1
  2051  00B3                     ?___ftadd:	
  2052  00B3                     ___ftadd@f1:	
  2053                           ; 3 bytes @ 0x13
  2054                           
  2055                           
  2056                           ; 3 bytes @ 0x13
  2057  00B3                     	ds	1
  2058  00B4                     USBDeviceTasks@i:	
  2059                           
  2060                           ; 1 bytes @ 0x14
  2061  00B4                     	ds	2
  2062  00B6                     ___ftadd@f2:	
  2063                           
  2064                           ; 3 bytes @ 0x16
  2065  00B6                     	ds	2
  2066  00B8                     AsicPreCalc@m:	
  2067                           
  2068                           ; 32 bytes @ 0x18
  2069  00B8                     	ds	1
  2070  00B9                     ??___ftadd:	
  2071                           
  2072                           ; 0 bytes @ 0x19
  2073  00B9                     	ds	4
  2074  00BD                     ___ftadd@sign:	
  2075                           
  2076                           ; 1 bytes @ 0x1D
  2077  00BD                     	ds	1
  2078  00BE                     ___ftadd@exp2:	
  2079                           
  2080                           ; 1 bytes @ 0x1E
  2081  00BE                     	ds	1
  2082  00BF                     ___ftadd@exp1:	
  2083                           
  2084                           ; 1 bytes @ 0x1F
  2085  00BF                     	ds	1
  2086  00C0                     ?___ftdiv:	
  2087  00C0                     ___ftdiv@f2:	
  2088                           ; 3 bytes @ 0x20
  2089                           
  2090                           
  2091                           ; 3 bytes @ 0x20
  2092  00C0                     	ds	3
  2093  00C3                     ___ftdiv@f1:	
  2094                           
  2095                           ; 3 bytes @ 0x23
  2096  00C3                     	ds	3
  2097  00C6                     ??___ftdiv:	
  2098                           
  2099                           ; 0 bytes @ 0x26
  2100  00C6                     	ds	4
  2101  00CA                     ___ftdiv@cntr:	
  2102                           
  2103                           ; 1 bytes @ 0x2A
  2104  00CA                     	ds	1
  2105  00CB                     ___ftdiv@f3:	
  2106                           
  2107                           ; 3 bytes @ 0x2B
  2108  00CB                     	ds	3
  2109  00CE                     ___ftdiv@exp:	
  2110                           
  2111                           ; 1 bytes @ 0x2E
  2112  00CE                     	ds	1
  2113  00CF                     ___ftdiv@sign:	
  2114                           
  2115                           ; 1 bytes @ 0x2F
  2116  00CF                     	ds	1
  2117  00D0                     ?___fttol:	
  2118  00D0                     ___fttol@f1:	
  2119                           ; 4 bytes @ 0x30
  2120                           
  2121                           
  2122                           ; 3 bytes @ 0x30
  2123  00D0                     	ds	4
  2124  00D4                     ??___fttol:	
  2125                           
  2126                           ; 0 bytes @ 0x34
  2127  00D4                     	ds	4
  2128  00D8                     ___fttol@sign1:	
  2129  00D8                     AsicPreCalc@z:	
  2130                           ; 1 bytes @ 0x38
  2131                           
  2132                           
  2133                           ; 4 bytes @ 0x38
  2134  00D8                     	ds	1
  2135  00D9                     ___fttol@lval:	
  2136                           
  2137                           ; 4 bytes @ 0x39
  2138  00D9                     	ds	3
  2139  00DC                     AsicPreCalc@y:	
  2140                           
  2141                           ; 4 bytes @ 0x3C
  2142  00DC                     	ds	1
  2143  00DD                     ___fttol@exp1:	
  2144                           
  2145                           ; 1 bytes @ 0x3D
  2146  00DD                     	ds	1
  2147  00DE                     ?_SetAsicClock:	
  2148  00DE                     ??_UpdateFanLevel:	
  2149                           ; 0 bytes @ 0x3E
  2150                           
  2151  00DE                     SetAsicClock@frequency:	
  2152                           ; 0 bytes @ 0x3E
  2153                           
  2154                           
  2155                           ; 4 bytes @ 0x3E
  2156  00DE                     	ds	2
  2157  00E0                     AsicPreCalc@x:	
  2158                           
  2159                           ; 4 bytes @ 0x40
  2160  00E0                     	ds	2
  2161  00E2                     ??_SetAsicClock:	
  2162  00E2                     _UpdateFanLevel$2766:	
  2163                           ; 0 bytes @ 0x42
  2164                           
  2165                           
  2166                           ; 3 bytes @ 0x42
  2167  00E2                     	ds	2
  2168  00E4                     AsicPreCalc@n:	
  2169                           
  2170                           ; 1 bytes @ 0x44
  2171  00E4                     	ds	1
  2172  00E5                     ??_AsicPushWork:	
  2173  00E5                     ??_WorkTick:	
  2174                           ; 0 bytes @ 0x45
  2175                           
  2176                           
  2177                           ; 0 bytes @ 0x45
  2178  00E5                     	ds	1
  2179  00E6                     SetAsicClock@CLOCK_F_VALUE:	
  2180                           
  2181                           ; 4 bytes @ 0x46
  2182  00E6                     	ds	4
  2183  00EA                     ??_ProcessCmd:	
  2184                           
  2185                           ; 0 bytes @ 0x4A
  2186  00EA                     	ds	4
  2187                           
  2188                           	psect	cstackCOMMON
  2189  0070                     __pcstackCOMMON:	
  2190  0070                     ?_USBWakeFromSuspend:	
  2191  0070                     ?_USBSuspend:	
  2192                           ; 0 bytes @ 0x0
  2193                           
  2194  0070                     ?_USBCtrlEPAllowStatusStage:	
  2195                           ; 0 bytes @ 0x0
  2196                           
  2197  0070                     ?_USBStallHandler:	
  2198                           ; 0 bytes @ 0x0
  2199                           
  2200  0070                     ?_USBCtrlEPService:	
  2201                           ; 0 bytes @ 0x0
  2202                           
  2203  0070                     ?_USBCtrlTrfTxService:	
  2204                           ; 0 bytes @ 0x0
  2205                           
  2206  0070                     ?_USBCtrlTrfSetupHandler:	
  2207                           ; 0 bytes @ 0x0
  2208                           
  2209  0070                     ?_USBCtrlTrfOutHandler:	
  2210                           ; 0 bytes @ 0x0
  2211                           
  2212  0070                     ?_USBCtrlTrfInHandler:	
  2213                           ; 0 bytes @ 0x0
  2214                           
  2215  0070                     ?_USBCheckStdRequest:	
  2216                           ; 0 bytes @ 0x0
  2217                           
  2218  0070                     ?_USBStdFeatureReqHandler:	
  2219                           ; 0 bytes @ 0x0
  2220                           
  2221  0070                     ?_Send32:	
  2222                           ; 0 bytes @ 0x0
  2223                           
  2224  0070                     ?_AsicPushWork:	
  2225                           ; 0 bytes @ 0x0
  2226                           
  2227  0070                     ?_UpdateFanLevel:	
  2228                           ; 0 bytes @ 0x0
  2229                           
  2230  0070                     ?_InitializeSystem:	
  2231                           ; 0 bytes @ 0x0
  2232                           
  2233  0070                     ?_ProcessIO:	
  2234                           ; 0 bytes @ 0x0
  2235                           
  2236  0070                     ?_UserInit:	
  2237                           ; 0 bytes @ 0x0
  2238                           
  2239  0070                     ?_USBDeviceInit:	
  2240                           ; 0 bytes @ 0x0
  2241                           
  2242  0070                     ?_USBDeviceTasks:	
  2243                           ; 0 bytes @ 0x0
  2244                           
  2245  0070                     ?_USBCtrlEPAllowDataStage:	
  2246                           ; 0 bytes @ 0x0
  2247                           
  2248  0070                     ?_USBCtrlEPServiceComplete:	
  2249                           ; 0 bytes @ 0x0
  2250                           
  2251  0070                     ?_USBCtrlTrfRxService:	
  2252                           ; 0 bytes @ 0x0
  2253                           
  2254  0070                     ?_USBStdSetCfgHandler:	
  2255                           ; 0 bytes @ 0x0
  2256                           
  2257  0070                     ?_USBStdGetDscHandler:	
  2258                           ; 0 bytes @ 0x0
  2259                           
  2260  0070                     ?_USBStdGetStatusHandler:	
  2261                           ; 0 bytes @ 0x0
  2262                           
  2263  0070                     ?_USBCheckVendorRequest:	
  2264                           ; 0 bytes @ 0x0
  2265                           
  2266  0070                     ?_ProcessCmd:	
  2267                           ; 0 bytes @ 0x0
  2268                           
  2269  0070                     ?_DetectAsics:	
  2270                           ; 0 bytes @ 0x0
  2271                           
  2272  0070                     ?_WorkTick:	
  2273                           ; 0 bytes @ 0x0
  2274                           
  2275  0070                     ?_ResultRx:	
  2276                           ; 0 bytes @ 0x0
  2277                           
  2278  0070                     ?_InitFAN:	
  2279                           ; 0 bytes @ 0x0
  2280                           
  2281  0070                     ?_InitTempSensor:	
  2282                           ; 0 bytes @ 0x0
  2283                           
  2284  0070                     ?_InitWorkTick:	
  2285                           ; 0 bytes @ 0x0
  2286                           
  2287  0070                     ?_InitResultRx:	
  2288                           ; 0 bytes @ 0x0
  2289                           
  2290  0070                     ?_ISRCode:	
  2291                           ; 0 bytes @ 0x0
  2292                           
  2293  0070                     ?_USBCBSuspend:	
  2294                           ; 0 bytes @ 0x0
  2295                           
  2296  0070                     ?_USBCBWakeFromSuspend:	
  2297                           ; 0 bytes @ 0x0
  2298                           
  2299  0070                     ?_USBCB_SOF_Handler:	
  2300                           ; 0 bytes @ 0x0
  2301                           
  2302  0070                     ?_USBCBErrorHandler:	
  2303                           ; 0 bytes @ 0x0
  2304                           
  2305  0070                     ?_USBCBCheckOtherReq:	
  2306                           ; 0 bytes @ 0x0
  2307                           
  2308  0070                     ?_USBCBStdSetDscHandler:	
  2309                           ; 0 bytes @ 0x0
  2310                           
  2311  0070                     ?_USBCBInitEP:	
  2312                           ; 0 bytes @ 0x0
  2313                           
  2314  0070                     ?i1___bmul:	
  2315                           ; 0 bytes @ 0x0
  2316                           
  2317  0070                     ?_main:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320  0070                     ?i1___wmul:	
  2321                           ; 2 bytes @ 0x0
  2322                           
  2323  0070                     i1___bmul@multiplicand:	
  2324                           ; 2 bytes @ 0x0
  2325                           
  2326  0070                     i1___wmul@multiplier:	
  2327                           ; 1 bytes @ 0x0
  2328                           
  2329                           
  2330                           ; 2 bytes @ 0x0
  2331  0070                     	ds	1
  2332  0071                     ??i1___bmul:	
  2333                           
  2334                           ; 0 bytes @ 0x1
  2335  0071                     	ds	1
  2336  0072                     i1___bmul@multiplier:	
  2337  0072                     i1___wmul@multiplicand:	
  2338                           ; 1 bytes @ 0x2
  2339                           
  2340                           
  2341                           ; 2 bytes @ 0x2
  2342  0072                     	ds	1
  2343  0073                     i1___bmul@product:	
  2344                           
  2345                           ; 1 bytes @ 0x3
  2346  0073                     	ds	1
  2347  0074                     ??i1___wmul:	
  2348  0074                     i1___wmul@product:	
  2349                           ; 0 bytes @ 0x4
  2350                           
  2351                           
  2352                           ; 2 bytes @ 0x4
  2353  0074                     	ds	2
  2354  0076                     ?i1_SendCmdReply:	
  2355  0076                     i1SendCmdReply@cmd:	
  2356                           ; 0 bytes @ 0x6
  2357                           
  2358                           
  2359                           ; 2 bytes @ 0x6
  2360  0076                     	ds	2
  2361  0078                     i1SendCmdReply@data:	
  2362                           
  2363                           ; 2 bytes @ 0x8
  2364  0078                     	ds	2
  2365  007A                     i1SendCmdReply@count:	
  2366                           
  2367                           ; 1 bytes @ 0xA
  2368  007A                     	ds	1
  2369  007B                     i1SendCmdReply@n:	
  2370                           
  2371                           ; 1 bytes @ 0xB
  2372  007B                     	ds	1
  2373  007C                     ??_ResultRx:	
  2374                           
  2375                           ; 0 bytes @ 0xC
  2376  007C                     	ds	1
  2377  007D                     ??_ISRCode:	
  2378                           
  2379                           ; 0 bytes @ 0xD
  2380  007D                     	ds	1
  2381                           
  2382                           	psect	cstackBANK0
  2383  0050                     __pcstackBANK0:	
  2384  0050                     ??i1_SendCmdReply:	
  2385                           
  2386                           ; 0 bytes @ 0x0
  2387  0050                     	ds	8
  2388  0058                     ??_USBCtrlEPAllowStatusStage:	
  2389  0058                     ??_USBStallHandler:	
  2390                           ; 0 bytes @ 0x8
  2391                           
  2392  0058                     ?_USBConfigureEndpoint:	
  2393                           ; 0 bytes @ 0x8
  2394                           
  2395  0058                     ??_USBCtrlTrfTxService:	
  2396                           ; 0 bytes @ 0x8
  2397                           
  2398  0058                     ??_Send32:	
  2399                           ; 0 bytes @ 0x8
  2400                           
  2401  0058                     ??_USBDeviceInit:	
  2402                           ; 0 bytes @ 0x8
  2403                           
  2404  0058                     ??_USBStdGetDscHandler:	
  2405                           ; 0 bytes @ 0x8
  2406                           
  2407  0058                     ??_USBStdGetStatusHandler:	
  2408                           ; 0 bytes @ 0x8
  2409                           
  2410  0058                     ??_USBCheckVendorRequest:	
  2411                           ; 0 bytes @ 0x8
  2412                           
  2413  0058                     ??_InitFAN:	
  2414                           ; 0 bytes @ 0x8
  2415                           
  2416  0058                     ??_InitTempSensor:	
  2417                           ; 0 bytes @ 0x8
  2418                           
  2419  0058                     ??_InitResultRx:	
  2420                           ; 0 bytes @ 0x8
  2421                           
  2422  0058                     ??_USBCBSuspend:	
  2423                           ; 0 bytes @ 0x8
  2424                           
  2425  0058                     ??_USBCBWakeFromSuspend:	
  2426                           ; 0 bytes @ 0x8
  2427                           
  2428  0058                     ??_USBCB_SOF_Handler:	
  2429                           ; 0 bytes @ 0x8
  2430                           
  2431  0058                     ??_USBCBErrorHandler:	
  2432                           ; 0 bytes @ 0x8
  2433                           
  2434  0058                     ??_USBCBCheckOtherReq:	
  2435                           ; 0 bytes @ 0x8
  2436                           
  2437  0058                     ??_USBCBStdSetDscHandler:	
  2438                           ; 0 bytes @ 0x8
  2439                           
  2440  0058                     ?___bmul:	
  2441                           ; 0 bytes @ 0x8
  2442                           
  2443  0058                     ?_memset:	
  2444                           ; 1 bytes @ 0x8
  2445                           
  2446  0058                     ?___awdiv:	
  2447                           ; 2 bytes @ 0x8
  2448                           
  2449  0058                     ?___awmod:	
  2450                           ; 2 bytes @ 0x8
  2451                           
  2452  0058                     ?___lwdiv:	
  2453                           ; 2 bytes @ 0x8
  2454                           
  2455  0058                     ?___wmul:	
  2456                           ; 2 bytes @ 0x8
  2457                           
  2458  0058                     ?___ftpack:	
  2459                           ; 2 bytes @ 0x8
  2460                           
  2461  0058                     ?_rotate:	
  2462                           ; 3 bytes @ 0x8
  2463                           
  2464  0058                     ?___lmul:	
  2465                           ; 4 bytes @ 0x8
  2466                           
  2467  0058                     USBConfigureEndpoint@direction:	
  2468                           ; 4 bytes @ 0x8
  2469                           
  2470  0058                     ___bmul@multiplicand:	
  2471                           ; 1 bytes @ 0x8
  2472                           
  2473  0058                     ___awdiv@divisor:	
  2474                           ; 1 bytes @ 0x8
  2475                           
  2476  0058                     ___awmod@divisor:	
  2477                           ; 2 bytes @ 0x8
  2478                           
  2479  0058                     ___lwdiv@divisor:	
  2480                           ; 2 bytes @ 0x8
  2481                           
  2482  0058                     memset@p1:	
  2483                           ; 2 bytes @ 0x8
  2484                           
  2485  0058                     ___wmul@multiplier:	
  2486                           ; 2 bytes @ 0x8
  2487                           
  2488  0058                     ___ftpack@arg:	
  2489                           ; 2 bytes @ 0x8
  2490                           
  2491  0058                     rotate@x:	
  2492                           ; 3 bytes @ 0x8
  2493                           
  2494  0058                     ___lmul@multiplier:	
  2495                           ; 4 bytes @ 0x8
  2496                           
  2497                           
  2498                           ; 4 bytes @ 0x8
  2499  0058                     	ds	1
  2500  0059                     ??_USBConfigureEndpoint:	
  2501  0059                     ??___bmul:	
  2502                           ; 0 bytes @ 0x9
  2503                           
  2504  0059                     USBStdGetStatusHandler@p:	
  2505                           ; 0 bytes @ 0x9
  2506                           
  2507                           
  2508                           ; 1 bytes @ 0x9
  2509  0059                     	ds	1
  2510  005A                     ??_USBCtrlTrfRxService:	
  2511  005A                     USBCtrlTrfTxService@byteToSend:	
  2512                           ; 0 bytes @ 0xA
  2513                           
  2514  005A                     ___bmul@product:	
  2515                           ; 1 bytes @ 0xA
  2516                           
  2517  005A                     USBDeviceInit@p:	
  2518                           ; 1 bytes @ 0xA
  2519                           
  2520  005A                     ___awdiv@dividend:	
  2521                           ; 2 bytes @ 0xA
  2522                           
  2523  005A                     ___awmod@dividend:	
  2524                           ; 2 bytes @ 0xA
  2525                           
  2526  005A                     ___lwdiv@dividend:	
  2527                           ; 2 bytes @ 0xA
  2528                           
  2529  005A                     memset@c:	
  2530                           ; 2 bytes @ 0xA
  2531                           
  2532  005A                     ___wmul@multiplicand:	
  2533                           ; 2 bytes @ 0xA
  2534                           
  2535                           
  2536                           ; 2 bytes @ 0xA
  2537  005A                     	ds	1
  2538  005B                     ??_USBCtrlTrfInHandler:	
  2539  005B                     ??_USBCtrlEPAllowDataStage:	
  2540                           ; 0 bytes @ 0xB
  2541                           
  2542  005B                     ___bmul@multiplier:	
  2543                           ; 0 bytes @ 0xB
  2544                           
  2545  005B                     ___ftpack@exp:	
  2546                           ; 1 bytes @ 0xB
  2547                           
  2548                           
  2549                           ; 1 bytes @ 0xB
  2550  005B                     	ds	1
  2551  005C                     ??___awdiv:	
  2552  005C                     ??___awmod:	
  2553                           ; 0 bytes @ 0xC
  2554                           
  2555  005C                     ??___lwdiv:	
  2556                           ; 0 bytes @ 0xC
  2557                           
  2558  005C                     ??___wmul:	
  2559                           ; 0 bytes @ 0xC
  2560                           
  2561  005C                     ?_USBTransferOnePacket:	
  2562                           ; 0 bytes @ 0xC
  2563                           
  2564  005C                     USBDeviceInit@i_718:	
  2565                           ; 1 bytes @ 0xC
  2566                           
  2567  005C                     USBTransferOnePacket@dir:	
  2568                           ; 1 bytes @ 0xC
  2569                           
  2570  005C                     USBCtrlTrfRxService@i:	
  2571                           ; 1 bytes @ 0xC
  2572                           
  2573  005C                     rotate@y:	
  2574                           ; 1 bytes @ 0xC
  2575                           
  2576  005C                     ___ftpack@sign:	
  2577                           ; 1 bytes @ 0xC
  2578                           
  2579  005C                     memset@n:	
  2580                           ; 1 bytes @ 0xC
  2581                           
  2582  005C                     ___wmul@product:	
  2583                           ; 2 bytes @ 0xC
  2584                           
  2585  005C                     ___lmul@multiplicand:	
  2586                           ; 2 bytes @ 0xC
  2587                           
  2588                           
  2589                           ; 4 bytes @ 0xC
  2590  005C                     	ds	1
  2591  005D                     ??___ftpack:	
  2592  005D                     ??_USBCtrlEPServiceComplete:	
  2593                           ; 0 bytes @ 0xD
  2594                           
  2595  005D                     ??_rotate:	
  2596                           ; 0 bytes @ 0xD
  2597                           
  2598  005D                     USBDeviceInit@i:	
  2599                           ; 0 bytes @ 0xD
  2600                           
  2601  005D                     USBTransferOnePacket@data:	
  2602                           ; 1 bytes @ 0xD
  2603                           
  2604  005D                     USBConfigureEndpoint@EPNum:	
  2605                           ; 1 bytes @ 0xD
  2606                           
  2607  005D                     USBCtrlTrfRxService@byteToRead:	
  2608                           ; 1 bytes @ 0xD
  2609                           
  2610  005D                     USBCtrlTrfInHandler@lastDTS:	
  2611                           ; 1 bytes @ 0xD
  2612                           
  2613  005D                     ___awdiv@counter:	
  2614                           ; 1 bytes @ 0xD
  2615                           
  2616  005D                     ___awmod@counter:	
  2617                           ; 1 bytes @ 0xD
  2618                           
  2619  005D                     ___lwdiv@quotient:	
  2620                           ; 1 bytes @ 0xD
  2621                           
  2622                           
  2623                           ; 2 bytes @ 0xD
  2624  005D                     	ds	1
  2625  005E                     ??_memset:	
  2626  005E                     ??_USBCtrlTrfOutHandler:	
  2627                           ; 0 bytes @ 0xE
  2628                           
  2629  005E                     ?_SendCmdReply:	
  2630                           ; 0 bytes @ 0xE
  2631                           
  2632  005E                     ?_SendAsicData:	
  2633                           ; 0 bytes @ 0xE
  2634                           
  2635  005E                     USBTransferOnePacket@len:	
  2636                           ; 0 bytes @ 0xE
  2637                           
  2638  005E                     USBConfigureEndpoint@handle:	
  2639                           ; 1 bytes @ 0xE
  2640                           
  2641  005E                     ___awdiv@sign:	
  2642                           ; 1 bytes @ 0xE
  2643                           
  2644  005E                     ___awmod@sign:	
  2645                           ; 1 bytes @ 0xE
  2646                           
  2647  005E                     SendAsicData@work:	
  2648                           ; 1 bytes @ 0xE
  2649                           
  2650  005E                     SendCmdReply@cmd:	
  2651                           ; 2 bytes @ 0xE
  2652                           
  2653                           
  2654                           ; 2 bytes @ 0xE
  2655  005E                     	ds	1
  2656  005F                     ?_USBEnableEndpoint:	
  2657  005F                     ??_USBTransferOnePacket:	
  2658                           ; 0 bytes @ 0xF
  2659                           
  2660  005F                     USBEnableEndpoint@options:	
  2661                           ; 0 bytes @ 0xF
  2662                           
  2663  005F                     ___lwdiv@counter:	
  2664                           ; 1 bytes @ 0xF
  2665                           
  2666  005F                     ___awdiv@quotient:	
  2667                           ; 1 bytes @ 0xF
  2668                           
  2669  005F                     memset@p:	
  2670                           ; 2 bytes @ 0xF
  2671                           
  2672                           
  2673                           ; 2 bytes @ 0xF
  2674  005F                     	ds	1
  2675  0060                     ??_USBEnableEndpoint:	
  2676  0060                     ??_SendAsicData:	
  2677                           ; 0 bytes @ 0x10
  2678                           
  2679  0060                     ??___lmul:	
  2680                           ; 0 bytes @ 0x10
  2681                           
  2682  0060                     ?___awtoft:	
  2683                           ; 0 bytes @ 0x10
  2684                           
  2685  0060                     ?___lltoft:	
  2686                           ; 3 bytes @ 0x10
  2687                           
  2688  0060                     SendCmdReply@data:	
  2689                           ; 3 bytes @ 0x10
  2690                           
  2691  0060                     ___awtoft@c:	
  2692                           ; 2 bytes @ 0x10
  2693                           
  2694  0060                     ___lltoft@c:	
  2695                           ; 2 bytes @ 0x10
  2696                           
  2697  0060                     ___lmul@product:	
  2698                           ; 4 bytes @ 0x10
  2699                           
  2700                           
  2701                           ; 4 bytes @ 0x10
  2702  0060                     	ds	1
  2703  0061                     ??_DetectAsics:	
  2704  0061                     USBTransferOnePacket@ep:	
  2705                           ; 0 bytes @ 0x11
  2706                           
  2707                           
  2708                           ; 1 bytes @ 0x11
  2709  0061                     	ds	1
  2710  0062                     USBTransferOnePacket@handle:	
  2711  0062                     SendCmdReply@count:	
  2712                           ; 1 bytes @ 0x12
  2713                           
  2714  0062                     USBEnableEndpoint@p:	
  2715                           ; 1 bytes @ 0x12
  2716                           
  2717                           
  2718                           ; 2 bytes @ 0x12
  2719  0062                     	ds	1
  2720  0063                     ??___awtoft:	
  2721  0063                     SendCmdReply@n:	
  2722                           ; 0 bytes @ 0x13
  2723                           
  2724                           
  2725                           ; 1 bytes @ 0x13
  2726  0063                     	ds	1
  2727  0064                     ??___lltoft:	
  2728  0064                     USBEnableEndpoint@ep:	
  2729                           ; 0 bytes @ 0x14
  2730                           
  2731                           
  2732                           ; 1 bytes @ 0x14
  2733  0064                     	ds	1
  2734  0065                     ??_USBCBInitEP:	
  2735  0065                     ___awtoft@sign:	
  2736                           ; 0 bytes @ 0x15
  2737                           
  2738  0065                     ___lltoft@exp:	
  2739                           ; 1 bytes @ 0x15
  2740                           
  2741                           
  2742                           ; 1 bytes @ 0x15
  2743  0065                     	ds	1
  2744  0066                     ??_InitWorkTick:	
  2745  0066                     ??___ftneg:	
  2746                           ; 0 bytes @ 0x16
  2747                           
  2748                           
  2749                           ; 0 bytes @ 0x16
  2750  0066                     	ds	2
  2751  0068                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2752  0068                     ??_InitializeSystem:	
  2753                           ; 0 bytes @ 0x18
  2754                           
  2755  0068                     ??_UserInit:	
  2756                           ; 0 bytes @ 0x18
  2757                           
  2758  0068                     ??_main:	
  2759                           ; 0 bytes @ 0x18
  2760                           
  2761                           
  2762                           	psect	maintext
  2763  1B54                     __pmaintext:	
  2764                           ; 0 bytes @ 0x18
  2765 ;;
  2766 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2767 ;;
  2768 ;; *************** function _main *****************
  2769 ;; Defined at:
  2770 ;;		line 98 in file "main.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  2  823[COMMON] int 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 17F/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels required when called:   13
  2790 ;; This function calls:
  2791 ;;		_USBDeviceTasks
  2792 ;;		_AsicPushWork
  2793 ;;		_WorkTick
  2794 ;;		_InitializeSystem
  2795 ;;		_ProcessIO
  2796 ;; This function is called by:
  2797 ;;		Startup code after reset
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _main
  2803  1B54                     _main:	
  2804                           
  2805                           ;main.c: 99: InitializeSystem();
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in _main: [allreg]
  2809  1B54  319B  233D  319B   	fcall	_InitializeSystem
  2810  1B57                     l824:	
  2811                           ;main.c: 101: while(1)
  2812                           
  2813                           
  2814                           ;main.c: 102: {
  2815                           ;main.c: 119: USBDeviceTasks();
  2816  1B57  318E  2605  319B   	fcall	_USBDeviceTasks
  2817                           
  2818                           ;main.c: 133: if(TMR0IF)
  2819  1B5A  1D0B               	btfss	11,2	;volatile
  2820  1B5B  2B5F               	goto	l7476
  2821                           
  2822                           ;main.c: 134: WorkTick();
  2823  1B5C  3190  2036  319B   	fcall	_WorkTick
  2824  1B5F                     l7476:	
  2825                           
  2826                           ;main.c: 136: if(Status.State == 'P'){
  2827  1B5F  0022               	movlb	2	; select bank2
  2828  1B60  0852               	movf	_Status^(0+256),w	;volatile
  2829  1B61  3A50               	xorlw	80
  2830  1B62  1D03               	skipz
  2831  1B63  2B67               	goto	l7480
  2832                           
  2833                           ;main.c: 137: AsicPushWork();
  2834  1B64  3194  2407  319B   	fcall	_AsicPushWork
  2835  1B67                     l7480:	
  2836                           
  2837                           ;main.c: 138: }
  2838                           ;main.c: 140: ProcessIO();
  2839  1B67  3192  2292  319B   	fcall	_ProcessIO
  2840  1B6A  2B57               	goto	l824
  2841  1B6B                     __end_of_main:	
  2842                           
  2843                           	psect	text1
  2844  1292                     __ptext1:	
  2845 ;; *************** function _ProcessIO *****************
  2846 ;; Defined at:
  2847 ;;		line 182 in file "main.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;		None               void
  2854 ;; Registers used:
  2855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2862 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;Total ram usage:        8 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    8
  2868 ;; This function calls:
  2869 ;;		_USBTransferOnePacket
  2870 ;;		_ProcessCmd
  2871 ;;		___bmul
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function _ProcessIO
  2879  1292                     _ProcessIO:	
  2880                           
  2881                           ;main.c: 184: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _ProcessIO: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2885  1292  3020               	movlw	32
  2886  1293  0021               	movlb	1	; select bank1
  2887  1294  026E               	subwf	_USBDeviceState^(0+128),w
  2888  1295  1C03               	skipc
  2889  1296  0008               	return
  2890  1297  003D               	movlb	29	; select bank29
  2891  1298  188E               	btfsc	14,1	;volatile
  2892  1299  0008               	return
  2893                           
  2894                           ;main.c: 193: if(!(USBGenericOutHandle==0?0:((volatile BDT_ENTRY*)USBGenericOutHandle)->
      +                          STAT.UOWN)) {
  2895  129A  0022               	movlb	2	; select bank2
  2896  129B  083B               	movf	_USBGenericOutHandle^(0+256),w
  2897  129C  1903               	btfsc	3,2
  2898  129D  2AAB               	goto	l7506
  2899  129E  083B               	movf	_USBGenericOutHandle^(0+256),w
  2900  129F  0086               	movwf	6
  2901  12A0  0187               	clrf	7
  2902  12A1  0D01               	rlf	1,w
  2903  12A2  0D01               	rlf	1,w
  2904  12A3  3901               	andlw	1
  2905  12A4  00E2               	movwf	??_ProcessIO^(0+256)
  2906  12A5  01E3               	clrf	(??_ProcessIO^(0+256)+1)
  2907  12A6  0862               	movf	??_ProcessIO^(0+256),w
  2908  12A7  00E6               	movwf	_ProcessIO$2274^(0+256)
  2909  12A8  0863               	movf	(??_ProcessIO+1)^(0+256),w
  2910  12A9  00E7               	movwf	(_ProcessIO$2274+1)^(0+256)
  2911  12AA  2AAD               	goto	l7508
  2912  12AB                     l7506:	
  2913  12AB  01E6               	clrf	_ProcessIO$2274^(0+256)
  2914  12AC  01E7               	clrf	(_ProcessIO$2274+1)^(0+256)
  2915  12AD                     l7508:	
  2916  12AD  0867               	movf	(_ProcessIO$2274+1)^(0+256),w
  2917  12AE  0466               	iorwf	_ProcessIO$2274^(0+256),w
  2918  12AF  1D03               	skipz
  2919  12B0  2ACB               	goto	l7514
  2920                           
  2921                           ;main.c: 197: ProcessCmd(OUTPacket);
  2922  12B1  30A0               	movlw	160
  2923  12B2  3186  2676  3192   	fcall	_ProcessCmd
  2924                           
  2925                           ;main.c: 198: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
  2926  12B5  0020               	movlb	0	; select bank0
  2927  12B6  01DC               	clrf	?_USBTransferOnePacket
  2928  12B7  30A0               	movlw	160
  2929  12B8  0022               	movlb	2	; select bank2
  2930  12B9  00E2               	movwf	??_ProcessIO^(0+256)
  2931  12BA  0862               	movf	??_ProcessIO^(0+256),w
  2932  12BB  0020               	movlb	0	; select bank0
  2933  12BC  00DD               	movwf	?_USBTransferOnePacket+1
  2934  12BD  3040               	movlw	64
  2935  12BE  0022               	movlb	2	; select bank2
  2936  12BF  00E3               	movwf	(??_ProcessIO+1)^(0+256)
  2937  12C0  0863               	movf	(??_ProcessIO+1)^(0+256),w
  2938  12C1  0020               	movlb	0	; select bank0
  2939  12C2  00DE               	movwf	?_USBTransferOnePacket+2
  2940  12C3  3001               	movlw	1
  2941  12C4  319E  266B  3192   	fcall	_USBTransferOnePacket
  2942  12C7  0022               	movlb	2	; select bank2
  2943  12C8  00E4               	movwf	(??_ProcessIO+2)^(0+256)
  2944  12C9  0864               	movf	(??_ProcessIO+2)^(0+256),w
  2945  12CA  00BB               	movwf	_USBGenericOutHandle^(0+256)
  2946  12CB                     l7514:	
  2947                           
  2948                           ;main.c: 199: }
  2949                           ;main.c: 201: if(WQI != WQX && !(USBGenericInHandle==0?0:((volatile BDT_ENTRY*)USBGeneri
      +                          cInHandle)->STAT.UOWN)) {
  2950  12CB  0850               	movf	_WQI^(0+256),w
  2951  12CC  0651               	xorwf	_WQX^(0+256),w
  2952  12CD  1903               	skipnz
  2953  12CE  0008               	return
  2954  12CF  083A               	movf	_USBGenericInHandle^(0+256),w
  2955  12D0  1903               	btfsc	3,2
  2956  12D1  2ADF               	goto	l7520
  2957  12D2  083A               	movf	_USBGenericInHandle^(0+256),w
  2958  12D3  0086               	movwf	6
  2959  12D4  0187               	clrf	7
  2960  12D5  0D01               	rlf	1,w
  2961  12D6  0D01               	rlf	1,w
  2962  12D7  3901               	andlw	1
  2963  12D8  00E2               	movwf	??_ProcessIO^(0+256)
  2964  12D9  01E3               	clrf	(??_ProcessIO^(0+256)+1)
  2965  12DA  0862               	movf	??_ProcessIO^(0+256),w
  2966  12DB  00E8               	movwf	_ProcessIO$2308^(0+256)
  2967  12DC  0863               	movf	(??_ProcessIO+1)^(0+256),w
  2968  12DD  00E9               	movwf	(_ProcessIO$2308+1)^(0+256)
  2969  12DE  2AE1               	goto	l7522
  2970  12DF                     l7520:	
  2971  12DF  01E8               	clrf	_ProcessIO$2308^(0+256)
  2972  12E0  01E9               	clrf	(_ProcessIO$2308+1)^(0+256)
  2973  12E1                     l7522:	
  2974  12E1  0869               	movf	(_ProcessIO$2308+1)^(0+256),w
  2975  12E2  0468               	iorwf	_ProcessIO$2308^(0+256),w
  2976  12E3  1D03               	skipz
  2977  12E4  0008               	return
  2978                           
  2979                           ;main.c: 202: USBGenericInHandle = USBTransferOnePacket(1,1,(BYTE*)&INPacket[WQX*15],15);
  2980  12E5  0020               	movlb	0	; select bank0
  2981  12E6  01DC               	clrf	?_USBTransferOnePacket
  2982  12E7  0ADC               	incf	?_USBTransferOnePacket,f
  2983  12E8  300F               	movlw	15
  2984  12E9  0022               	movlb	2	; select bank2
  2985  12EA  00E2               	movwf	??_ProcessIO^(0+256)
  2986  12EB  0862               	movf	??_ProcessIO^(0+256),w
  2987  12EC  0020               	movlb	0	; select bank0
  2988  12ED  00D8               	movwf	?___bmul
  2989  12EE  0022               	movlb	2	; select bank2
  2990  12EF  0851               	movf	_WQX^(0+256),w
  2991  12F0  319A  22DC  3192   	fcall	___bmul
  2992  12F3  3E20               	addlw	32
  2993  12F4  0022               	movlb	2	; select bank2
  2994  12F5  00E3               	movwf	(??_ProcessIO+1)^(0+256)
  2995  12F6  0863               	movf	(??_ProcessIO+1)^(0+256),w
  2996  12F7  0020               	movlb	0	; select bank0
  2997  12F8  00DD               	movwf	?_USBTransferOnePacket+1
  2998  12F9  300F               	movlw	15
  2999  12FA  0022               	movlb	2	; select bank2
  3000  12FB  00E4               	movwf	(??_ProcessIO+2)^(0+256)
  3001  12FC  0864               	movf	(??_ProcessIO+2)^(0+256),w
  3002  12FD  0020               	movlb	0	; select bank0
  3003  12FE  00DE               	movwf	?_USBTransferOnePacket+2
  3004  12FF  3001               	movlw	1
  3005  1300  319E  266B         	fcall	_USBTransferOnePacket
  3006  1302  0022               	movlb	2	; select bank2
  3007  1303  00E5               	movwf	(??_ProcessIO+3)^(0+256)
  3008  1304  0865               	movf	(??_ProcessIO+3)^(0+256),w
  3009  1305  00BA               	movwf	_USBGenericInHandle^(0+256)
  3010                           
  3011                           ;main.c: 203: WQX = (WQX+1) & 3;
  3012  1306  0A51               	incf	_WQX^(0+256),w
  3013  1307  3903               	andlw	3
  3014  1308  00E2               	movwf	??_ProcessIO^(0+256)
  3015  1309  0862               	movf	??_ProcessIO^(0+256),w
  3016  130A  00D1               	movwf	_WQX^(0+256)
  3017  130B  0008               	return
  3018  130C                     __end_of_ProcessIO:	
  3019                           
  3020                           	psect	text2
  3021  0676                     __ptext2:	
  3022 ;; *************** function _ProcessCmd *****************
  3023 ;; Defined at:
  3024 ;;		line 44 in file "klondike.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  cmd             1    wreg     PTR unsigned char 
  3027 ;;		 -> OUTPacket(64), 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  cmd             1    2[BANK2 ] PTR unsigned char 
  3030 ;;		 -> OUTPacket(64), 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;		None               void
  3033 ;; Registers used:
  3034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;      Totals:         0       0       4       3       0       0       0       0       0       0       0       0       
      +0       0
  3044 ;;Total ram usage:        7 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    7
  3047 ;; This function calls:
  3048 ;;		_AsicPushWork
  3049 ;;		_SendCmdReply
  3050 ;;		_SetAsicClock
  3051 ;;		___wmul
  3052 ;; This function is called by:
  3053 ;;		_ProcessIO
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _ProcessCmd
  3059  0676                     _ProcessCmd:	
  3060                           
  3061                           ;incstack = 0
  3062                           ; Regs used in _ProcessCmd: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3063                           ;ProcessCmd@cmd stored from wreg
  3064  0676  0022               	movlb	2	; select bank2
  3065  0677  00E1               	movwf	ProcessCmd@cmd^(0+256)
  3066                           
  3067                           ;klondike.c: 47: switch(cmd[0]) {
  3068  0678  2F74               	goto	l7416
  3069  0679                     l7356:	
  3070                           ;klondike.c: 48: case 'W':
  3071                           
  3072                           
  3073                           ;klondike.c: 49: if( Status.WorkQC < 8-1 ) {
  3074  0679  3007               	movlw	7
  3075  067A  0255               	subwf	(_Status^(0+256)+3),w	;volatile
  3076  067B  1803               	skipnc
  3077  067C  2ED1               	goto	l7378
  3078                           
  3079                           ;klondike.c: 50: WorkQue[ (WorkNow + Status.WorkQC++) & 8-1 ] = *(WORKTASK *)(cmd+2);
  3080  067D  0861               	movf	ProcessCmd@cmd^(0+256),w
  3081  067E  3E02               	addlw	2
  3082  067F  0086               	movwf	6
  3083  0680  3002               	movlw	2	; select bank4/5
  3084  0681  0087               	movwf	7
  3085  0682  0840               	movf	_WorkNow^(0+256),w
  3086  0683  0755               	addwf	(_Status^(0+256)+3),w	;volatile
  3087  0684  0021               	movlb	1	; select bank1
  3088  0685  00EA               	movwf	??_ProcessCmd^(0+128)
  3089  0686  01EB               	clrf	(??_ProcessCmd^(0+128)+1)
  3090  0687  0DEB               	rlf	(??_ProcessCmd+1)^(0+128),f
  3091  0688  3007               	movlw	7
  3092  0689  056A               	andwf	??_ProcessCmd^(0+128),w
  3093  068A  0020               	movlb	0	; select bank0
  3094  068B  00D8               	movwf	?___wmul
  3095  068C  3000               	movlw	0
  3096  068D  0021               	movlb	1	; select bank1
  3097  068E  056B               	andwf	(??_ProcessCmd+1)^(0+128),w
  3098  068F  0020               	movlb	0	; select bank0
  3099  0690  00D9               	movwf	?___wmul+1
  3100  0691  302D               	movlw	45
  3101  0692  00DA               	movwf	?___wmul+2
  3102  0693  3000               	movlw	0
  3103  0694  00DB               	movwf	?___wmul+3
  3104  0695  319B  23F7  3186   	fcall	___wmul
  3105  0698  3088               	movlw	136
  3106  0699  0021               	movlb	1	; select bank1
  3107  069A  00EC               	movwf	(??_ProcessCmd+2)^(0+128)
  3108  069B  3022               	movlw	34
  3109  069C  00ED               	movwf	((??_ProcessCmd+2)^(0+128)+1)
  3110  069D  0020               	movlb	0	; select bank0
  3111  069E  0858               	movf	?___wmul,w
  3112  069F  0021               	movlb	1	; select bank1
  3113  06A0  076C               	addwf	(??_ProcessCmd+2)^(0+128),w
  3114  06A1  0084               	movwf	4
  3115  06A2  0020               	movlb	0	; select bank0
  3116  06A3  0859               	movf	?___wmul+1,w
  3117  06A4  0021               	movlb	1	; select bank1
  3118  06A5  3D6D               	addwfc	(??_ProcessCmd+3)^(0+128),w
  3119  06A6  0085               	movwf	5
  3120  06A7  302D               	movlw	45
  3121  06A8  00FF               	movwf	127
  3122  06A9                     u8180:	
  3123  06A9  0016               	moviw fsr1++
  3124  06AA  001A               	movwi fsr0++
  3125  06AB  0BFF               	decfsz	127,f
  3126  06AC  2EA9               	goto	u8180
  3127  06AD  3001               	movlw	1
  3128  06AE  00EA               	movwf	??_ProcessCmd^(0+128)
  3129  06AF  086A               	movf	??_ProcessCmd^(0+128),w
  3130  06B0  0022               	movlb	2	; select bank2
  3131  06B1  07D5               	addwf	(_Status^(0+256)+3),f	;volatile
  3132                           
  3133                           ;klondike.c: 51: if(Status.State == 'R') {
  3134  06B2  0852               	movf	_Status^(0+256),w	;volatile
  3135  06B3  3A52               	xorlw	82
  3136  06B4  1D03               	skipz
  3137  06B5  2ED1               	goto	l7378
  3138                           
  3139                           ;klondike.c: 52: AsicPushWork();
  3140  06B6  3194  2407  3186   	fcall	_AsicPushWork
  3141  06B9  2ED1               	goto	l7378
  3142  06BA                     l7368:	
  3143                           ;klondike.c: 58: case 'A':
  3144                           
  3145                           ;klondike.c: 57: break;
  3146                           
  3147                           ;klondike.c: 56: Status.Noise = Status.ErrorCount = 0;
  3148                           
  3149                           ;klondike.c: 53: }
  3150                           ;klondike.c: 54: }
  3151                           ;klondike.c: 55: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3152                           
  3153                           
  3154                           ;klondike.c: 59: Status.WorkQC = WorkNow = 0;
  3155  06BA  01C0               	clrf	_WorkNow^(0+256)
  3156  06BB  01D5               	clrf	(_Status^(0+256)+3)	;volatile
  3157                           
  3158                           ;klondike.c: 60: Status.State = 'R';
  3159  06BC  3052               	movlw	82
  3160  06BD  2F59               	goto	L2
  3161  06BE                     l7376:	
  3162                           ;klondike.c: 64: case 'I':
  3163                           
  3164                           ;klondike.c: 63: break;
  3165                           
  3166                           ;klondike.c: 62: Status.Noise = Status.ErrorCount = 0;
  3167                           
  3168                           ;klondike.c: 61: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3169                           
  3170                           
  3171                           ;klondike.c: 65: SendCmdReply(cmd, (char *)&ID, sizeof(ID));
  3172  06BE  0861               	movf	ProcessCmd@cmd^(0+256),w
  3173  06BF  0020               	movlb	0	; select bank0
  3174  06C0  00DE               	movwf	?_SendCmdReply
  3175  06C1  3002               	movlw	2
  3176  06C2  00DF               	movwf	?_SendCmdReply+1
  3177  06C3  309F               	movlw	low (_ID| (0+32768))
  3178  06C4  00E0               	movwf	?_SendCmdReply+2
  3179  06C5  3088               	movlw	high (_ID| (0+32768))
  3180  06C6  00E1               	movwf	?_SendCmdReply+3
  3181  06C7  300C               	movlw	12
  3182  06C8  0021               	movlb	1	; select bank1
  3183  06C9  00EA               	movwf	??_ProcessCmd^(0+128)
  3184  06CA  086A               	movf	??_ProcessCmd^(0+128),w
  3185  06CB  0020               	movlb	0	; select bank0
  3186  06CC  00E2               	movwf	?_SendCmdReply+4
  3187  06CD  3189  21B3  3186   	fcall	_SendCmdReply
  3188                           
  3189                           ;klondike.c: 66: break;
  3190  06D0  2F8C               	goto	l671
  3191  06D1                     l7378:	
  3192                           ;klondike.c: 67: case 'S':
  3193                           
  3194                           
  3195                           ;klondike.c: 68: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3196  06D1  0022               	movlb	2	; select bank2
  3197  06D2  2F5E               	goto	L3
  3198  06D3                     l7382:	
  3199                           ;klondike.c: 71: case 'C':
  3200                           
  3201                           ;klondike.c: 70: break;
  3202                           
  3203                           ;klondike.c: 69: Status.Noise = Status.ErrorCount = 0;
  3204                           
  3205                           
  3206                           ;klondike.c: 72: if( *(WORD *)&cmd[2] != 0 ) {
  3207  06D3  0861               	movf	ProcessCmd@cmd^(0+256),w
  3208  06D4  3E02               	addlw	2
  3209  06D5  0086               	movwf	6
  3210  06D6  3002               	movlw	2	; select bank4/5
  3211  06D7  0087               	movwf	7
  3212  06D8  0016               	moviw fsr1++
  3213  06D9  0401               	iorwf	1,w
  3214  06DA  1903               	skipnz
  3215  06DB  2F1F               	goto	l7400
  3216                           
  3217                           ;klondike.c: 73: Cfg = *(WORKCFG *)(cmd+2);
  3218  06DC  0861               	movf	ProcessCmd@cmd^(0+256),w
  3219  06DD  3E02               	addlw	2
  3220  06DE  0086               	movwf	6
  3221  06DF  3002               	movlw	2	; select bank4/5
  3222  06E0  0087               	movwf	7
  3223  06E1  30DA               	movlw	low _Cfg
  3224  06E2  0084               	movwf	4
  3225  06E3  3001               	movlw	high _Cfg
  3226  06E4  0085               	movwf	5
  3227  06E5  3006               	movlw	6
  3228  06E6  00FF               	movwf	127
  3229  06E7                     u8210:	
  3230  06E7  0016               	moviw fsr1++
  3231  06E8  001A               	movwi fsr0++
  3232  06E9  0BFF               	decfsz	127,f
  3233  06EA  2EE7               	goto	u8210
  3234                           
  3235                           ;klondike.c: 74: if(Cfg.HashClock < 600)
  3236  06EB  3002               	movlw	2
  3237  06EC  0023               	movlb	3	; select bank3
  3238  06ED  025B               	subwf	(_Cfg+1)^(0+384),w
  3239  06EE  3058               	movlw	88
  3240  06EF  1903               	skipnz
  3241  06F0  025A               	subwf	_Cfg^(0+384),w
  3242  06F1  1803               	skipnc
  3243  06F2  2EF7               	goto	l677
  3244                           
  3245                           ;klondike.c: 75: Cfg.HashClock = 600;
  3246  06F3  3058               	movlw	88
  3247  06F4  00DA               	movwf	_Cfg^(0+384)
  3248  06F5  3002               	movlw	2
  3249  06F6  00DB               	movwf	(_Cfg^(0+384)+1)
  3250  06F7                     l677:	
  3251                           
  3252                           ;klondike.c: 76: if(Cfg.HashClock >= 1500)
  3253  06F7  3005               	movlw	5
  3254  06F8  025B               	subwf	(_Cfg+1)^(0+384),w
  3255  06F9  30DC               	movlw	220
  3256  06FA  1903               	skipnz
  3257  06FB  025A               	subwf	_Cfg^(0+384),w
  3258  06FC  1C03               	skipc
  3259  06FD  2F02               	goto	l7392
  3260                           
  3261                           ;klondike.c: 77: Cfg.HashClock = 1500-1;
  3262  06FE  30DB               	movlw	219
  3263  06FF  00DA               	movwf	_Cfg^(0+384)
  3264  0700  3005               	movlw	5
  3265  0701  00DB               	movwf	(_Cfg^(0+384)+1)
  3266  0702                     l7392:	
  3267                           
  3268                           ;klondike.c: 78: SetAsicClock(Cfg.HashClock);
  3269  0702  085A               	movf	_Cfg^(0+384),w
  3270  0703  0021               	movlb	1	; select bank1
  3271  0704  00DE               	movwf	?_SetAsicClock^(0+128)
  3272  0705  0023               	movlb	3	; select bank3
  3273  0706  085B               	movf	(_Cfg+1)^(0+384),w
  3274  0707  0021               	movlb	1	; select bank1
  3275  0708  00DF               	movwf	(?_SetAsicClock^(0+128)+1)
  3276  0709  01E0               	clrf	(?_SetAsicClock^(0+128)+2)
  3277  070A  01E1               	clrf	(?_SetAsicClock^(0+128)+3)
  3278  070B  318D  2538  3186   	fcall	_SetAsicClock
  3279                           
  3280                           ;klondike.c: 79: if(Cfg.TempTarget != 0)
  3281  070E  0023               	movlb	3	; select bank3
  3282  070F  085C               	movf	(_Cfg^(0+384)+2),w
  3283  0710  1903               	btfsc	3,2
  3284  0711  2F19               	goto	l7398
  3285                           
  3286                           ;klondike.c: 80: TempTarget = Cfg.TempTarget;
  3287  0712  085C               	movf	(_Cfg^(0+384)+2),w
  3288  0713  0021               	movlb	1	; select bank1
  3289  0714  00EA               	movwf	??_ProcessCmd^(0+128)
  3290  0715  086A               	movf	??_ProcessCmd^(0+128),w
  3291  0716  0023               	movlb	3	; select bank3
  3292  0717  00E0               	movwf	_TempTarget^(0+384)
  3293  0718  2F1F               	goto	l7400
  3294  0719                     l7398:	
  3295                           
  3296                           ;klondike.c: 81: else
  3297                           ;klondike.c: 82: Cfg.TempTarget = 143;
  3298  0719  308F               	movlw	143
  3299  071A  0021               	movlb	1	; select bank1
  3300  071B  00EA               	movwf	??_ProcessCmd^(0+128)
  3301  071C  086A               	movf	??_ProcessCmd^(0+128),w
  3302  071D  0023               	movlb	3	; select bank3
  3303  071E  00DC               	movwf	(_Cfg^(0+384)+2)
  3304  071F                     l7400:	
  3305                           
  3306                           ;klondike.c: 83: }
  3307                           ;klondike.c: 84: SendCmdReply(cmd, (char *)&Cfg, sizeof(Cfg));
  3308  071F  0022               	movlb	2	; select bank2
  3309  0720  0861               	movf	ProcessCmd@cmd^(0+256),w
  3310  0721  0020               	movlb	0	; select bank0
  3311  0722  00DE               	movwf	?_SendCmdReply
  3312  0723  3002               	movlw	2
  3313  0724  00DF               	movwf	?_SendCmdReply+1
  3314  0725  30DA               	movlw	low _Cfg
  3315  0726  00E0               	movwf	?_SendCmdReply+2
  3316  0727  3001               	movlw	high _Cfg
  3317  0728  00E1               	movwf	?_SendCmdReply+3
  3318  0729  3006               	movlw	6
  3319  072A  0021               	movlb	1	; select bank1
  3320  072B  00EA               	movwf	??_ProcessCmd^(0+128)
  3321  072C  086A               	movf	??_ProcessCmd^(0+128),w
  3322  072D  0020               	movlb	0	; select bank0
  3323  072E  00E2               	movwf	?_SendCmdReply+4
  3324  072F  3189  21B3  3186   	fcall	_SendCmdReply
  3325                           
  3326                           ;klondike.c: 85: break;
  3327  0732  2F8C               	goto	l671
  3328  0733                     l7402:	
  3329                           ;klondike.c: 86: case 'E':
  3330                           
  3331                           
  3332                           ;klondike.c: 87: LATAbits.LATA4 = (cmd[2] == '1');
  3333  0733  0022               	movlb	2	; select bank2
  3334  0734  0861               	movf	ProcessCmd@cmd^(0+256),w
  3335  0735  3E02               	addlw	2
  3336  0736  0086               	movwf	6
  3337  0737  3002               	movlw	2	; select bank4/5
  3338  0738  0087               	movwf	7
  3339  0739  0801               	movf	1,w
  3340  073A  3A31               	xorlw	49
  3341  073B  3000               	movlw	0
  3342  073C  1903               	skipnz
  3343  073D  3001               	movlw	1
  3344  073E  0021               	movlb	1	; select bank1
  3345  073F  00EA               	movwf	??_ProcessCmd^(0+128)
  3346  0740  0EEA               	swapf	??_ProcessCmd^(0+128),f
  3347  0741  0022               	movlb	2	; select bank2
  3348  0742  080C               	movf	12,w	;volatile
  3349  0743  0021               	movlb	1	; select bank1
  3350  0744  066A               	xorwf	??_ProcessCmd^(0+128),w
  3351  0745  39EF               	andlw	-17
  3352  0746  066A               	xorwf	??_ProcessCmd^(0+128),w
  3353  0747  0022               	movlb	2	; select bank2
  3354  0748  008C               	movwf	12	;volatile
  3355                           
  3356                           ;klondike.c: 88: Status.State = (cmd[2] == '1') ? 'R' : 'D';
  3357  0749  0861               	movf	ProcessCmd@cmd^(0+256),w
  3358  074A  3E02               	addlw	2
  3359  074B  0086               	movwf	6
  3360  074C  3002               	movlw	2	; select bank4/5
  3361  074D  0087               	movwf	7
  3362  074E  0801               	movf	1,w
  3363  074F  3A31               	xorlw	49
  3364  0750  1903               	skipnz
  3365  0751  2F54               	goto	l7408
  3366  0752  3044               	movlw	68
  3367  0753  2F55               	goto	L1
  3368  0754                     l7408:	
  3369  0754  3052               	movlw	82
  3370  0755                     L1:	
  3371  0755  00DF               	movwf	_ProcessCmd$1976^(0+256)
  3372  0756  3000               	movlw	0
  3373  0757  00E0               	movwf	(_ProcessCmd$1976^(0+256)+1)
  3374  0758  085F               	movf	_ProcessCmd$1976^(0+256),w
  3375  0759                     L2:	
  3376  0759  0021               	movlb	1	; select bank1
  3377  075A  00EA               	movwf	??_ProcessCmd^(0+128)
  3378  075B  086A               	movf	??_ProcessCmd^(0+128),w
  3379  075C  0022               	movlb	2	; select bank2
  3380  075D  00D2               	movwf	_Status^(0+256)	;volatile
  3381  075E                     L3:	
  3382                           
  3383                           ;klondike.c: 89: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3384  075E  0861               	movf	ProcessCmd@cmd^(0+256),w
  3385  075F  0020               	movlb	0	; select bank0
  3386  0760  00DE               	movwf	?_SendCmdReply
  3387  0761  3002               	movlw	2
  3388  0762  00DF               	movwf	?_SendCmdReply+1
  3389  0763  3052               	movlw	low _Status
  3390  0764  00E0               	movwf	?_SendCmdReply+2
  3391  0765  3001               	movlw	high _Status
  3392  0766  00E1               	movwf	?_SendCmdReply+3
  3393  0767  300D               	movlw	13
  3394  0768  0021               	movlb	1	; select bank1
  3395  0769  00EA               	movwf	??_ProcessCmd^(0+128)
  3396  076A  086A               	movf	??_ProcessCmd^(0+128),w
  3397  076B  0020               	movlb	0	; select bank0
  3398  076C  00E2               	movwf	?_SendCmdReply+4
  3399  076D  3189  21B3  3186   	fcall	_SendCmdReply
  3400                           
  3401                           ;klondike.c: 90: Status.Noise = Status.ErrorCount = 0;
  3402  0770  0022               	movlb	2	; select bank2
  3403  0771  01D9               	clrf	(_Status^(0+256)+7)	;volatile
  3404  0772  01DE               	clrf	(_Status^(0+256)+12)	;volatile
  3405                           
  3406                           ;klondike.c: 100: }
  3407                           
  3408                           ;klondike.c: 99: break;
  3409                           
  3410                           ;klondike.c: 98: default:
  3411                           
  3412                           ;klondike.c: 91: break;
  3413  0773  2F8C               	goto	l671
  3414  0774                     l7416:	
  3415  0774  0861               	movf	ProcessCmd@cmd^(0+256),w
  3416  0775  0086               	movwf	6
  3417  0776  3002               	movlw	2	; select bank4/5
  3418  0777  0087               	movwf	7
  3419  0778  0801               	movf	1,w
  3420                           
  3421                           ; Switch size 1, requested type "space"
  3422                           ; Number of cases is 6, Range of values is 65 to 87
  3423                           ; switch strategies available:
  3424                           ; Name         Instructions Cycles
  3425                           ; simple_byte           19    10 (average)
  3426                           ; direct_byte           55     9 (fixed)
  3427                           ; jumptable            263     9 (fixed)
  3428                           ;	Chosen strategy is simple_byte
  3429  0779  3A41               	xorlw	65	; case 65
  3430  077A  1903               	skipnz
  3431  077B  2EBA               	goto	l7368
  3432  077C  3A02               	xorlw	2	; case 67
  3433  077D  1903               	skipnz
  3434  077E  2ED3               	goto	l7382
  3435  077F  3A06               	xorlw	6	; case 69
  3436  0780  1903               	skipnz
  3437  0781  2F33               	goto	l7402
  3438  0782  3A0C               	xorlw	12	; case 73
  3439  0783  1903               	skipnz
  3440  0784  2EBE               	goto	l7376
  3441  0785  3A1A               	xorlw	26	; case 83
  3442  0786  1903               	skipnz
  3443  0787  2ED1               	goto	l7378
  3444  0788  3A04               	xorlw	4	; case 87
  3445  0789  1903               	skipnz
  3446  078A  2E79               	goto	l7356
  3447  078B  2F8C               	goto	l671
  3448  078C                     l671:	
  3449                           
  3450                           ;klondike.c: 101: LATAbits.LATA5 = 1;;
  3451  078C  0022               	movlb	2	; select bank2
  3452  078D  168C               	bsf	12,5	;volatile
  3453  078E  0008               	return
  3454  078F                     __end_of_ProcessCmd:	
  3455                           
  3456                           	psect	text3
  3457  09B3                     __ptext3:	
  3458 ;; *************** function _SendCmdReply *****************
  3459 ;; Defined at:
  3460 ;;		line 208 in file "main.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  cmd             2   14[BANK0 ] PTR unsigned char 
  3463 ;;		 -> ResultQue(6), OUTPacket(64), 
  3464 ;;  data            2   16[BANK0 ] PTR unsigned char 
  3465 ;;		 -> ResultQue(6), Cfg(6), ID(12), Status(13), 
  3466 ;;  count           1   18[BANK0 ] unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  n               1   19[BANK0 ] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;		None               void
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3478 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;      Totals:         0       6       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;Total ram usage:       14 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    5
  3485 ;; This function calls:
  3486 ;;		___bmul
  3487 ;;		___wmul
  3488 ;; This function is called by:
  3489 ;;		_ProcessCmd
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _SendCmdReply
  3495  09B3                     _SendCmdReply:	
  3496                           
  3497                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
  3498                           
  3499                           ;incstack = 0
  3500                           ; Regs used in _SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3501  09B3  0020               	movlb	0	; select bank0
  3502  09B4  0862               	movf	SendCmdReply@count,w
  3503  09B5  0021               	movlb	1	; select bank1
  3504  09B6  00A0               	movwf	??_SendCmdReply^(0+128)
  3505  09B7  01A1               	clrf	(??_SendCmdReply^(0+128)+1)
  3506  09B8  0022               	movlb	2	; select bank2
  3507  09B9  0850               	movf	_WQI^(0+256),w
  3508  09BA  0021               	movlb	1	; select bank1
  3509  09BB  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3510  09BC  01A3               	clrf	((??_SendCmdReply+2)^(0+128)+1)
  3511  09BD  0822               	movf	(??_SendCmdReply+2)^(0+128),w
  3512  09BE  0020               	movlb	0	; select bank0
  3513  09BF  00D8               	movwf	?___wmul
  3514  09C0  0021               	movlb	1	; select bank1
  3515  09C1  0823               	movf	(??_SendCmdReply+3)^(0+128),w
  3516  09C2  0020               	movlb	0	; select bank0
  3517  09C3  00D9               	movwf	?___wmul+1
  3518  09C4  300F               	movlw	15
  3519  09C5  00DA               	movwf	?___wmul+2
  3520  09C6  3000               	movlw	0
  3521  09C7  00DB               	movwf	?___wmul+3
  3522  09C8  319B  23F7  3189   	fcall	___wmul
  3523  09CB  0021               	movlb	1	; select bank1
  3524  09CC  0820               	movf	??_SendCmdReply^(0+128),w
  3525  09CD  0020               	movlb	0	; select bank0
  3526  09CE  0758               	addwf	?___wmul,w
  3527  09CF  0021               	movlb	1	; select bank1
  3528  09D0  00A4               	movwf	(??_SendCmdReply+4)^(0+128)
  3529  09D1  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3530  09D2  0020               	movlb	0	; select bank0
  3531  09D3  3D59               	addwfc	?___wmul+1,w
  3532  09D4  0021               	movlb	1	; select bank1
  3533  09D5  00A5               	movwf	(??_SendCmdReply+5)^(0+128)
  3534  09D6  0824               	movf	(??_SendCmdReply+4)^(0+128),w
  3535  09D7  3E02               	addlw	2
  3536  09D8  00A6               	movwf	(??_SendCmdReply+6)^(0+128)
  3537  09D9  3000               	movlw	0
  3538  09DA  3D25               	addwfc	(??_SendCmdReply+5)^(0+128),w
  3539  09DB  00A7               	movwf	(??_SendCmdReply+7)^(0+128)
  3540  09DC  0827               	movf	(??_SendCmdReply+7)^(0+128),w
  3541  09DD  3A80               	xorlw	128
  3542  09DE  00FF               	movwf	127
  3543  09DF  3080               	movlw	128
  3544  09E0  027F               	subwf	127,w
  3545  09E1  1D03               	skipz
  3546  09E2  29E5               	goto	u8265
  3547  09E3  3040               	movlw	64
  3548  09E4  0226               	subwf	(??_SendCmdReply+6)^(0+128),w
  3549  09E5                     u8265:	
  3550  09E5  1803               	skipnc
  3551  09E6  0008               	return
  3552                           
  3553                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
  3554  09E7  0020               	movlb	0	; select bank0
  3555  09E8  085E               	movf	SendCmdReply@cmd,w
  3556  09E9  0086               	movwf	6
  3557  09EA  085F               	movf	SendCmdReply@cmd+1,w
  3558  09EB  0087               	movwf	7
  3559  09EC  0801               	movf	1,w
  3560  09ED  0021               	movlb	1	; select bank1
  3561  09EE  00A0               	movwf	??_SendCmdReply^(0+128)
  3562  09EF  300F               	movlw	15
  3563  09F0  00A1               	movwf	(??_SendCmdReply+1)^(0+128)
  3564  09F1  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3565  09F2  0020               	movlb	0	; select bank0
  3566  09F3  00D8               	movwf	?___bmul
  3567  09F4  0022               	movlb	2	; select bank2
  3568  09F5  0850               	movf	_WQI^(0+256),w
  3569  09F6  319A  22DC  3189   	fcall	___bmul
  3570  09F9  3E20               	addlw	32
  3571  09FA  0086               	movwf	6
  3572  09FB  3002               	movlw	2	; select bank4/5
  3573  09FC  0087               	movwf	7
  3574  09FD  0021               	movlb	1	; select bank1
  3575  09FE  0820               	movf	??_SendCmdReply^(0+128),w
  3576  09FF  0081               	movwf	1
  3577                           
  3578                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
  3579  0A00  0022               	movlb	2	; select bank2
  3580  0A01  0834               	movf	_SlaveAddress^(0+256),w
  3581  0A02  0021               	movlb	1	; select bank1
  3582  0A03  00A0               	movwf	??_SendCmdReply^(0+128)
  3583  0A04  300F               	movlw	15
  3584  0A05  00A1               	movwf	(??_SendCmdReply+1)^(0+128)
  3585  0A06  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3586  0A07  0020               	movlb	0	; select bank0
  3587  0A08  00D8               	movwf	?___bmul
  3588  0A09  0022               	movlb	2	; select bank2
  3589  0A0A  0850               	movf	_WQI^(0+256),w
  3590  0A0B  319A  22DC  3189   	fcall	___bmul
  3591  0A0E  0021               	movlb	1	; select bank1
  3592  0A0F  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3593  0A10  0A22               	incf	(??_SendCmdReply+2)^(0+128),w
  3594  0A11  3E20               	addlw	32
  3595  0A12  0086               	movwf	6
  3596  0A13  3002               	movlw	2	; select bank4/5
  3597  0A14  0087               	movwf	7
  3598  0A15  0820               	movf	??_SendCmdReply^(0+128),w
  3599  0A16  0081               	movwf	1
  3600                           
  3601                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
  3602  0A17  0020               	movlb	0	; select bank0
  3603  0A18  01E3               	clrf	SendCmdReply@n
  3604  0A19                     l7444:	
  3605  0A19  0862               	movf	SendCmdReply@count,w
  3606  0A1A  0263               	subwf	SendCmdReply@n,w
  3607  0A1B  1803               	btfsc	3,0
  3608  0A1C  2A53               	goto	l7446
  3609                           
  3610                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
  3611  0A1D  0861               	movf	SendCmdReply@data+1,w
  3612  0A1E  0021               	movlb	1	; select bank1
  3613  0A1F  00A1               	movwf	(??_SendCmdReply^(0+128)+1)
  3614  0A20  0020               	movlb	0	; select bank0
  3615  0A21  0860               	movf	SendCmdReply@data,w
  3616  0A22  0021               	movlb	1	; select bank1
  3617  0A23  00A0               	movwf	??_SendCmdReply^(0+128)
  3618  0A24  0020               	movlb	0	; select bank0
  3619  0A25  0863               	movf	SendCmdReply@n,w
  3620  0A26  0021               	movlb	1	; select bank1
  3621  0A27  0720               	addwf	??_SendCmdReply^(0+128),w
  3622  0A28  0084               	movwf	4
  3623  0A29  0821               	movf	(??_SendCmdReply^(0+128)+1),w
  3624  0A2A  1803               	skipnc
  3625  0A2B  0A21               	incf	(??_SendCmdReply^(0+128)+1),w
  3626  0A2C  0085               	movwf	5
  3627  0A2D  0800               	movf	0,w	;code access
  3628  0A2E  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3629  0A2F  0022               	movlb	2	; select bank2
  3630  0A30  0850               	movf	_WQI^(0+256),w
  3631  0A31  0021               	movlb	1	; select bank1
  3632  0A32  00A3               	movwf	(??_SendCmdReply+3)^(0+128)
  3633  0A33  01A4               	clrf	((??_SendCmdReply+3)^(0+128)+1)
  3634  0A34  0823               	movf	(??_SendCmdReply+3)^(0+128),w
  3635  0A35  0020               	movlb	0	; select bank0
  3636  0A36  00D8               	movwf	?___wmul
  3637  0A37  0021               	movlb	1	; select bank1
  3638  0A38  0824               	movf	(??_SendCmdReply+4)^(0+128),w
  3639  0A39  0020               	movlb	0	; select bank0
  3640  0A3A  00D9               	movwf	?___wmul+1
  3641  0A3B  300F               	movlw	15
  3642  0A3C  00DA               	movwf	?___wmul+2
  3643  0A3D  3000               	movlw	0
  3644  0A3E  00DB               	movwf	?___wmul+3
  3645  0A3F  319B  23F7  3189   	fcall	___wmul
  3646  0A42  0020               	movlb	0	; select bank0
  3647  0A43  0858               	movf	?___wmul,w
  3648  0A44  0763               	addwf	SendCmdReply@n,w
  3649  0A45  3E02               	addlw	2
  3650  0A46  3E20               	addlw	32
  3651  0A47  0086               	movwf	6
  3652  0A48  3002               	movlw	2	; select bank4/5
  3653  0A49  0087               	movwf	7
  3654  0A4A  0021               	movlb	1	; select bank1
  3655  0A4B  0822               	movf	(??_SendCmdReply+2)^(0+128),w
  3656  0A4C  0081               	movwf	1
  3657  0A4D  3001               	movlw	1
  3658  0A4E  00A0               	movwf	??_SendCmdReply^(0+128)
  3659  0A4F  0820               	movf	??_SendCmdReply^(0+128),w
  3660  0A50  0020               	movlb	0	; select bank0
  3661  0A51  07E3               	addwf	SendCmdReply@n,f
  3662  0A52  2A19               	goto	l7444
  3663  0A53                     l7446:	
  3664                           
  3665                           ;main.c: 214: WQI = (WQI+1) & 3;
  3666  0A53  0022               	movlb	2	; select bank2
  3667  0A54  0A50               	incf	_WQI^(0+256),w
  3668  0A55  3903               	andlw	3
  3669  0A56  0021               	movlb	1	; select bank1
  3670  0A57  00A0               	movwf	??_SendCmdReply^(0+128)
  3671  0A58  0820               	movf	??_SendCmdReply^(0+128),w
  3672  0A59  0022               	movlb	2	; select bank2
  3673  0A5A  00D0               	movwf	_WQI^(0+256)
  3674  0A5B  0008               	return
  3675  0A5C                     __end_of_SendCmdReply:	
  3676                           
  3677                           	psect	text4
  3678  1ADC                     __ptext4:	
  3679 ;; *************** function ___bmul *****************
  3680 ;; Defined at:
  3681 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\bmul.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  multiplier      1    wreg     unsigned char 
  3684 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  multiplier      1   11[BANK0 ] unsigned char 
  3687 ;;  product         1   10[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      unsigned char 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3697 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;Total ram usage:        4 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    4
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_ProcessIO
  3708 ;;		_SendCmdReply
  3709 ;;		i1_SendCmdReply
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function ___bmul
  3715  1ADC                     ___bmul:	
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3719                           ;___bmul@multiplier stored from wreg
  3720  1ADC  0020               	movlb	0	; select bank0
  3721  1ADD  00DB               	movwf	___bmul@multiplier
  3722  1ADE  01DA               	clrf	___bmul@product
  3723  1ADF                     l7604:	
  3724  1ADF  1C5B               	btfss	___bmul@multiplier,0
  3725  1AE0  2AE5               	goto	l7608
  3726  1AE1  0858               	movf	___bmul@multiplicand,w
  3727  1AE2  00D9               	movwf	??___bmul
  3728  1AE3  0859               	movf	??___bmul,w
  3729  1AE4  07DA               	addwf	___bmul@product,f
  3730  1AE5                     l7608:	
  3731  1AE5  1003               	clrc
  3732  1AE6  0DD8               	rlf	___bmul@multiplicand,f
  3733  1AE7  1003               	clrc
  3734  1AE8  0CDB               	rrf	___bmul@multiplier,f
  3735  1AE9  08DB               	movf	___bmul@multiplier,f
  3736  1AEA  1D03               	skipz
  3737  1AEB  2ADF               	goto	l7604
  3738  1AEC  085A               	movf	___bmul@product,w
  3739  1AED  0008               	return
  3740  1AEE                     __end_of___bmul:	
  3741                           
  3742                           	psect	text5
  3743  1407                     __ptext5:	
  3744 ;; *************** function _AsicPushWork *****************
  3745 ;; Defined at:
  3746 ;;		line 105 in file "klondike.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;		None               void
  3753 ;; Registers used:
  3754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;Total ram usage:        5 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    6
  3767 ;; This function calls:
  3768 ;;		_SendAsicData
  3769 ;;		_AsicPreCalc
  3770 ;;		___wmul
  3771 ;; This function is called by:
  3772 ;;		_ProcessCmd
  3773 ;;		_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           
  3778                           ;psect for function _AsicPushWork
  3779  1407                     _AsicPushWork:	
  3780                           
  3781                           ;klondike.c: 106: AsicPreCalc(&WorkQue[WorkNow]);
  3782                           
  3783                           ;incstack = 0
  3784                           ; Regs used in _AsicPushWork: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3785  1407  0022               	movlb	2	; select bank2
  3786  1408  0840               	movf	_WorkNow^(0+256),w
  3787  1409  0021               	movlb	1	; select bank1
  3788  140A  00E5               	movwf	??_AsicPushWork^(0+128)
  3789  140B  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3790  140C  0865               	movf	??_AsicPushWork^(0+128),w
  3791  140D  0020               	movlb	0	; select bank0
  3792  140E  00D8               	movwf	?___wmul
  3793  140F  0021               	movlb	1	; select bank1
  3794  1410  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3795  1411  0020               	movlb	0	; select bank0
  3796  1412  00D9               	movwf	?___wmul+1
  3797  1413  302D               	movlw	45
  3798  1414  00DA               	movwf	?___wmul+2
  3799  1415  3000               	movlw	0
  3800  1416  00DB               	movwf	?___wmul+3
  3801  1417  319B  23F7  3194   	fcall	___wmul
  3802  141A  3088               	movlw	136
  3803  141B  0021               	movlb	1	; select bank1
  3804  141C  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3805  141D  3022               	movlw	34
  3806  141E  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3807  141F  0020               	movlb	0	; select bank0
  3808  1420  0858               	movf	?___wmul,w
  3809  1421  0021               	movlb	1	; select bank1
  3810  1422  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3811  1423  00A0               	movwf	?_AsicPreCalc^(0+128)
  3812  1424  0020               	movlb	0	; select bank0
  3813  1425  0859               	movf	?___wmul+1,w
  3814  1426  0021               	movlb	1	; select bank1
  3815  1427  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3816  1428  00A1               	movwf	(?_AsicPreCalc+1)^(0+128)
  3817  1429  3180  2014  3194   	fcall	_AsicPreCalc
  3818                           
  3819                           ;klondike.c: 107: Status.WorkID = WorkQue[WorkNow].WorkID;
  3820  142C  0022               	movlb	2	; select bank2
  3821  142D  0840               	movf	_WorkNow^(0+256),w
  3822  142E  0021               	movlb	1	; select bank1
  3823  142F  00E5               	movwf	??_AsicPushWork^(0+128)
  3824  1430  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3825  1431  0865               	movf	??_AsicPushWork^(0+128),w
  3826  1432  0020               	movlb	0	; select bank0
  3827  1433  00D8               	movwf	?___wmul
  3828  1434  0021               	movlb	1	; select bank1
  3829  1435  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3830  1436  0020               	movlb	0	; select bank0
  3831  1437  00D9               	movwf	?___wmul+1
  3832  1438  302D               	movlw	45
  3833  1439  00DA               	movwf	?___wmul+2
  3834  143A  3000               	movlw	0
  3835  143B  00DB               	movwf	?___wmul+3
  3836  143C  319B  23F7  3194   	fcall	___wmul
  3837  143F  3088               	movlw	136
  3838  1440  0021               	movlb	1	; select bank1
  3839  1441  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3840  1442  3022               	movlw	34
  3841  1443  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3842  1444  0020               	movlb	0	; select bank0
  3843  1445  0858               	movf	?___wmul,w
  3844  1446  0021               	movlb	1	; select bank1
  3845  1447  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3846  1448  0086               	movwf	6
  3847  1449  0020               	movlb	0	; select bank0
  3848  144A  0859               	movf	?___wmul+1,w
  3849  144B  0021               	movlb	1	; select bank1
  3850  144C  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3851  144D  0087               	movwf	7
  3852  144E  0801               	movf	1,w
  3853  144F  00E9               	movwf	(??_AsicPushWork+4)^(0+128)
  3854  1450  0869               	movf	(??_AsicPushWork+4)^(0+128),w
  3855  1451  0022               	movlb	2	; select bank2
  3856  1452  00D6               	movwf	(_Status^(0+256)+4)	;volatile
  3857                           
  3858                           ;klondike.c: 108: SendAsicData(&WorkQue[WorkNow]);
  3859  1453  0840               	movf	_WorkNow^(0+256),w
  3860  1454  0021               	movlb	1	; select bank1
  3861  1455  00E5               	movwf	??_AsicPushWork^(0+128)
  3862  1456  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3863  1457  0865               	movf	??_AsicPushWork^(0+128),w
  3864  1458  0020               	movlb	0	; select bank0
  3865  1459  00D8               	movwf	?___wmul
  3866  145A  0021               	movlb	1	; select bank1
  3867  145B  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3868  145C  0020               	movlb	0	; select bank0
  3869  145D  00D9               	movwf	?___wmul+1
  3870  145E  302D               	movlw	45
  3871  145F  00DA               	movwf	?___wmul+2
  3872  1460  3000               	movlw	0
  3873  1461  00DB               	movwf	?___wmul+3
  3874  1462  319B  23F7  3194   	fcall	___wmul
  3875  1465  3088               	movlw	136
  3876  1466  0021               	movlb	1	; select bank1
  3877  1467  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3878  1468  3022               	movlw	34
  3879  1469  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3880  146A  0020               	movlb	0	; select bank0
  3881  146B  0858               	movf	?___wmul,w
  3882  146C  0021               	movlb	1	; select bank1
  3883  146D  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3884  146E  0020               	movlb	0	; select bank0
  3885  146F  00DE               	movwf	?_SendAsicData
  3886  1470  0859               	movf	?___wmul+1,w
  3887  1471  0021               	movlb	1	; select bank1
  3888  1472  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3889  1473  0020               	movlb	0	; select bank0
  3890  1474  00DF               	movwf	?_SendAsicData+1
  3891  1475  3196  26C4         	fcall	_SendAsicData
  3892                           
  3893                           ;klondike.c: 109: WorkNow = (WorkNow+1) & 8-1;
  3894  1477  0022               	movlb	2	; select bank2
  3895  1478  0A40               	incf	_WorkNow^(0+256),w
  3896  1479  3907               	andlw	7
  3897  147A  0021               	movlb	1	; select bank1
  3898  147B  00E5               	movwf	??_AsicPushWork^(0+128)
  3899  147C  0865               	movf	??_AsicPushWork^(0+128),w
  3900  147D  0022               	movlb	2	; select bank2
  3901  147E  00C0               	movwf	_WorkNow^(0+256)
  3902                           
  3903                           ;klondike.c: 110: Status.HashCount = 0;
  3904  147F  01DA               	clrf	(_Status^(0+256)+8)	;volatile
  3905  1480  01DB               	clrf	((_Status+1)^(0+256)+8)	;volatile
  3906                           
  3907                           ;klondike.c: 111: TMR0 = HashTime;
  3908  1481  086B               	movf	_HashTime^(0+256),w
  3909  1482  0020               	movlb	0	; select bank0
  3910  1483  0095               	movwf	21	;volatile
  3911                           
  3912                           ;klondike.c: 112: Status.State = 'W';
  3913  1484  3057               	movlw	87
  3914  1485  0021               	movlb	1	; select bank1
  3915  1486  00E5               	movwf	??_AsicPushWork^(0+128)
  3916  1487  0865               	movf	??_AsicPushWork^(0+128),w
  3917  1488  0022               	movlb	2	; select bank2
  3918  1489  00D2               	movwf	_Status^(0+256)	;volatile
  3919                           
  3920                           ;klondike.c: 113: Status.WorkQC--;
  3921  148A  3001               	movlw	1
  3922  148B  02D5               	subwf	(_Status^(0+256)+3),f	;volatile
  3923  148C  0008               	return
  3924  148D                     __end_of_AsicPushWork:	
  3925                           
  3926                           	psect	text6
  3927  1BF7                     __ptext6:	
  3928 ;; *************** function ___wmul *****************
  3929 ;; Defined at:
  3930 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  multiplier      2    8[BANK0 ] unsigned int 
  3933 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  product         2   12[BANK0 ] unsigned int 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  2    8[BANK0 ] unsigned int 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;Total ram usage:        6 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    4
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_ProcessCmd
  3956 ;;		_AsicPushWork
  3957 ;;		_SendCmdReply
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function ___wmul
  3963  1BF7                     ___wmul:	
  3964                           
  3965                           ;incstack = 0
  3966                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3967  1BF7  0020               	movlb	0	; select bank0
  3968  1BF8  01DC               	clrf	___wmul@product
  3969  1BF9  01DD               	clrf	___wmul@product+1
  3970  1BFA                     l7620:	
  3971  1BFA  1C58               	btfss	___wmul@multiplier,0
  3972  1BFB  2C00               	goto	l1264
  3973  1BFC  085A               	movf	___wmul@multiplicand,w
  3974  1BFD  07DC               	addwf	___wmul@product,f
  3975  1BFE  085B               	movf	___wmul@multiplicand+1,w
  3976  1BFF  3DDD               	addwfc	___wmul@product+1,f
  3977  1C00                     l1264:	
  3978  1C00  3001               	movlw	1
  3979  1C01                     u8585:	
  3980  1C01  35DA               	lslf	___wmul@multiplicand,f
  3981  1C02  0DDB               	rlf	___wmul@multiplicand+1,f
  3982  1C03  0B89               	decfsz	9,f
  3983  1C04  2C01               	goto	u8585
  3984  1C05  3001               	movlw	1
  3985  1C06                     u8595:	
  3986  1C06  36D9               	lsrf	___wmul@multiplier+1,f
  3987  1C07  0CD8               	rrf	___wmul@multiplier,f
  3988  1C08  0B89               	decfsz	9,f
  3989  1C09  2C06               	goto	u8595
  3990  1C0A  0859               	movf	___wmul@multiplier+1,w
  3991  1C0B  0458               	iorwf	___wmul@multiplier,w
  3992  1C0C  1D03               	skipz
  3993  1C0D  2BFA               	goto	l7620
  3994  1C0E  085D               	movf	___wmul@product+1,w
  3995  1C0F  01D9               	clrf	?___wmul+1
  3996  1C10  07D9               	addwf	?___wmul+1,f
  3997  1C11  085C               	movf	___wmul@product,w
  3998  1C12  01D8               	clrf	?___wmul
  3999  1C13  07D8               	addwf	?___wmul,f
  4000  1C14  0008               	return
  4001  1C15                     __end_of___wmul:	
  4002                           
  4003                           	psect	text7
  4004  0014                     __ptext7:	
  4005 ;; *************** function _AsicPreCalc *****************
  4006 ;; Defined at:
  4007 ;;		line 318 in file "asic.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  work            2    0[BANK1 ] PTR struct _worktask
  4010 ;;		 -> WorkQue(360), 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  m              32   24[BANK1 ] unsigned long [8]
  4013 ;;  K              12   12[BANK1 ] unsigned long [3]
  4014 ;;  x               4   64[BANK1 ] unsigned long 
  4015 ;;  y               4   60[BANK1 ] unsigned long 
  4016 ;;  z               4   56[BANK1 ] unsigned long 
  4017 ;;  n               1   68[BANK1 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;		None               void
  4020 ;; Registers used:
  4021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4027 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;Total ram usage:       69 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    5
  4034 ;; This function calls:
  4035 ;;		_rotate
  4036 ;; This function is called by:
  4037 ;;		_AsicPushWork
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function _AsicPreCalc
  4043  0014                     _AsicPreCalc:	
  4044                           
  4045                           ;asic.c: 319: DWORD K[3] = { 0x428a2f98, 0x71374491, 0xb5c0fbcf };
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in _AsicPreCalc: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  4049  0014  30CE               	movlw	low AsicPreCalc@F3343
  4050  0015  0086               	movwf	6
  4051  0016  3001               	movlw	high AsicPreCalc@F3343
  4052  0017  0087               	movwf	7
  4053  0018  30AC               	movlw	low AsicPreCalc@K
  4054  0019  0084               	movwf	4
  4055  001A  3000               	movlw	high AsicPreCalc@K
  4056  001B  0085               	movwf	5
  4057  001C  300C               	movlw	12
  4058  001D  00FF               	movwf	127
  4059  001E                     u4740:	
  4060  001E  0016               	moviw fsr1++
  4061  001F  001A               	movwi fsr0++
  4062  0020  0BFF               	decfsz	127,f
  4063  0021  281E               	goto	u4740
  4064                           
  4065                           ;asic.c: 320: DWORD x, y, z;
  4066                           ;asic.c: 321: DWORD m[8];
  4067                           ;asic.c: 322: BYTE n;
  4068                           ;asic.c: 324: for(n = 0; n < 8; n++)
  4069  0022  0021               	movlb	1	; select bank1
  4070  0023  01E4               	clrf	AsicPreCalc@n^(0+128)
  4071  0024  3008               	movlw	8
  4072  0025  0264               	subwf	AsicPreCalc@n^(0+128),w
  4073  0026  1803               	btfsc	3,0
  4074  0027  285E               	goto	l5092
  4075  0028                     l5086:	
  4076                           
  4077                           ;asic.c: 325: m[n] = work->MidState[n];
  4078  0028  0864               	movf	AsicPreCalc@n^(0+128),w
  4079  0029  00A2               	movwf	??_AsicPreCalc^(0+128)
  4080  002A  01A3               	clrf	(??_AsicPreCalc^(0+128)+1)
  4081  002B  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4082  002C  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4083  002D  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4084  002E  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4085  002F  0822               	movf	??_AsicPreCalc^(0+128),w
  4086  0030  3E01               	addlw	1
  4087  0031  00A4               	movwf	(??_AsicPreCalc+2)^(0+128)
  4088  0032  3000               	movlw	0
  4089  0033  3D23               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4090  0034  00A5               	movwf	(??_AsicPreCalc+3)^(0+128)
  4091  0035  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4092  0036  0720               	addwf	AsicPreCalc@work^(0+128),w
  4093  0037  0086               	movwf	6
  4094  0038  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4095  0039  3D21               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4096  003A  0087               	movwf	7
  4097  003B  3F40               	moviw [0]fsr1
  4098  003C  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  4099  003D  3F41               	moviw [1]fsr1
  4100  003E  00A7               	movwf	((??_AsicPreCalc+4)^(0+128)+1)
  4101  003F  3F42               	moviw [2]fsr1
  4102  0040  00A8               	movwf	((??_AsicPreCalc+4)^(0+128)+2)
  4103  0041  3F43               	moviw [3]fsr1
  4104  0042  00A9               	movwf	((??_AsicPreCalc+4)^(0+128)+3)
  4105  0043  0864               	movf	AsicPreCalc@n^(0+128),w
  4106  0044  00AA               	movwf	(??_AsicPreCalc+8)^(0+128)
  4107  0045  3001               	movlw	1
  4108  0046                     u4765:	
  4109  0046  35AA               	lslf	(??_AsicPreCalc+8)^(0+128),f
  4110  0047  3EFF               	addlw	-1
  4111  0048  1D03               	skipz
  4112  0049  2846               	goto	u4765
  4113  004A  352A               	lslf	(??_AsicPreCalc+8)^(0+128),w
  4114  004B  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4115  004C  0086               	movwf	6
  4116  004D  0187               	clrf	7
  4117  004E  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4118  004F  3FC0               	movwi [0]fsr1
  4119  0050  0827               	movf	(??_AsicPreCalc+5)^(0+128),w
  4120  0051  3FC1               	movwi [1]fsr1
  4121  0052  0828               	movf	(??_AsicPreCalc+6)^(0+128),w
  4122  0053  3FC2               	movwi [2]fsr1
  4123  0054  0829               	movf	(??_AsicPreCalc+7)^(0+128),w
  4124  0055  3FC3               	movwi [3]fsr1
  4125  0056  3001               	movlw	1
  4126  0057  00A2               	movwf	??_AsicPreCalc^(0+128)
  4127  0058  0822               	movf	??_AsicPreCalc^(0+128),w
  4128  0059  07E4               	addwf	AsicPreCalc@n^(0+128),f
  4129  005A  3008               	movlw	8
  4130  005B  0264               	subwf	AsicPreCalc@n^(0+128),w
  4131  005C  1C03               	skipc
  4132  005D  2828               	goto	l5086
  4133  005E                     l5092:	
  4134                           
  4135                           ;asic.c: 327: for(n = 0; n < 3; n++) {
  4136  005E  01E4               	clrf	AsicPreCalc@n^(0+128)
  4137  005F                     L4:	
  4138  005F  3003               	movlw	3
  4139  0060  0264               	subwf	AsicPreCalc@n^(0+128),w
  4140  0061  1803               	btfsc	3,0
  4141  0062  0008               	return
  4142                           
  4143                           ;asic.c: 329: x = m[5-n] ^ m[6-n];
  4144  0063  0364               	decf	AsicPreCalc@n^(0+128),w
  4145  0064  3AFF               	xorlw	255
  4146  0065  00A2               	movwf	??_AsicPreCalc^(0+128)
  4147  0066  3001               	movlw	1
  4148  0067                     u4795:	
  4149  0067  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4150  0068  3EFF               	addlw	-1
  4151  0069  1D03               	skipz
  4152  006A  2867               	goto	u4795
  4153  006B  3522               	lslf	??_AsicPreCalc^(0+128),w
  4154  006C  3E18               	addlw	24
  4155  006D  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4156  006E  0086               	movwf	6
  4157  006F  0187               	clrf	7
  4158  0070  3F40               	moviw [0]fsr1
  4159  0071  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4160  0072  3F41               	moviw [1]fsr1
  4161  0073  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4162  0074  3F42               	moviw [2]fsr1
  4163  0075  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4164  0076  3F43               	moviw [3]fsr1
  4165  0077  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4166  0078  0364               	decf	AsicPreCalc@n^(0+128),w
  4167  0079  3AFF               	xorlw	255
  4168  007A  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4169  007B  3001               	movlw	1
  4170  007C                     u4805:	
  4171  007C  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4172  007D  3EFF               	addlw	-1
  4173  007E  1D03               	skipz
  4174  007F  287C               	goto	u4805
  4175  0080  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4176  0081  3E14               	addlw	20
  4177  0082  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4178  0083  0086               	movwf	6
  4179  0084  0187               	clrf	7
  4180  0085  3F40               	moviw [0]fsr1
  4181  0086  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4182  0087  3F41               	moviw [1]fsr1
  4183  0088  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4184  0089  3F42               	moviw [2]fsr1
  4185  008A  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4186  008B  3F43               	moviw [3]fsr1
  4187  008C  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4188  008D  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4189  008E  0628               	xorwf	(??_AsicPreCalc+6)^(0+128),w
  4190  008F  00E0               	movwf	AsicPreCalc@x^(0+128)
  4191  0090  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4192  0091  0629               	xorwf	(??_AsicPreCalc+7)^(0+128),w
  4193  0092  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4194  0093  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4195  0094  062A               	xorwf	(??_AsicPreCalc+8)^(0+128),w
  4196  0095  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4197  0096  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4198  0097  062B               	xorwf	(??_AsicPreCalc+9)^(0+128),w
  4199  0098  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4200                           
  4201                           ;asic.c: 330: x = x & m[4-n];
  4202  0099  0364               	decf	AsicPreCalc@n^(0+128),w
  4203  009A  3AFF               	xorlw	255
  4204  009B  00A2               	movwf	??_AsicPreCalc^(0+128)
  4205  009C  3001               	movlw	1
  4206  009D                     u4815:	
  4207  009D  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4208  009E  3EFF               	addlw	-1
  4209  009F  1D03               	skipz
  4210  00A0  289D               	goto	u4815
  4211  00A1  3522               	lslf	??_AsicPreCalc^(0+128),w
  4212  00A2  3E10               	addlw	16
  4213  00A3  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4214  00A4  0086               	movwf	6
  4215  00A5  0187               	clrf	7
  4216  00A6  0860               	movf	AsicPreCalc@x^(0+128),w
  4217  00A7  0501               	andwf	1,w
  4218  00A8  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4219  00A9  3141               	addfsr 1,1
  4220  00AA  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4221  00AB  0501               	andwf	1,w
  4222  00AC  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4223  00AD  3141               	addfsr 1,1
  4224  00AE  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4225  00AF  0501               	andwf	1,w
  4226  00B0  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4227  00B1  3141               	addfsr 1,1
  4228  00B2  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4229  00B3  0501               	andwf	1,w
  4230  00B4  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4231  00B5  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4232  00B6  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4233  00B7  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4234  00B8  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4235  00B9  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4236  00BA  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4237  00BB  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4238  00BC  00E0               	movwf	AsicPreCalc@x^(0+128)
  4239                           
  4240                           ;asic.c: 331: x = m[6-n] ^ x;
  4241  00BD  0364               	decf	AsicPreCalc@n^(0+128),w
  4242  00BE  3AFF               	xorlw	255
  4243  00BF  00A2               	movwf	??_AsicPreCalc^(0+128)
  4244  00C0  3001               	movlw	1
  4245  00C1                     u4825:	
  4246  00C1  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4247  00C2  3EFF               	addlw	-1
  4248  00C3  1D03               	skipz
  4249  00C4  28C1               	goto	u4825
  4250  00C5  3522               	lslf	??_AsicPreCalc^(0+128),w
  4251  00C6  3E18               	addlw	24
  4252  00C7  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4253  00C8  0086               	movwf	6
  4254  00C9  0187               	clrf	7
  4255  00CA  0860               	movf	AsicPreCalc@x^(0+128),w
  4256  00CB  0601               	xorwf	1,w
  4257  00CC  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4258  00CD  3141               	addfsr 1,1
  4259  00CE  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4260  00CF  0601               	xorwf	1,w
  4261  00D0  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4262  00D1  3141               	addfsr 1,1
  4263  00D2  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4264  00D3  0601               	xorwf	1,w
  4265  00D4  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4266  00D5  3141               	addfsr 1,1
  4267  00D6  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4268  00D7  0601               	xorwf	1,w
  4269  00D8  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4270  00D9  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4271  00DA  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4272  00DB  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4273  00DC  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4274  00DD  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4275  00DE  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4276  00DF  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4277  00E0  00E0               	movwf	AsicPreCalc@x^(0+128)
  4278                           
  4279                           ;asic.c: 332: x += K[n];
  4280  00E1  0864               	movf	AsicPreCalc@n^(0+128),w
  4281  00E2  00A2               	movwf	??_AsicPreCalc^(0+128)
  4282  00E3  3001               	movlw	1
  4283  00E4                     u4835:	
  4284  00E4  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4285  00E5  3EFF               	addlw	-1
  4286  00E6  1D03               	skipz
  4287  00E7  28E4               	goto	u4835
  4288  00E8  3522               	lslf	??_AsicPreCalc^(0+128),w
  4289  00E9  3EAC               	addlw	AsicPreCalc@K& (0+255)
  4290  00EA  0086               	movwf	6
  4291  00EB  0187               	clrf	7
  4292  00EC  3F40               	moviw [0]fsr1
  4293  00ED  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4294  00EE  3F41               	moviw [1]fsr1
  4295  00EF  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4296  00F0  3F42               	moviw [2]fsr1
  4297  00F1  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4298  00F2  3F43               	moviw [3]fsr1
  4299  00F3  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4300                           
  4301                           ;asic.c: 333: x += work->Merkle[n];
  4302  00F4  0864               	movf	AsicPreCalc@n^(0+128),w
  4303  00F5  00A2               	movwf	??_AsicPreCalc^(0+128)
  4304  00F6  01A3               	clrf	(??_AsicPreCalc^(0+128)+1)
  4305  00F7  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4306  00F8  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4307  00F9  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4308  00FA  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4309  00FB  0822               	movf	??_AsicPreCalc^(0+128),w
  4310  00FC  3E21               	addlw	33
  4311  00FD  00A4               	movwf	(??_AsicPreCalc+2)^(0+128)
  4312  00FE  3000               	movlw	0
  4313  00FF  3D23               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4314  0100  00A5               	movwf	(??_AsicPreCalc+3)^(0+128)
  4315  0101  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4316  0102  0720               	addwf	AsicPreCalc@work^(0+128),w
  4317  0103  0086               	movwf	6
  4318  0104  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4319  0105  3D21               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4320  0106  0087               	movwf	7
  4321  0107  3F40               	moviw [0]fsr1
  4322  0108  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4323  0109  3F41               	moviw [1]fsr1
  4324  010A  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4325  010B  3F42               	moviw [2]fsr1
  4326  010C  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4327  010D  3F43               	moviw [3]fsr1
  4328  010E  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4329                           
  4330                           ;asic.c: 334: x += m[7-n];
  4331  010F  0364               	decf	AsicPreCalc@n^(0+128),w
  4332  0110  3AFF               	xorlw	255
  4333  0111  00A2               	movwf	??_AsicPreCalc^(0+128)
  4334  0112  3001               	movlw	1
  4335  0113                     u4845:	
  4336  0113  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4337  0114  3EFF               	addlw	-1
  4338  0115  1D03               	skipz
  4339  0116  2913               	goto	u4845
  4340  0117  3522               	lslf	??_AsicPreCalc^(0+128),w
  4341  0118  3E1C               	addlw	28
  4342  0119  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4343  011A  0086               	movwf	6
  4344  011B  0187               	clrf	7
  4345  011C  3F40               	moviw [0]fsr1
  4346  011D  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4347  011E  3F41               	moviw [1]fsr1
  4348  011F  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4349  0120  3F42               	moviw [2]fsr1
  4350  0121  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4351  0122  3F43               	moviw [3]fsr1
  4352  0123  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4353                           
  4354                           ;asic.c: 335: y = rotate(m[4-n], 26);
  4355  0124  0364               	decf	AsicPreCalc@n^(0+128),w
  4356  0125  3AFF               	xorlw	255
  4357  0126  00A2               	movwf	??_AsicPreCalc^(0+128)
  4358  0127  3001               	movlw	1
  4359  0128                     u4855:	
  4360  0128  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4361  0129  3EFF               	addlw	-1
  4362  012A  1D03               	skipz
  4363  012B  2928               	goto	u4855
  4364  012C  3522               	lslf	??_AsicPreCalc^(0+128),w
  4365  012D  3E10               	addlw	16
  4366  012E  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4367  012F  0086               	movwf	6
  4368  0130  0187               	clrf	7
  4369  0131  3F40               	moviw [0]fsr1
  4370  0132  0020               	movlb	0	; select bank0
  4371  0133  00D8               	movwf	?_rotate
  4372  0134  3F41               	moviw [1]fsr1
  4373  0135  00D9               	movwf	?_rotate+1
  4374  0136  3F42               	moviw [2]fsr1
  4375  0137  00DA               	movwf	?_rotate+2
  4376  0138  3F43               	moviw [3]fsr1
  4377  0139  00DB               	movwf	?_rotate+3
  4378  013A  301A               	movlw	26
  4379  013B  0021               	movlb	1	; select bank1
  4380  013C  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4381  013D  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4382  013E  0020               	movlb	0	; select bank0
  4383  013F  00DC               	movwf	?_rotate+4
  4384  0140  319D  256D  3180   	fcall	_rotate
  4385  0143  0020               	movlb	0	; select bank0
  4386  0144  085B               	movf	?_rotate+3,w
  4387  0145  0021               	movlb	1	; select bank1
  4388  0146  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4389  0147  0020               	movlb	0	; select bank0
  4390  0148  085A               	movf	?_rotate+2,w
  4391  0149  0021               	movlb	1	; select bank1
  4392  014A  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4393  014B  0020               	movlb	0	; select bank0
  4394  014C  0859               	movf	?_rotate+1,w
  4395  014D  0021               	movlb	1	; select bank1
  4396  014E  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4397  014F  0020               	movlb	0	; select bank0
  4398  0150  0858               	movf	?_rotate,w
  4399  0151  0021               	movlb	1	; select bank1
  4400  0152  00DC               	movwf	AsicPreCalc@y^(0+128)
  4401                           
  4402                           ;asic.c: 336: z = rotate(m[4-n], 21);
  4403  0153  0364               	decf	AsicPreCalc@n^(0+128),w
  4404  0154  3AFF               	xorlw	255
  4405  0155  00A2               	movwf	??_AsicPreCalc^(0+128)
  4406  0156  3001               	movlw	1
  4407  0157                     u4865:	
  4408  0157  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4409  0158  3EFF               	addlw	-1
  4410  0159  1D03               	skipz
  4411  015A  2957               	goto	u4865
  4412  015B  3522               	lslf	??_AsicPreCalc^(0+128),w
  4413  015C  3E10               	addlw	16
  4414  015D  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4415  015E  0086               	movwf	6
  4416  015F  0187               	clrf	7
  4417  0160  3F40               	moviw [0]fsr1
  4418  0161  0020               	movlb	0	; select bank0
  4419  0162  00D8               	movwf	?_rotate
  4420  0163  3F41               	moviw [1]fsr1
  4421  0164  00D9               	movwf	?_rotate+1
  4422  0165  3F42               	moviw [2]fsr1
  4423  0166  00DA               	movwf	?_rotate+2
  4424  0167  3F43               	moviw [3]fsr1
  4425  0168  00DB               	movwf	?_rotate+3
  4426  0169  3015               	movlw	21
  4427  016A  0021               	movlb	1	; select bank1
  4428  016B  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4429  016C  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4430  016D  0020               	movlb	0	; select bank0
  4431  016E  00DC               	movwf	?_rotate+4
  4432  016F  319D  256D  3180   	fcall	_rotate
  4433  0172  0020               	movlb	0	; select bank0
  4434  0173  085B               	movf	?_rotate+3,w
  4435  0174  0021               	movlb	1	; select bank1
  4436  0175  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4437  0176  0020               	movlb	0	; select bank0
  4438  0177  085A               	movf	?_rotate+2,w
  4439  0178  0021               	movlb	1	; select bank1
  4440  0179  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4441  017A  0020               	movlb	0	; select bank0
  4442  017B  0859               	movf	?_rotate+1,w
  4443  017C  0021               	movlb	1	; select bank1
  4444  017D  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4445  017E  0020               	movlb	0	; select bank0
  4446  017F  0858               	movf	?_rotate,w
  4447  0180  0021               	movlb	1	; select bank1
  4448  0181  00D8               	movwf	AsicPreCalc@z^(0+128)
  4449                           
  4450                           ;asic.c: 337: z = y^z;
  4451  0182  085C               	movf	AsicPreCalc@y^(0+128),w
  4452  0183  0658               	xorwf	AsicPreCalc@z^(0+128),w
  4453  0184  00A2               	movwf	??_AsicPreCalc^(0+128)
  4454  0185  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4455  0186  0659               	xorwf	(AsicPreCalc@z+1)^(0+128),w
  4456  0187  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4457  0188  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4458  0189  065A               	xorwf	(AsicPreCalc@z+2)^(0+128),w
  4459  018A  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4460  018B  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4461  018C  065B               	xorwf	(AsicPreCalc@z+3)^(0+128),w
  4462  018D  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4463  018E  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4464  018F  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4465  0190  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4466  0191  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4467  0192  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4468  0193  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4469  0194  0822               	movf	??_AsicPreCalc^(0+128),w
  4470  0195  00D8               	movwf	AsicPreCalc@z^(0+128)
  4471                           
  4472                           ;asic.c: 338: y = rotate(m[4-n], 7);
  4473  0196  0364               	decf	AsicPreCalc@n^(0+128),w
  4474  0197  3AFF               	xorlw	255
  4475  0198  00A2               	movwf	??_AsicPreCalc^(0+128)
  4476  0199  3001               	movlw	1
  4477  019A                     u4875:	
  4478  019A  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4479  019B  3EFF               	addlw	-1
  4480  019C  1D03               	skipz
  4481  019D  299A               	goto	u4875
  4482  019E  3522               	lslf	??_AsicPreCalc^(0+128),w
  4483  019F  3E10               	addlw	16
  4484  01A0  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4485  01A1  0086               	movwf	6
  4486  01A2  0187               	clrf	7
  4487  01A3  3F40               	moviw [0]fsr1
  4488  01A4  0020               	movlb	0	; select bank0
  4489  01A5  00D8               	movwf	?_rotate
  4490  01A6  3F41               	moviw [1]fsr1
  4491  01A7  00D9               	movwf	?_rotate+1
  4492  01A8  3F42               	moviw [2]fsr1
  4493  01A9  00DA               	movwf	?_rotate+2
  4494  01AA  3F43               	moviw [3]fsr1
  4495  01AB  00DB               	movwf	?_rotate+3
  4496  01AC  3007               	movlw	7
  4497  01AD  0021               	movlb	1	; select bank1
  4498  01AE  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4499  01AF  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4500  01B0  0020               	movlb	0	; select bank0
  4501  01B1  00DC               	movwf	?_rotate+4
  4502  01B2  319D  256D  3180   	fcall	_rotate
  4503  01B5  0020               	movlb	0	; select bank0
  4504  01B6  085B               	movf	?_rotate+3,w
  4505  01B7  0021               	movlb	1	; select bank1
  4506  01B8  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4507  01B9  0020               	movlb	0	; select bank0
  4508  01BA  085A               	movf	?_rotate+2,w
  4509  01BB  0021               	movlb	1	; select bank1
  4510  01BC  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4511  01BD  0020               	movlb	0	; select bank0
  4512  01BE  0859               	movf	?_rotate+1,w
  4513  01BF  0021               	movlb	1	; select bank1
  4514  01C0  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4515  01C1  0020               	movlb	0	; select bank0
  4516  01C2  0858               	movf	?_rotate,w
  4517  01C3  0021               	movlb	1	; select bank1
  4518  01C4  00DC               	movwf	AsicPreCalc@y^(0+128)
  4519                           
  4520                           ;asic.c: 339: z = y^z;
  4521  01C5  085C               	movf	AsicPreCalc@y^(0+128),w
  4522  01C6  0658               	xorwf	AsicPreCalc@z^(0+128),w
  4523  01C7  00A2               	movwf	??_AsicPreCalc^(0+128)
  4524  01C8  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4525  01C9  0659               	xorwf	(AsicPreCalc@z+1)^(0+128),w
  4526  01CA  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4527  01CB  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4528  01CC  065A               	xorwf	(AsicPreCalc@z+2)^(0+128),w
  4529  01CD  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4530  01CE  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4531  01CF  065B               	xorwf	(AsicPreCalc@z+3)^(0+128),w
  4532  01D0  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4533  01D1  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4534  01D2  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4535  01D3  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4536  01D4  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4537  01D5  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4538  01D6  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4539  01D7  0822               	movf	??_AsicPreCalc^(0+128),w
  4540  01D8  00D8               	movwf	AsicPreCalc@z^(0+128)
  4541                           
  4542                           ;asic.c: 340: m[7-n] = z+x;
  4543  01D9  0858               	movf	AsicPreCalc@z^(0+128),w
  4544  01DA  0760               	addwf	AsicPreCalc@x^(0+128),w
  4545  01DB  00A2               	movwf	??_AsicPreCalc^(0+128)
  4546  01DC  0859               	movf	(AsicPreCalc@z+1)^(0+128),w
  4547  01DD  3D61               	addwfc	(AsicPreCalc@x+1)^(0+128),w
  4548  01DE  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4549  01DF  085A               	movf	(AsicPreCalc@z+2)^(0+128),w
  4550  01E0  3D62               	addwfc	(AsicPreCalc@x+2)^(0+128),w
  4551  01E1  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4552  01E2  085B               	movf	(AsicPreCalc@z+3)^(0+128),w
  4553  01E3  3D63               	addwfc	(AsicPreCalc@x+3)^(0+128),w
  4554  01E4  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4555  01E5  0364               	decf	AsicPreCalc@n^(0+128),w
  4556  01E6  3AFF               	xorlw	255
  4557  01E7  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  4558  01E8  3001               	movlw	1
  4559  01E9                     u4885:	
  4560  01E9  35A6               	lslf	(??_AsicPreCalc+4)^(0+128),f
  4561  01EA  3EFF               	addlw	-1
  4562  01EB  1D03               	skipz
  4563  01EC  29E9               	goto	u4885
  4564  01ED  3526               	lslf	(??_AsicPreCalc+4)^(0+128),w
  4565  01EE  3E1C               	addlw	28
  4566  01EF  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4567  01F0  0086               	movwf	6
  4568  01F1  0187               	clrf	7
  4569  01F2  0822               	movf	??_AsicPreCalc^(0+128),w
  4570  01F3  3FC0               	movwi [0]fsr1
  4571  01F4  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4572  01F5  3FC1               	movwi [1]fsr1
  4573  01F6  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4574  01F7  3FC2               	movwi [2]fsr1
  4575  01F8  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4576  01F9  3FC3               	movwi [3]fsr1
  4577                           
  4578                           ;asic.c: 341: m[3-n] = m[3-n] + m[7-n];
  4579  01FA  0364               	decf	AsicPreCalc@n^(0+128),w
  4580  01FB  3AFF               	xorlw	255
  4581  01FC  00A2               	movwf	??_AsicPreCalc^(0+128)
  4582  01FD  3001               	movlw	1
  4583  01FE                     u4895:	
  4584  01FE  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4585  01FF  3EFF               	addlw	-1
  4586  0200  1D03               	skipz
  4587  0201  29FE               	goto	u4895
  4588  0202  3522               	lslf	??_AsicPreCalc^(0+128),w
  4589  0203  3E1C               	addlw	28
  4590  0204  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4591  0205  0086               	movwf	6
  4592  0206  0187               	clrf	7
  4593  0207  3F40               	moviw [0]fsr1
  4594  0208  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4595  0209  3F41               	moviw [1]fsr1
  4596  020A  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4597  020B  3F42               	moviw [2]fsr1
  4598  020C  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4599  020D  3F43               	moviw [3]fsr1
  4600  020E  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4601  020F  0364               	decf	AsicPreCalc@n^(0+128),w
  4602  0210  3AFF               	xorlw	255
  4603  0211  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4604  0212  3001               	movlw	1
  4605  0213                     u4905:	
  4606  0213  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4607  0214  3EFF               	addlw	-1
  4608  0215  1D03               	skipz
  4609  0216  2A13               	goto	u4905
  4610  0217  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4611  0218  3E0C               	addlw	12
  4612  0219  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4613  021A  0086               	movwf	6
  4614  021B  0187               	clrf	7
  4615  021C  3F40               	moviw [0]fsr1
  4616  021D  07A3               	addwf	(??_AsicPreCalc+1)^(0+128),f
  4617  021E  3F41               	moviw [1]fsr1
  4618  021F  3DA4               	addwfc	((??_AsicPreCalc+1)^(0+128)+1),f
  4619  0220  3F42               	moviw [2]fsr1
  4620  0221  3DA5               	addwfc	((??_AsicPreCalc+1)^(0+128)+2),f
  4621  0222  3F43               	moviw [3]fsr1
  4622  0223  3DA6               	addwfc	((??_AsicPreCalc+1)^(0+128)+3),f
  4623  0224  0364               	decf	AsicPreCalc@n^(0+128),w
  4624  0225  3AFF               	xorlw	255
  4625  0226  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4626  0227  3001               	movlw	1
  4627  0228                     u4915:	
  4628  0228  35A8               	lslf	(??_AsicPreCalc+6)^(0+128),f
  4629  0229  3EFF               	addlw	-1
  4630  022A  1D03               	skipz
  4631  022B  2A28               	goto	u4915
  4632  022C  3528               	lslf	(??_AsicPreCalc+6)^(0+128),w
  4633  022D  3E0C               	addlw	12
  4634  022E  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4635  022F  0086               	movwf	6
  4636  0230  0187               	clrf	7
  4637  0231  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4638  0232  3FC0               	movwi [0]fsr1
  4639  0233  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4640  0234  3FC1               	movwi [1]fsr1
  4641  0235  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4642  0236  3FC2               	movwi [2]fsr1
  4643  0237  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4644  0238  3FC3               	movwi [3]fsr1
  4645                           
  4646                           ;asic.c: 342: x = rotate(m[((0-n)&7)], 30);
  4647  0239  0364               	decf	AsicPreCalc@n^(0+128),w
  4648  023A  3AFF               	xorlw	255
  4649  023B  3907               	andlw	7
  4650  023C  00A2               	movwf	??_AsicPreCalc^(0+128)
  4651  023D  3001               	movlw	1
  4652  023E                     u4925:	
  4653  023E  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4654  023F  3EFF               	addlw	-1
  4655  0240  1D03               	skipz
  4656  0241  2A3E               	goto	u4925
  4657  0242  3522               	lslf	??_AsicPreCalc^(0+128),w
  4658  0243  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4659  0244  0086               	movwf	6
  4660  0245  0187               	clrf	7
  4661  0246  3F40               	moviw [0]fsr1
  4662  0247  0020               	movlb	0	; select bank0
  4663  0248  00D8               	movwf	?_rotate
  4664  0249  3F41               	moviw [1]fsr1
  4665  024A  00D9               	movwf	?_rotate+1
  4666  024B  3F42               	moviw [2]fsr1
  4667  024C  00DA               	movwf	?_rotate+2
  4668  024D  3F43               	moviw [3]fsr1
  4669  024E  00DB               	movwf	?_rotate+3
  4670  024F  301E               	movlw	30
  4671  0250  0021               	movlb	1	; select bank1
  4672  0251  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4673  0252  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4674  0253  0020               	movlb	0	; select bank0
  4675  0254  00DC               	movwf	?_rotate+4
  4676  0255  319D  256D  3180   	fcall	_rotate
  4677  0258  0020               	movlb	0	; select bank0
  4678  0259  085B               	movf	?_rotate+3,w
  4679  025A  0021               	movlb	1	; select bank1
  4680  025B  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4681  025C  0020               	movlb	0	; select bank0
  4682  025D  085A               	movf	?_rotate+2,w
  4683  025E  0021               	movlb	1	; select bank1
  4684  025F  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4685  0260  0020               	movlb	0	; select bank0
  4686  0261  0859               	movf	?_rotate+1,w
  4687  0262  0021               	movlb	1	; select bank1
  4688  0263  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4689  0264  0020               	movlb	0	; select bank0
  4690  0265  0858               	movf	?_rotate,w
  4691  0266  0021               	movlb	1	; select bank1
  4692  0267  00E0               	movwf	AsicPreCalc@x^(0+128)
  4693                           
  4694                           ;asic.c: 343: y = rotate(m[((0-n)&7)], 19);
  4695  0268  0364               	decf	AsicPreCalc@n^(0+128),w
  4696  0269  3AFF               	xorlw	255
  4697  026A  3907               	andlw	7
  4698  026B  00A2               	movwf	??_AsicPreCalc^(0+128)
  4699  026C  3001               	movlw	1
  4700  026D                     u4935:	
  4701  026D  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4702  026E  3EFF               	addlw	-1
  4703  026F  1D03               	skipz
  4704  0270  2A6D               	goto	u4935
  4705  0271  3522               	lslf	??_AsicPreCalc^(0+128),w
  4706  0272  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4707  0273  0086               	movwf	6
  4708  0274  0187               	clrf	7
  4709  0275  3F40               	moviw [0]fsr1
  4710  0276  0020               	movlb	0	; select bank0
  4711  0277  00D8               	movwf	?_rotate
  4712  0278  3F41               	moviw [1]fsr1
  4713  0279  00D9               	movwf	?_rotate+1
  4714  027A  3F42               	moviw [2]fsr1
  4715  027B  00DA               	movwf	?_rotate+2
  4716  027C  3F43               	moviw [3]fsr1
  4717  027D  00DB               	movwf	?_rotate+3
  4718  027E  3013               	movlw	19
  4719  027F  0021               	movlb	1	; select bank1
  4720  0280  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4721  0281  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4722  0282  0020               	movlb	0	; select bank0
  4723  0283  00DC               	movwf	?_rotate+4
  4724  0284  319D  256D  3180   	fcall	_rotate
  4725  0287  0020               	movlb	0	; select bank0
  4726  0288  085B               	movf	?_rotate+3,w
  4727  0289  0021               	movlb	1	; select bank1
  4728  028A  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4729  028B  0020               	movlb	0	; select bank0
  4730  028C  085A               	movf	?_rotate+2,w
  4731  028D  0021               	movlb	1	; select bank1
  4732  028E  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4733  028F  0020               	movlb	0	; select bank0
  4734  0290  0859               	movf	?_rotate+1,w
  4735  0291  0021               	movlb	1	; select bank1
  4736  0292  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4737  0293  0020               	movlb	0	; select bank0
  4738  0294  0858               	movf	?_rotate,w
  4739  0295  0021               	movlb	1	; select bank1
  4740  0296  00DC               	movwf	AsicPreCalc@y^(0+128)
  4741                           
  4742                           ;asic.c: 344: y = y^x;
  4743  0297  085C               	movf	AsicPreCalc@y^(0+128),w
  4744  0298  0660               	xorwf	AsicPreCalc@x^(0+128),w
  4745  0299  00A2               	movwf	??_AsicPreCalc^(0+128)
  4746  029A  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4747  029B  0661               	xorwf	(AsicPreCalc@x+1)^(0+128),w
  4748  029C  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4749  029D  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4750  029E  0662               	xorwf	(AsicPreCalc@x+2)^(0+128),w
  4751  029F  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4752  02A0  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4753  02A1  0663               	xorwf	(AsicPreCalc@x+3)^(0+128),w
  4754  02A2  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4755  02A3  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4756  02A4  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4757  02A5  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4758  02A6  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4759  02A7  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4760  02A8  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4761  02A9  0822               	movf	??_AsicPreCalc^(0+128),w
  4762  02AA  00DC               	movwf	AsicPreCalc@y^(0+128)
  4763                           
  4764                           ;asic.c: 345: x = rotate(m[((0-n)&7)], 10);
  4765  02AB  0364               	decf	AsicPreCalc@n^(0+128),w
  4766  02AC  3AFF               	xorlw	255
  4767  02AD  3907               	andlw	7
  4768  02AE  00A2               	movwf	??_AsicPreCalc^(0+128)
  4769  02AF  3001               	movlw	1
  4770  02B0                     u4945:	
  4771  02B0  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4772  02B1  3EFF               	addlw	-1
  4773  02B2  1D03               	skipz
  4774  02B3  2AB0               	goto	u4945
  4775  02B4  3522               	lslf	??_AsicPreCalc^(0+128),w
  4776  02B5  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4777  02B6  0086               	movwf	6
  4778  02B7  0187               	clrf	7
  4779  02B8  3F40               	moviw [0]fsr1
  4780  02B9  0020               	movlb	0	; select bank0
  4781  02BA  00D8               	movwf	?_rotate
  4782  02BB  3F41               	moviw [1]fsr1
  4783  02BC  00D9               	movwf	?_rotate+1
  4784  02BD  3F42               	moviw [2]fsr1
  4785  02BE  00DA               	movwf	?_rotate+2
  4786  02BF  3F43               	moviw [3]fsr1
  4787  02C0  00DB               	movwf	?_rotate+3
  4788  02C1  300A               	movlw	10
  4789  02C2  0021               	movlb	1	; select bank1
  4790  02C3  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4791  02C4  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4792  02C5  0020               	movlb	0	; select bank0
  4793  02C6  00DC               	movwf	?_rotate+4
  4794  02C7  319D  256D  3180   	fcall	_rotate
  4795  02CA  0020               	movlb	0	; select bank0
  4796  02CB  085B               	movf	?_rotate+3,w
  4797  02CC  0021               	movlb	1	; select bank1
  4798  02CD  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4799  02CE  0020               	movlb	0	; select bank0
  4800  02CF  085A               	movf	?_rotate+2,w
  4801  02D0  0021               	movlb	1	; select bank1
  4802  02D1  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4803  02D2  0020               	movlb	0	; select bank0
  4804  02D3  0859               	movf	?_rotate+1,w
  4805  02D4  0021               	movlb	1	; select bank1
  4806  02D5  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4807  02D6  0020               	movlb	0	; select bank0
  4808  02D7  0858               	movf	?_rotate,w
  4809  02D8  0021               	movlb	1	; select bank1
  4810  02D9  00E0               	movwf	AsicPreCalc@x^(0+128)
  4811                           
  4812                           ;asic.c: 346: y = x^y;
  4813  02DA  0860               	movf	AsicPreCalc@x^(0+128),w
  4814  02DB  065C               	xorwf	AsicPreCalc@y^(0+128),w
  4815  02DC  00A2               	movwf	??_AsicPreCalc^(0+128)
  4816  02DD  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4817  02DE  065D               	xorwf	(AsicPreCalc@y+1)^(0+128),w
  4818  02DF  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4819  02E0  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4820  02E1  065E               	xorwf	(AsicPreCalc@y+2)^(0+128),w
  4821  02E2  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4822  02E3  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4823  02E4  065F               	xorwf	(AsicPreCalc@y+3)^(0+128),w
  4824  02E5  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4825  02E6  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4826  02E7  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4827  02E8  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4828  02E9  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4829  02EA  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4830  02EB  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4831  02EC  0822               	movf	??_AsicPreCalc^(0+128),w
  4832  02ED  00DC               	movwf	AsicPreCalc@y^(0+128)
  4833                           
  4834                           ;asic.c: 347: x = m[((0-n)&7)] | m[((1-n)&7)];
  4835  02EE  0364               	decf	AsicPreCalc@n^(0+128),w
  4836  02EF  3AFF               	xorlw	255
  4837  02F0  3E01               	addlw	1
  4838  02F1  3907               	andlw	7
  4839  02F2  00A2               	movwf	??_AsicPreCalc^(0+128)
  4840  02F3  3001               	movlw	1
  4841  02F4                     u4955:	
  4842  02F4  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4843  02F5  3EFF               	addlw	-1
  4844  02F6  1D03               	skipz
  4845  02F7  2AF4               	goto	u4955
  4846  02F8  3522               	lslf	??_AsicPreCalc^(0+128),w
  4847  02F9  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4848  02FA  0086               	movwf	6
  4849  02FB  0187               	clrf	7
  4850  02FC  3F40               	moviw [0]fsr1
  4851  02FD  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4852  02FE  3F41               	moviw [1]fsr1
  4853  02FF  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4854  0300  3F42               	moviw [2]fsr1
  4855  0301  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4856  0302  3F43               	moviw [3]fsr1
  4857  0303  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4858  0304  0364               	decf	AsicPreCalc@n^(0+128),w
  4859  0305  3AFF               	xorlw	255
  4860  0306  3907               	andlw	7
  4861  0307  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4862  0308  3001               	movlw	1
  4863  0309                     u4965:	
  4864  0309  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4865  030A  3EFF               	addlw	-1
  4866  030B  1D03               	skipz
  4867  030C  2B09               	goto	u4965
  4868  030D  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4869  030E  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4870  030F  0086               	movwf	6
  4871  0310  0187               	clrf	7
  4872  0311  3F40               	moviw [0]fsr1
  4873  0312  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4874  0313  3F41               	moviw [1]fsr1
  4875  0314  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4876  0315  3F42               	moviw [2]fsr1
  4877  0316  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4878  0317  3F43               	moviw [3]fsr1
  4879  0318  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4880  0319  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4881  031A  0428               	iorwf	(??_AsicPreCalc+6)^(0+128),w
  4882  031B  00E0               	movwf	AsicPreCalc@x^(0+128)
  4883  031C  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4884  031D  0429               	iorwf	(??_AsicPreCalc+7)^(0+128),w
  4885  031E  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4886  031F  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4887  0320  042A               	iorwf	(??_AsicPreCalc+8)^(0+128),w
  4888  0321  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4889  0322  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4890  0323  042B               	iorwf	(??_AsicPreCalc+9)^(0+128),w
  4891  0324  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4892                           
  4893                           ;asic.c: 348: x = m[((2-n)&7)] & x;
  4894  0325  0364               	decf	AsicPreCalc@n^(0+128),w
  4895  0326  3AFF               	xorlw	255
  4896  0327  3E02               	addlw	2
  4897  0328  3907               	andlw	7
  4898  0329  00A2               	movwf	??_AsicPreCalc^(0+128)
  4899  032A  3001               	movlw	1
  4900  032B                     u4975:	
  4901  032B  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4902  032C  3EFF               	addlw	-1
  4903  032D  1D03               	skipz
  4904  032E  2B2B               	goto	u4975
  4905  032F  3522               	lslf	??_AsicPreCalc^(0+128),w
  4906  0330  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4907  0331  0086               	movwf	6
  4908  0332  0187               	clrf	7
  4909  0333  0860               	movf	AsicPreCalc@x^(0+128),w
  4910  0334  0501               	andwf	1,w
  4911  0335  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4912  0336  3141               	addfsr 1,1
  4913  0337  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4914  0338  0501               	andwf	1,w
  4915  0339  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4916  033A  3141               	addfsr 1,1
  4917  033B  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4918  033C  0501               	andwf	1,w
  4919  033D  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4920  033E  3141               	addfsr 1,1
  4921  033F  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4922  0340  0501               	andwf	1,w
  4923  0341  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4924  0342  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4925  0343  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4926  0344  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4927  0345  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4928  0346  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4929  0347  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4930  0348  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4931  0349  00E0               	movwf	AsicPreCalc@x^(0+128)
  4932                           
  4933                           ;asic.c: 349: z = m[((0-n)&7)] & m[((1-n)&7)];
  4934  034A  0364               	decf	AsicPreCalc@n^(0+128),w
  4935  034B  3AFF               	xorlw	255
  4936  034C  3E01               	addlw	1
  4937  034D  3907               	andlw	7
  4938  034E  00A2               	movwf	??_AsicPreCalc^(0+128)
  4939  034F  3001               	movlw	1
  4940  0350                     u4985:	
  4941  0350  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4942  0351  3EFF               	addlw	-1
  4943  0352  1D03               	skipz
  4944  0353  2B50               	goto	u4985
  4945  0354  3522               	lslf	??_AsicPreCalc^(0+128),w
  4946  0355  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4947  0356  0086               	movwf	6
  4948  0357  0187               	clrf	7
  4949  0358  3F40               	moviw [0]fsr1
  4950  0359  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4951  035A  3F41               	moviw [1]fsr1
  4952  035B  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4953  035C  3F42               	moviw [2]fsr1
  4954  035D  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4955  035E  3F43               	moviw [3]fsr1
  4956  035F  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4957  0360  0364               	decf	AsicPreCalc@n^(0+128),w
  4958  0361  3AFF               	xorlw	255
  4959  0362  3907               	andlw	7
  4960  0363  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4961  0364  3001               	movlw	1
  4962  0365                     u4995:	
  4963  0365  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4964  0366  3EFF               	addlw	-1
  4965  0367  1D03               	skipz
  4966  0368  2B65               	goto	u4995
  4967  0369  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4968  036A  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4969  036B  0086               	movwf	6
  4970  036C  0187               	clrf	7
  4971  036D  3F40               	moviw [0]fsr1
  4972  036E  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4973  036F  3F41               	moviw [1]fsr1
  4974  0370  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4975  0371  3F42               	moviw [2]fsr1
  4976  0372  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4977  0373  3F43               	moviw [3]fsr1
  4978  0374  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4979  0375  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4980  0376  0528               	andwf	(??_AsicPreCalc+6)^(0+128),w
  4981  0377  00D8               	movwf	AsicPreCalc@z^(0+128)
  4982  0378  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4983  0379  0529               	andwf	(??_AsicPreCalc+7)^(0+128),w
  4984  037A  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4985  037B  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4986  037C  052A               	andwf	(??_AsicPreCalc+8)^(0+128),w
  4987  037D  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4988  037E  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4989  037F  052B               	andwf	(??_AsicPreCalc+9)^(0+128),w
  4990  0380  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4991                           
  4992                           ;asic.c: 350: x = x | z;
  4993  0381  0860               	movf	AsicPreCalc@x^(0+128),w
  4994  0382  0458               	iorwf	AsicPreCalc@z^(0+128),w
  4995  0383  00A2               	movwf	??_AsicPreCalc^(0+128)
  4996  0384  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4997  0385  0459               	iorwf	(AsicPreCalc@z+1)^(0+128),w
  4998  0386  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4999  0387  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  5000  0388  045A               	iorwf	(AsicPreCalc@z+2)^(0+128),w
  5001  0389  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  5002  038A  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  5003  038B  045B               	iorwf	(AsicPreCalc@z+3)^(0+128),w
  5004  038C  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  5005  038D  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5006  038E  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  5007  038F  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5008  0390  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  5009  0391  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5010  0392  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  5011  0393  0822               	movf	??_AsicPreCalc^(0+128),w
  5012  0394  00E0               	movwf	AsicPreCalc@x^(0+128)
  5013                           
  5014                           ;asic.c: 351: m[7-n] += y + x;
  5015  0395  085C               	movf	AsicPreCalc@y^(0+128),w
  5016  0396  0760               	addwf	AsicPreCalc@x^(0+128),w
  5017  0397  00A2               	movwf	??_AsicPreCalc^(0+128)
  5018  0398  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  5019  0399  3D61               	addwfc	(AsicPreCalc@x+1)^(0+128),w
  5020  039A  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  5021  039B  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  5022  039C  3D62               	addwfc	(AsicPreCalc@x+2)^(0+128),w
  5023  039D  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  5024  039E  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  5025  039F  3D63               	addwfc	(AsicPreCalc@x+3)^(0+128),w
  5026  03A0  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  5027  03A1  0364               	decf	AsicPreCalc@n^(0+128),w
  5028  03A2  3AFF               	xorlw	255
  5029  03A3  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  5030  03A4  3001               	movlw	1
  5031  03A5                     u5005:	
  5032  03A5  35A6               	lslf	(??_AsicPreCalc+4)^(0+128),f
  5033  03A6  3EFF               	addlw	-1
  5034  03A7  1D03               	skipz
  5035  03A8  2BA5               	goto	u5005
  5036  03A9  3526               	lslf	(??_AsicPreCalc+4)^(0+128),w
  5037  03AA  3E1C               	addlw	28
  5038  03AB  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5039  03AC  0086               	movwf	6
  5040  03AD  0187               	clrf	7
  5041  03AE  0822               	movf	??_AsicPreCalc^(0+128),w
  5042  03AF  0781               	addwf	1,f
  5043  03B0  3141               	addfsr 1,1
  5044  03B1  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5045  03B2  3D81               	addwfc	1,f
  5046  03B3  3141               	addfsr 1,1
  5047  03B4  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5048  03B5  3D81               	addwfc	1,f
  5049  03B6  3141               	addfsr 1,1
  5050  03B7  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5051  03B8  3D81               	addwfc	1,f
  5052                           
  5053                           ;asic.c: 353: PrecalcHashes[2-n] = m[7-n];
  5054  03B9  0364               	decf	AsicPreCalc@n^(0+128),w
  5055  03BA  3AFF               	xorlw	255
  5056  03BB  00A2               	movwf	??_AsicPreCalc^(0+128)
  5057  03BC  3001               	movlw	1
  5058  03BD                     u5015:	
  5059  03BD  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5060  03BE  3EFF               	addlw	-1
  5061  03BF  1D03               	skipz
  5062  03C0  2BBD               	goto	u5015
  5063  03C1  3522               	lslf	??_AsicPreCalc^(0+128),w
  5064  03C2  3E1C               	addlw	28
  5065  03C3  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5066  03C4  0086               	movwf	6
  5067  03C5  0187               	clrf	7
  5068  03C6  3F40               	moviw [0]fsr1
  5069  03C7  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5070  03C8  3F41               	moviw [1]fsr1
  5071  03C9  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5072  03CA  3F42               	moviw [2]fsr1
  5073  03CB  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5074  03CC  3F43               	moviw [3]fsr1
  5075  03CD  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5076  03CE  0364               	decf	AsicPreCalc@n^(0+128),w
  5077  03CF  3AFF               	xorlw	255
  5078  03D0  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5079  03D1  3001               	movlw	1
  5080  03D2                     u5025:	
  5081  03D2  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5082  03D3  3EFF               	addlw	-1
  5083  03D4  1D03               	skipz
  5084  03D5  2BD2               	goto	u5025
  5085  03D6  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5086  03D7  3E08               	addlw	8
  5087  03D8  3EA8               	addlw	_PrecalcHashes& (0+255)
  5088  03D9  0086               	movwf	6
  5089  03DA  3001               	movlw	1	; select bank3/4
  5090  03DB  0087               	movwf	7
  5091  03DC  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5092  03DD  3FC0               	movwi [0]fsr1
  5093  03DE  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5094  03DF  3FC1               	movwi [1]fsr1
  5095  03E0  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5096  03E1  3FC2               	movwi [2]fsr1
  5097  03E2  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5098  03E3  3FC3               	movwi [3]fsr1
  5099                           
  5100                           ;asic.c: 354: PrecalcHashes[5-n] = m[3-n];
  5101  03E4  0364               	decf	AsicPreCalc@n^(0+128),w
  5102  03E5  3AFF               	xorlw	255
  5103  03E6  00A2               	movwf	??_AsicPreCalc^(0+128)
  5104  03E7  3001               	movlw	1
  5105  03E8                     u5035:	
  5106  03E8  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5107  03E9  3EFF               	addlw	-1
  5108  03EA  1D03               	skipz
  5109  03EB  2BE8               	goto	u5035
  5110  03EC  3522               	lslf	??_AsicPreCalc^(0+128),w
  5111  03ED  3E0C               	addlw	12
  5112  03EE  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5113  03EF  0086               	movwf	6
  5114  03F0  0187               	clrf	7
  5115  03F1  3F40               	moviw [0]fsr1
  5116  03F2  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5117  03F3  3F41               	moviw [1]fsr1
  5118  03F4  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5119  03F5  3F42               	moviw [2]fsr1
  5120  03F6  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5121  03F7  3F43               	moviw [3]fsr1
  5122  03F8  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5123  03F9  0364               	decf	AsicPreCalc@n^(0+128),w
  5124  03FA  3AFF               	xorlw	255
  5125  03FB  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5126  03FC  3001               	movlw	1
  5127  03FD                     u5045:	
  5128  03FD  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5129  03FE  3EFF               	addlw	-1
  5130  03FF  1D03               	skipz
  5131  0400  2BFD               	goto	u5045
  5132  0401  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5133  0402  3E14               	addlw	20
  5134  0403  3EA8               	addlw	_PrecalcHashes& (0+255)
  5135  0404  0086               	movwf	6
  5136  0405  3001               	movlw	1	; select bank3/4
  5137  0406  0087               	movwf	7
  5138  0407  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5139  0408  3FC0               	movwi [0]fsr1
  5140  0409  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5141  040A  3FC1               	movwi [1]fsr1
  5142  040B  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5143  040C  3FC2               	movwi [2]fsr1
  5144  040D  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5145  040E  3FC3               	movwi [3]fsr1
  5146  040F  3001               	movlw	1
  5147  0410  00A2               	movwf	??_AsicPreCalc^(0+128)
  5148  0411  0822               	movf	??_AsicPreCalc^(0+128),w
  5149  0412  07E4               	addwf	AsicPreCalc@n^(0+128),f
  5150  0413  285F               	goto	L4
  5151  0414                     __end_of_AsicPreCalc:	
  5152                           
  5153                           	psect	text8
  5154  1D6D                     __ptext8:	
  5155 ;; *************** function _rotate *****************
  5156 ;; Defined at:
  5157 ;;		line 313 in file "asic.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  x               4    8[BANK0 ] unsigned long 
  5160 ;;  y               1   12[BANK0 ] unsigned char 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  4    8[BANK0 ] unsigned long 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5172 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;Total ram usage:       13 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    4
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_AsicPreCalc
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           
  5187                           ;psect for function _rotate
  5188  1D6D                     _rotate:	
  5189                           
  5190                           ;asic.c: 314: return ((x<<y) | (x>>(32-y)));
  5191                           
  5192                           ;incstack = 0
  5193                           ; Regs used in _rotate: [wreg+status,2+status,0]
  5194  1D6D  0020               	movlb	0	; select bank0
  5195  1D6E  0858               	movf	rotate@x,w
  5196  1D6F  00DD               	movwf	??_rotate
  5197  1D70  0859               	movf	rotate@x+1,w
  5198  1D71  00DE               	movwf	??_rotate+1
  5199  1D72  085A               	movf	rotate@x+2,w
  5200  1D73  00DF               	movwf	??_rotate+2
  5201  1D74  085B               	movf	rotate@x+3,w
  5202  1D75  00E0               	movwf	??_rotate+3
  5203  1D76  035C               	decf	rotate@y,w
  5204  1D77  3AFF               	xorlw	255
  5205  1D78  3E20               	addlw	32
  5206  1D79  0A89               	incf	9,f
  5207  1D7A  2D80               	goto	u4720
  5208  1D7B                     u4725:	
  5209  1D7B  1003               	clrc
  5210  1D7C  0CE0               	rrf	??_rotate+3,f
  5211  1D7D  0CDF               	rrf	??_rotate+2,f
  5212  1D7E  0CDE               	rrf	??_rotate+1,f
  5213  1D7F  0CDD               	rrf	??_rotate,f
  5214  1D80                     u4720:	
  5215  1D80  3EFF               	addlw	-1
  5216  1D81  1D03               	skipz
  5217  1D82  2D7B               	goto	u4725
  5218  1D83  0858               	movf	rotate@x,w
  5219  1D84  00E1               	movwf	??_rotate+4
  5220  1D85  0859               	movf	rotate@x+1,w
  5221  1D86  00E2               	movwf	??_rotate+5
  5222  1D87  085A               	movf	rotate@x+2,w
  5223  1D88  00E3               	movwf	??_rotate+6
  5224  1D89  085B               	movf	rotate@x+3,w
  5225  1D8A  00E4               	movwf	??_rotate+7
  5226  1D8B  0A5C               	incf	rotate@y,w
  5227  1D8C  2D91               	goto	u4730
  5228  1D8D                     u4735:	
  5229  1D8D  35E1               	lslf	??_rotate+4,f
  5230  1D8E  0DE2               	rlf	??_rotate+5,f
  5231  1D8F  0DE3               	rlf	??_rotate+6,f
  5232  1D90  0DE4               	rlf	??_rotate+7,f
  5233  1D91                     u4730:	
  5234  1D91  0B89               	decfsz	9,f
  5235  1D92  2D8D               	goto	u4735
  5236  1D93  0861               	movf	??_rotate+4,w
  5237  1D94  04DD               	iorwf	??_rotate,f
  5238  1D95  0862               	movf	??_rotate+5,w
  5239  1D96  04DE               	iorwf	??_rotate+1,f
  5240  1D97  0863               	movf	??_rotate+6,w
  5241  1D98  04DF               	iorwf	??_rotate+2,f
  5242  1D99  0864               	movf	??_rotate+7,w
  5243  1D9A  04E0               	iorwf	??_rotate+3,f
  5244  1D9B  0860               	movf	??_rotate+3,w
  5245  1D9C  00DB               	movwf	?_rotate+3
  5246  1D9D  085F               	movf	??_rotate+2,w
  5247  1D9E  00DA               	movwf	?_rotate+2
  5248  1D9F  085E               	movf	??_rotate+1,w
  5249  1DA0  00D9               	movwf	?_rotate+1
  5250  1DA1  085D               	movf	??_rotate,w
  5251  1DA2  00D8               	movwf	?_rotate
  5252  1DA3  0008               	return
  5253  1DA4                     __end_of_rotate:	
  5254                           
  5255                           	psect	text9
  5256  16C4                     __ptext9:	
  5257 ;; *************** function _SendAsicData *****************
  5258 ;; Defined at:
  5259 ;;		line 36 in file "asic.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  work            2   14[BANK0 ] PTR struct _worktask
  5262 ;;		 -> WorkQue(360), 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;		None               void
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0, pclath, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;Total ram usage:        6 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    5
  5281 ;; This function calls:
  5282 ;;		_Send32
  5283 ;; This function is called by:
  5284 ;;		_AsicPushWork
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           
  5289                           ;psect for function _SendAsicData
  5290  16C4                     _SendAsicData:	
  5291                           
  5292                           ;asic.c: 37: GIE = 0;
  5293                           
  5294                           ;incstack = 0
  5295                           ; Regs used in _SendAsicData: [wreg+status,2+status,0+pclath+cstack]
  5296  16C4  138B               	bcf	11,7	;volatile
  5297                           
  5298                           ;asic.c: 38: last_bit0 = 0x48; last_bit1 = 0x90;
  5299  16C5  3048               	movlw	72
  5300  16C6  0020               	movlb	0	; select bank0
  5301  16C7  00E0               	movwf	??_SendAsicData
  5302  16C8  0860               	movf	??_SendAsicData,w
  5303  16C9  0022               	movlb	2	; select bank2
  5304  16CA  00C2               	movwf	_last_bit0^(0+256)
  5305  16CB  3090               	movlw	144
  5306  16CC  0020               	movlb	0	; select bank0
  5307  16CD  00E0               	movwf	??_SendAsicData
  5308  16CE  0860               	movf	??_SendAsicData,w
  5309  16CF  0022               	movlb	2	; select bank2
  5310  16D0  00C3               	movwf	_last_bit1^(0+256)
  5311                           
  5312                           ;asic.c: 39: send32_data = (WORD)&ClockCfg; send32_count = 2;
  5313  16D1  30C0               	movlw	low _ClockCfg
  5314  16D2  00AA               	movwf	_send32_data^(0+256)
  5315  16D3  3001               	movlw	high _ClockCfg
  5316  16D4  00AB               	movwf	(_send32_data+1)^(0+256)
  5317  16D5  3002               	movlw	2
  5318  16D6  0020               	movlb	0	; select bank0
  5319  16D7  00E0               	movwf	??_SendAsicData
  5320  16D8  0860               	movf	??_SendAsicData,w
  5321  16D9  0022               	movlb	2	; select bank2
  5322  16DA  00C5               	movwf	_send32_count^(0+256)
  5323                           
  5324                           ;asic.c: 40: Send32();
  5325  16DB  318A  225C  3196   	fcall	_Send32
  5326                           
  5327                           ;asic.c: 41: send32_data = (WORD)&work->Merkle; send32_count = 3;
  5328  16DE  0020               	movlb	0	; select bank0
  5329  16DF  085E               	movf	SendAsicData@work,w
  5330  16E0  3E21               	addlw	33
  5331  16E1  0022               	movlb	2	; select bank2
  5332  16E2  00AA               	movwf	_send32_data^(0+256)
  5333  16E3  3000               	movlw	0
  5334  16E4  0020               	movlb	0	; select bank0
  5335  16E5  3D5F               	addwfc	SendAsicData@work+1,w
  5336  16E6  0022               	movlb	2	; select bank2
  5337  16E7  00AB               	movwf	(_send32_data+1)^(0+256)
  5338  16E8  3003               	movlw	3
  5339  16E9  0020               	movlb	0	; select bank0
  5340  16EA  00E0               	movwf	??_SendAsicData
  5341  16EB  0860               	movf	??_SendAsicData,w
  5342  16EC  0022               	movlb	2	; select bank2
  5343  16ED  00C5               	movwf	_send32_count^(0+256)
  5344                           
  5345                           ;asic.c: 42: Send32();
  5346  16EE  318A  225C  3196   	fcall	_Send32
  5347                           
  5348                           ;asic.c: 43: send32_data = (WORD)&PrecalcHashes[1]; send32_count = 5;
  5349  16F1  30AC               	movlw	low (_PrecalcHashes+4)
  5350  16F2  0022               	movlb	2	; select bank2
  5351  16F3  00AA               	movwf	_send32_data^(0+256)
  5352  16F4  3001               	movlw	high (_PrecalcHashes+4)
  5353  16F5  00AB               	movwf	(_send32_data+1)^(0+256)
  5354  16F6  3005               	movlw	5
  5355  16F7  0020               	movlb	0	; select bank0
  5356  16F8  00E0               	movwf	??_SendAsicData
  5357  16F9  0860               	movf	??_SendAsicData,w
  5358  16FA  0022               	movlb	2	; select bank2
  5359  16FB  00C5               	movwf	_send32_count^(0+256)
  5360                           
  5361                           ;asic.c: 44: Send32();
  5362  16FC  318A  225C  3196   	fcall	_Send32
  5363                           
  5364                           ;asic.c: 45: send32_data = (WORD)&work->MidState; send32_count = 8;
  5365  16FF  0020               	movlb	0	; select bank0
  5366  1700  085E               	movf	SendAsicData@work,w
  5367  1701  3E01               	addlw	1
  5368  1702  0022               	movlb	2	; select bank2
  5369  1703  00AA               	movwf	_send32_data^(0+256)
  5370  1704  3000               	movlw	0
  5371  1705  0020               	movlb	0	; select bank0
  5372  1706  3D5F               	addwfc	SendAsicData@work+1,w
  5373  1707  0022               	movlb	2	; select bank2
  5374  1708  00AB               	movwf	(_send32_data+1)^(0+256)
  5375  1709  3008               	movlw	8
  5376  170A  0020               	movlb	0	; select bank0
  5377  170B  00E0               	movwf	??_SendAsicData
  5378  170C  0860               	movf	??_SendAsicData,w
  5379  170D  0022               	movlb	2	; select bank2
  5380  170E  00C5               	movwf	_send32_count^(0+256)
  5381                           
  5382                           ;asic.c: 46: Send32();
  5383  170F  318A  225C  3196   	fcall	_Send32
  5384                           
  5385                           ;asic.c: 47: send32_data = (WORD)&PrecalcHashes; send32_count = 1;
  5386  1712  30A8               	movlw	low _PrecalcHashes
  5387  1713  0022               	movlb	2	; select bank2
  5388  1714  00AA               	movwf	_send32_data^(0+256)
  5389  1715  3001               	movlw	high _PrecalcHashes
  5390  1716  00AB               	movwf	(_send32_data+1)^(0+256)
  5391  1717  01C5               	clrf	_send32_count^(0+256)
  5392  1718  0AC5               	incf	_send32_count^(0+256),f
  5393                           
  5394                           ;asic.c: 48: Send32();
  5395  1719  318A  225C  3196   	fcall	_Send32
  5396                           
  5397                           ;asic.c: 49: last_bit0 = last_bit1 = 0x50;
  5398  171C  3050               	movlw	80
  5399  171D  0022               	movlb	2	; select bank2
  5400  171E  00C3               	movwf	_last_bit1^(0+256)
  5401  171F  0020               	movlb	0	; select bank0
  5402  1720  00E0               	movwf	??_SendAsicData
  5403  1721  0860               	movf	??_SendAsicData,w
  5404  1722  0022               	movlb	2	; select bank2
  5405  1723  00C2               	movwf	_last_bit0^(0+256)
  5406                           
  5407                           ;asic.c: 50: send32_data = (WORD)&NonceRanges; send32_count = BankSize;
  5408  1724  3020               	movlw	low _NonceRanges
  5409  1725  00AA               	movwf	_send32_data^(0+256)
  5410  1726  3003               	movlw	high _NonceRanges
  5411  1727  00AB               	movwf	(_send32_data+1)^(0+256)
  5412  1728  086C               	movf	_BankSize^(0+256),w
  5413  1729  0020               	movlb	0	; select bank0
  5414  172A  00E0               	movwf	??_SendAsicData
  5415  172B  0860               	movf	??_SendAsicData,w
  5416  172C  0022               	movlb	2	; select bank2
  5417  172D  00C5               	movwf	_send32_count^(0+256)
  5418                           
  5419                           ;asic.c: 51: Send32();
  5420  172E  318A  225C         	fcall	_Send32
  5421                           
  5422                           ;asic.c: 52: LATC = 0xD8;;
  5423  1730  30D8               	movlw	216
  5424  1731  0022               	movlb	2	; select bank2
  5425  1732  008E               	movwf	14	;volatile
  5426                           
  5427                           ;asic.c: 53: GIE = 1;
  5428  1733  178B               	bsf	11,7	;volatile
  5429                           
  5430                           ;asic.c: 54: ClockCfg[0] = ClockCfg[0] & ~0x00000002;
  5431  1734  30FD               	movlw	253
  5432  1735  0023               	movlb	3	; select bank3
  5433  1736  0540               	andwf	_ClockCfg^(0+384),w
  5434  1737  0020               	movlb	0	; select bank0
  5435  1738  00E0               	movwf	??_SendAsicData
  5436  1739  30FF               	movlw	255
  5437  173A  0023               	movlb	3	; select bank3
  5438  173B  0541               	andwf	(_ClockCfg+1)^(0+384),w
  5439  173C  0020               	movlb	0	; select bank0
  5440  173D  00E1               	movwf	??_SendAsicData+1
  5441  173E  30FF               	movlw	255
  5442  173F  0023               	movlb	3	; select bank3
  5443  1740  0542               	andwf	(_ClockCfg+2)^(0+384),w
  5444  1741  0020               	movlb	0	; select bank0
  5445  1742  00E2               	movwf	??_SendAsicData+2
  5446  1743  30FF               	movlw	255
  5447  1744  0023               	movlb	3	; select bank3
  5448  1745  0543               	andwf	(_ClockCfg+3)^(0+384),w
  5449  1746  0020               	movlb	0	; select bank0
  5450  1747  00E3               	movwf	??_SendAsicData+3
  5451  1748  0863               	movf	??_SendAsicData+3,w
  5452  1749  0023               	movlb	3	; select bank3
  5453  174A  00C3               	movwf	(_ClockCfg+3)^(0+384)
  5454  174B  0020               	movlb	0	; select bank0
  5455  174C  0862               	movf	??_SendAsicData+2,w
  5456  174D  0023               	movlb	3	; select bank3
  5457  174E  00C2               	movwf	(_ClockCfg+2)^(0+384)
  5458  174F  0020               	movlb	0	; select bank0
  5459  1750  0861               	movf	??_SendAsicData+1,w
  5460  1751  0023               	movlb	3	; select bank3
  5461  1752  00C1               	movwf	(_ClockCfg+1)^(0+384)
  5462  1753  0020               	movlb	0	; select bank0
  5463  1754  0860               	movf	??_SendAsicData,w
  5464  1755  0023               	movlb	3	; select bank3
  5465  1756  00C0               	movwf	_ClockCfg^(0+384)
  5466  1757  0008               	return
  5467  1758                     __end_of_SendAsicData:	
  5468                           
  5469                           	psect	text10
  5470  0A5C                     __ptext10:	
  5471 ;; *************** function _Send32 *****************
  5472 ;; Defined at:
  5473 ;;		line 58 in file "asic.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;		None               void
  5480 ;; Registers used:
  5481 ;;		None
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    4
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_SendAsicData
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           
  5502                           ;psect for function _Send32
  5503  0A5C                     _Send32:	
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in _Send32: []
  5507  0A5C  0022               	banksel	270	;# 
  5508  0A5D  082A               	movf	_send32_data& (0+127),w	;# 
  5509  0A5E  0086               	movwf	6	;# 
  5510  0A5F  082B               	movf	(_send32_data+1)& (0+127),w	;# 
  5511  0A60  0087               	movwf	7	;# 
  5512  0A61                     next_word:	
  5513                           
  5514                           ;# 
  5515  0A61  3048               	movlw	72	;# 
  5516  0A62  018E               	clrf	14	;# 
  5517  0A63  1801               	btfsc	1,0	;# 
  5518  0A64  3090               	movlw	144	;# 
  5519  0A65  008E               	movwf	14	;# 
  5520  0A66  3048               	movlw	72	;# 
  5521  0A67  018E               	clrf	14	;# 
  5522  0A68  1881               	btfsc	1,1	;# 
  5523  0A69  3090               	movlw	144	;# 
  5524  0A6A  008E               	movwf	14	;# 
  5525  0A6B  3048               	movlw	72	;# 
  5526  0A6C  018E               	clrf	14	;# 
  5527  0A6D  1901               	btfsc	1,2	;# 
  5528  0A6E  3090               	movlw	144	;# 
  5529  0A6F  008E               	movwf	14	;# 
  5530  0A70  3048               	movlw	72	;# 
  5531  0A71  018E               	clrf	14	;# 
  5532  0A72  1981               	btfsc	1,3	;# 
  5533  0A73  3090               	movlw	144	;# 
  5534  0A74  008E               	movwf	14	;# 
  5535  0A75  3048               	movlw	72	;# 
  5536  0A76  018E               	clrf	14	;# 
  5537  0A77  1A01               	btfsc	1,4	;# 
  5538  0A78  3090               	movlw	144	;# 
  5539  0A79  008E               	movwf	14	;# 
  5540  0A7A  3048               	movlw	72	;# 
  5541  0A7B  018E               	clrf	14	;# 
  5542  0A7C  1A81               	btfsc	1,5	;# 
  5543  0A7D  3090               	movlw	144	;# 
  5544  0A7E  008E               	movwf	14	;# 
  5545  0A7F  3048               	movlw	72	;# 
  5546  0A80  018E               	clrf	14	;# 
  5547  0A81  1B01               	btfsc	1,6	;# 
  5548  0A82  3090               	movlw	144	;# 
  5549  0A83  008E               	movwf	14	;# 
  5550  0A84  3048               	movlw	72	;# 
  5551  0A85  018E               	clrf	14	;# 
  5552  0A86  1B81               	btfsc	1,7	;# 
  5553  0A87  3090               	movlw	144	;# 
  5554  0A88  008E               	movwf	14	;# 
  5555  0A89  3141               	addfsr 1,1	;# 
  5556  0A8A  3048               	movlw	72	;# 
  5557  0A8B  018E               	clrf	14	;# 
  5558  0A8C  1801               	btfsc	1,0	;# 
  5559  0A8D  3090               	movlw	144	;# 
  5560  0A8E  008E               	movwf	14	;# 
  5561  0A8F  3048               	movlw	72	;# 
  5562  0A90  018E               	clrf	14	;# 
  5563  0A91  1881               	btfsc	1,1	;# 
  5564  0A92  3090               	movlw	144	;# 
  5565  0A93  008E               	movwf	14	;# 
  5566  0A94  3048               	movlw	72	;# 
  5567  0A95  018E               	clrf	14	;# 
  5568  0A96  1901               	btfsc	1,2	;# 
  5569  0A97  3090               	movlw	144	;# 
  5570  0A98  008E               	movwf	14	;# 
  5571  0A99  3048               	movlw	72	;# 
  5572  0A9A  018E               	clrf	14	;# 
  5573  0A9B  1981               	btfsc	1,3	;# 
  5574  0A9C  3090               	movlw	144	;# 
  5575  0A9D  008E               	movwf	14	;# 
  5576  0A9E  3048               	movlw	72	;# 
  5577  0A9F  018E               	clrf	14	;# 
  5578  0AA0  1A01               	btfsc	1,4	;# 
  5579  0AA1  3090               	movlw	144	;# 
  5580  0AA2  008E               	movwf	14	;# 
  5581  0AA3  3048               	movlw	72	;# 
  5582  0AA4  018E               	clrf	14	;# 
  5583  0AA5  1A81               	btfsc	1,5	;# 
  5584  0AA6  3090               	movlw	144	;# 
  5585  0AA7  008E               	movwf	14	;# 
  5586  0AA8  3048               	movlw	72	;# 
  5587  0AA9  018E               	clrf	14	;# 
  5588  0AAA  1B01               	btfsc	1,6	;# 
  5589  0AAB  3090               	movlw	144	;# 
  5590  0AAC  008E               	movwf	14	;# 
  5591  0AAD  3048               	movlw	72	;# 
  5592  0AAE  018E               	clrf	14	;# 
  5593  0AAF  1B81               	btfsc	1,7	;# 
  5594  0AB0  3090               	movlw	144	;# 
  5595  0AB1  008E               	movwf	14	;# 
  5596  0AB2  3141               	addfsr 1,1	;# 
  5597  0AB3  3048               	movlw	72	;# 
  5598  0AB4  018E               	clrf	14	;# 
  5599  0AB5  1801               	btfsc	1,0	;# 
  5600  0AB6  3090               	movlw	144	;# 
  5601  0AB7  008E               	movwf	14	;# 
  5602  0AB8  3048               	movlw	72	;# 
  5603  0AB9  018E               	clrf	14	;# 
  5604  0ABA  1881               	btfsc	1,1	;# 
  5605  0ABB  3090               	movlw	144	;# 
  5606  0ABC  008E               	movwf	14	;# 
  5607  0ABD  3048               	movlw	72	;# 
  5608  0ABE  018E               	clrf	14	;# 
  5609  0ABF  1901               	btfsc	1,2	;# 
  5610  0AC0  3090               	movlw	144	;# 
  5611  0AC1  008E               	movwf	14	;# 
  5612  0AC2  3048               	movlw	72	;# 
  5613  0AC3  018E               	clrf	14	;# 
  5614  0AC4  1981               	btfsc	1,3	;# 
  5615  0AC5  3090               	movlw	144	;# 
  5616  0AC6  008E               	movwf	14	;# 
  5617  0AC7  3048               	movlw	72	;# 
  5618  0AC8  018E               	clrf	14	;# 
  5619  0AC9  1A01               	btfsc	1,4	;# 
  5620  0ACA  3090               	movlw	144	;# 
  5621  0ACB  008E               	movwf	14	;# 
  5622  0ACC  3048               	movlw	72	;# 
  5623  0ACD  018E               	clrf	14	;# 
  5624  0ACE  1A81               	btfsc	1,5	;# 
  5625  0ACF  3090               	movlw	144	;# 
  5626  0AD0  008E               	movwf	14	;# 
  5627  0AD1  3048               	movlw	72	;# 
  5628  0AD2  018E               	clrf	14	;# 
  5629  0AD3  1B01               	btfsc	1,6	;# 
  5630  0AD4  3090               	movlw	144	;# 
  5631  0AD5  008E               	movwf	14	;# 
  5632  0AD6  3048               	movlw	72	;# 
  5633  0AD7  018E               	clrf	14	;# 
  5634  0AD8  1B81               	btfsc	1,7	;# 
  5635  0AD9  3090               	movlw	144	;# 
  5636  0ADA  008E               	movwf	14	;# 
  5637  0ADB  3141               	addfsr 1,1	;# 
  5638  0ADC  3048               	movlw	72	;# 
  5639  0ADD  018E               	clrf	14	;# 
  5640  0ADE  1801               	btfsc	1,0	;# 
  5641  0ADF  3090               	movlw	144	;# 
  5642  0AE0  008E               	movwf	14	;# 
  5643  0AE1  3048               	movlw	72	;# 
  5644  0AE2  018E               	clrf	14	;# 
  5645  0AE3  1881               	btfsc	1,1	;# 
  5646  0AE4  3090               	movlw	144	;# 
  5647  0AE5  008E               	movwf	14	;# 
  5648  0AE6  3048               	movlw	72	;# 
  5649  0AE7  018E               	clrf	14	;# 
  5650  0AE8  1901               	btfsc	1,2	;# 
  5651  0AE9  3090               	movlw	144	;# 
  5652  0AEA  008E               	movwf	14	;# 
  5653  0AEB  3048               	movlw	72	;# 
  5654  0AEC  018E               	clrf	14	;# 
  5655  0AED  1981               	btfsc	1,3	;# 
  5656  0AEE  3090               	movlw	144	;# 
  5657  0AEF  008E               	movwf	14	;# 
  5658  0AF0  3048               	movlw	72	;# 
  5659  0AF1  018E               	clrf	14	;# 
  5660  0AF2  1A01               	btfsc	1,4	;# 
  5661  0AF3  3090               	movlw	144	;# 
  5662  0AF4  008E               	movwf	14	;# 
  5663  0AF5  3048               	movlw	72	;# 
  5664  0AF6  018E               	clrf	14	;# 
  5665  0AF7  1A81               	btfsc	1,5	;# 
  5666  0AF8  3090               	movlw	144	;# 
  5667  0AF9  008E               	movwf	14	;# 
  5668  0AFA  3048               	movlw	72	;# 
  5669  0AFB  018E               	clrf	14	;# 
  5670  0AFC  1B01               	btfsc	1,6	;# 
  5671  0AFD  3090               	movlw	144	;# 
  5672  0AFE  008E               	movwf	14	;# 
  5673  0AFF  0842               	movf	_last_bit0& (0+127),w	;# 
  5674  0B00  018E               	clrf	14	;# 
  5675  0B01  1B81               	btfsc	1,7	;# 
  5676  0B02  0843               	movf	_last_bit1& (0+127),w	;# 
  5677  0B03  008E               	movwf	14	;# 
  5678  0B04  3141               	addfsr 1,1	;# 
  5679  0B05  0BC5               	decfsz	_send32_count& (0+127),f	;# 
  5680  0B06  2A61               	goto	next_word	;# 
  5681  0B07  0008               	return
  5682  0B08                     __end_of_Send32:	
  5683                           
  5684                           	psect	text11
  5685  1B3D                     __ptext11:	
  5686 ;; *************** function _InitializeSystem *****************
  5687 ;; Defined at:
  5688 ;;		line 146 in file "main.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;		None
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;		None               void
  5695 ;; Registers used:
  5696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;Total ram usage:        0 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    9
  5709 ;; This function calls:
  5710 ;;		_USBDeviceInit
  5711 ;;		_UserInit
  5712 ;; This function is called by:
  5713 ;;		_main
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           
  5718                           ;psect for function _InitializeSystem
  5719  1B3D                     _InitializeSystem:	
  5720                           
  5721                           ;main.c: 148: ANSELA = 0x00;
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in _InitializeSystem: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5725  1B3D  0023               	movlb	3	; select bank3
  5726  1B3E  018C               	clrf	12	;volatile
  5727                           
  5728                           ;main.c: 149: ANSELB = 0x00;
  5729  1B3F  018D               	clrf	13	;volatile
  5730                           
  5731                           ;main.c: 150: ANSELC = 0x04;
  5732  1B40  3004               	movlw	4
  5733  1B41  008E               	movwf	14	;volatile
  5734                           
  5735                           ;main.c: 153: OSCTUNE = 0;
  5736  1B42  0021               	movlb	1	; select bank1
  5737  1B43  0198               	clrf	24	;volatile
  5738                           
  5739                           ;main.c: 154: OSCCON = 0xFC;
  5740  1B44  30FC               	movlw	252
  5741  1B45  0099               	movwf	25	;volatile
  5742                           
  5743                           ;main.c: 155: ACTCON = 0x90;
  5744  1B46  3090               	movlw	144
  5745  1B47  0027               	movlb	7	; select bank7
  5746  1B48  009B               	movwf	27	;volatile
  5747                           
  5748                           ;main.c: 158: USBGenericOutHandle = 0;
  5749  1B49  0022               	movlb	2	; select bank2
  5750  1B4A  01BB               	clrf	_USBGenericOutHandle^(0+256)
  5751                           
  5752                           ;main.c: 159: USBGenericInHandle = 0;
  5753  1B4B  01BA               	clrf	_USBGenericInHandle^(0+256)
  5754                           
  5755                           ;main.c: 160: WQI = WQX = 0;
  5756  1B4C  01D1               	clrf	_WQX^(0+256)
  5757  1B4D  01D0               	clrf	_WQI^(0+256)
  5758                           
  5759                           ;main.c: 162: UserInit();
  5760  1B4E  319B  2313  319B   	fcall	_UserInit
  5761                           
  5762                           ;main.c: 164: USBDeviceInit();
  5763  1B51  3189  210A         	fcall	_USBDeviceInit
  5764  1B53  0008               	return
  5765  1B54                     __end_of_InitializeSystem:	
  5766                           
  5767                           	psect	text12
  5768  1B13                     __ptext12:	
  5769 ;; *************** function _UserInit *****************
  5770 ;; Defined at:
  5771 ;;		line 170 in file "main.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;		None               void
  5778 ;; Registers used:
  5779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;Total ram usage:        0 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    8
  5792 ;; This function calls:
  5793 ;;		_DetectAsics
  5794 ;;		_InitFAN
  5795 ;;		_InitTempSensor
  5796 ;;		_InitWorkTick
  5797 ;;		_InitResultRx
  5798 ;; This function is called by:
  5799 ;;		_InitializeSystem
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _UserInit
  5805  1B13                     _UserInit:	
  5806                           
  5807                           ;main.c: 171: TRISAbits.TRISA5 = 0; LATAbits.LATA5 = 1;;
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in _UserInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5811  1B13  0021               	movlb	1	; select bank1
  5812  1B14  128C               	bcf	12,5	;volatile
  5813  1B15  0022               	movlb	2	; select bank2
  5814  1B16  168C               	bsf	12,5	;volatile
  5815                           
  5816                           ;main.c: 172: InitTempSensor();
  5817  1B17  319B  2326  319B   	fcall	_InitTempSensor
  5818                           
  5819                           ;main.c: 173: InitFAN();
  5820  1B1A  319B  23BE  319B   	fcall	_InitFAN
  5821                           
  5822                           ;main.c: 174: InitWorkTick();
  5823  1B1D  319C  2455  319B   	fcall	_InitWorkTick
  5824                           
  5825                           ;main.c: 176: InitResultRx();
  5826  1B20  319B  2300  319B   	fcall	_InitResultRx
  5827                           
  5828                           ;main.c: 177: DetectAsics();
  5829  1B23  318B  2308         	fcall	_DetectAsics
  5830  1B25  0008               	return
  5831  1B26                     __end_of_UserInit:	
  5832                           
  5833                           	psect	text13
  5834  1B00                     __ptext13:	
  5835 ;; *************** function _InitResultRx *****************
  5836 ;; Defined at:
  5837 ;;		line 270 in file "klondike.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;		None               void
  5844 ;; Registers used:
  5845 ;;		wreg, status,2
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;Total ram usage:        0 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    4
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_UserInit
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           
  5866                           ;psect for function _InitResultRx
  5867  1B00                     _InitResultRx:	
  5868                           
  5869                           ;klondike.c: 271: ResultQC = 0;
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in _InitResultRx: [wreg+status,2]
  5873  1B00  0022               	movlb	2	; select bank2
  5874  1B01  01B3               	clrf	_ResultQC^(0+256)
  5875                           
  5876                           ;klondike.c: 272: TXSTAbits.SYNC = 1;
  5877  1B02  0023               	movlb	3	; select bank3
  5878  1B03  161E               	bsf	30,4	;volatile
  5879                           
  5880                           ;klondike.c: 273: RCSTAbits.SPEN = 1;
  5881  1B04  179D               	bsf	29,7	;volatile
  5882                           
  5883                           ;klondike.c: 274: TXSTAbits.CSRC = 0;
  5884  1B05  139E               	bcf	30,7	;volatile
  5885                           
  5886                           ;klondike.c: 275: BAUDCONbits.SCKP = 0;
  5887  1B06  121F               	bcf	31,4	;volatile
  5888                           
  5889                           ;klondike.c: 276: BAUDCONbits.BRG16 = 1;
  5890  1B07  159F               	bsf	31,3	;volatile
  5891                           
  5892                           ;klondike.c: 277: ANSELBbits.ANSB5 = 0;
  5893  1B08  128D               	bcf	13,5	;volatile
  5894                           
  5895                           ;klondike.c: 278: IOCBPbits.IOCBP7 = 1;
  5896  1B09  0027               	movlb	7	; select bank7
  5897  1B0A  1794               	bsf	20,7	;volatile
  5898                           
  5899                           ;klondike.c: 279: INTCONbits.IOCIE = 1;
  5900  1B0B  158B               	bsf	11,3	;volatile
  5901                           
  5902                           ;klondike.c: 280: IOCBF = 0;
  5903  1B0C  0196               	clrf	22	;volatile
  5904                           
  5905                           ;klondike.c: 281: INTCONbits.GIE = 1;
  5906  1B0D  178B               	bsf	11,7	;volatile
  5907                           
  5908                           ;klondike.c: 282: RCSTAbits.CREN = 1;
  5909  1B0E  0023               	movlb	3	; select bank3
  5910  1B0F  161D               	bsf	29,4	;volatile
  5911                           
  5912                           ;klondike.c: 283: RCREG = 0xFF;
  5913  1B10  30FF               	movlw	255
  5914  1B11  0099               	movwf	25	;volatile
  5915  1B12  0008               	return
  5916  1B13                     __end_of_InitResultRx:	
  5917                           
  5918                           	psect	text14
  5919  1C55                     __ptext14:	
  5920 ;; *************** function _InitWorkTick *****************
  5921 ;; Defined at:
  5922 ;;		line 252 in file "klondike.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;		None               void
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0, pclath, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    7
  5943 ;; This function calls:
  5944 ;;		_SetAsicClock
  5945 ;; This function is called by:
  5946 ;;		_UserInit
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _InitWorkTick
  5952  1C55                     _InitWorkTick:	
  5953                           
  5954                           ;klondike.c: 253: SetAsicClock(1200);
  5955                           
  5956                           ;incstack = 0
  5957                           ; Regs used in _InitWorkTick: [wreg+status,2+status,0+pclath+cstack]
  5958  1C55  3000               	movlw	0
  5959  1C56  0021               	movlb	1	; select bank1
  5960  1C57  00E1               	movwf	(?_SetAsicClock+3)^(0+128)
  5961  1C58  3000               	movlw	0
  5962  1C59  00E0               	movwf	(?_SetAsicClock+2)^(0+128)
  5963  1C5A  3004               	movlw	4
  5964  1C5B  00DF               	movwf	(?_SetAsicClock+1)^(0+128)
  5965  1C5C  30B0               	movlw	176
  5966  1C5D  00DE               	movwf	?_SetAsicClock^(0+128)
  5967  1C5E  318D  2538         	fcall	_SetAsicClock
  5968                           
  5969                           ;klondike.c: 255: TMR0CS = 0;
  5970  1C60  0021               	movlb	1	; select bank1
  5971  1C61  1295               	bcf	21,5	;volatile
  5972                           
  5973                           ;klondike.c: 256: OPTION_REGbits.PSA = 0;
  5974  1C62  1195               	bcf	21,3	;volatile
  5975                           
  5976                           ;klondike.c: 257: OPTION_REGbits.PS = 7;
  5977  1C63  3007               	movlw	7
  5978  1C64  0495               	iorwf	21,f	;volatile
  5979                           
  5980                           ;klondike.c: 258: TMR0 = HashTime;
  5981  1C65  0022               	movlb	2	; select bank2
  5982  1C66  086B               	movf	_HashTime^(0+256),w
  5983  1C67  0020               	movlb	0	; select bank0
  5984  1C68  0095               	movwf	21	;volatile
  5985                           
  5986                           ;klondike.c: 260: TRISCbits.TRISC7 = 0;
  5987  1C69  0021               	movlb	1	; select bank1
  5988  1C6A  138E               	bcf	14,7	;volatile
  5989                           
  5990                           ;klondike.c: 261: TRISCbits.TRISC6 = 0;
  5991  1C6B  130E               	bcf	14,6	;volatile
  5992                           
  5993                           ;klondike.c: 262: TRISCbits.TRISC4 = 0;
  5994  1C6C  120E               	bcf	14,4	;volatile
  5995                           
  5996                           ;klondike.c: 263: TRISCbits.TRISC3 = 0;
  5997  1C6D  118E               	bcf	14,3	;volatile
  5998                           
  5999                           ;klondike.c: 264: LATC = 0xD8;;
  6000  1C6E  30D8               	movlw	216
  6001  1C6F  0022               	movlb	2	; select bank2
  6002  1C70  008E               	movwf	14	;volatile
  6003                           
  6004                           ;klondike.c: 265: TRISAbits.TRISA4 = 0;
  6005  1C71  0021               	movlb	1	; select bank1
  6006  1C72  120C               	bcf	12,4	;volatile
  6007                           
  6008                           ;klondike.c: 266: LATAbits.LATA4 = 0;
  6009  1C73  0022               	movlb	2	; select bank2
  6010  1C74  120C               	bcf	12,4	;volatile
  6011  1C75  0008               	return
  6012  1C76                     __end_of_InitWorkTick:	
  6013                           
  6014                           	psect	text15
  6015  0D38                     __ptext15:	
  6016 ;; *************** function _SetAsicClock *****************
  6017 ;; Defined at:
  6018 ;;		line 287 in file "klondike.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  frequency       4   62[BANK1 ] unsigned long 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  CLOCK_F_VALU    4   70[BANK1 ] unsigned long 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;		None               void
  6025 ;; Registers used:
  6026 ;;		wreg, status,2, status,0, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6032 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;Total ram usage:       12 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    6
  6039 ;; This function calls:
  6040 ;;		___ftadd
  6041 ;;		___ftdiv
  6042 ;;		___fttol
  6043 ;;		___lltoft
  6044 ;;		___lmul
  6045 ;;		___lwdiv
  6046 ;; This function is called by:
  6047 ;;		_ProcessCmd
  6048 ;;		_InitWorkTick
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           
  6053                           ;psect for function _SetAsicClock
  6054  0D38                     _SetAsicClock:	
  6055                           
  6056                           ;klondike.c: 288: DWORD CLOCK_F_VALUE;
  6057                           ;klondike.c: 289: CLOCK_F_VALUE = (frequency + 6.25) / 12.5;
  6058                           
  6059                           ;incstack = 0
  6060                           ; Regs used in _SetAsicClock: [wreg+status,2+status,0+pclath+cstack]
  6061  0D38  0021               	movlb	1	; select bank1
  6062  0D39  0861               	movf	(SetAsicClock@frequency+3)^(0+128),w
  6063  0D3A  0020               	movlb	0	; select bank0
  6064  0D3B  00E3               	movwf	?___lltoft+3
  6065  0D3C  0021               	movlb	1	; select bank1
  6066  0D3D  0860               	movf	(SetAsicClock@frequency+2)^(0+128),w
  6067  0D3E  0020               	movlb	0	; select bank0
  6068  0D3F  00E2               	movwf	?___lltoft+2
  6069  0D40  0021               	movlb	1	; select bank1
  6070  0D41  085F               	movf	(SetAsicClock@frequency+1)^(0+128),w
  6071  0D42  0020               	movlb	0	; select bank0
  6072  0D43  00E1               	movwf	?___lltoft+1
  6073  0D44  0021               	movlb	1	; select bank1
  6074  0D45  085E               	movf	SetAsicClock@frequency^(0+128),w
  6075  0D46  0020               	movlb	0	; select bank0
  6076  0D47  00E0               	movwf	?___lltoft
  6077  0D48  319C  24DF  318D   	fcall	___lltoft
  6078  0D4B  0020               	movlb	0	; select bank0
  6079  0D4C  0860               	movf	?___lltoft,w
  6080  0D4D  0021               	movlb	1	; select bank1
  6081  0D4E  00B6               	movwf	(?___ftadd^(0+128)+3)
  6082  0D4F  0020               	movlb	0	; select bank0
  6083  0D50  0861               	movf	?___lltoft+1,w
  6084  0D51  0021               	movlb	1	; select bank1
  6085  0D52  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  6086  0D53  0020               	movlb	0	; select bank0
  6087  0D54  0862               	movf	?___lltoft+2,w
  6088  0D55  0021               	movlb	1	; select bank1
  6089  0D56  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  6090  0D57  3000               	movlw	0
  6091  0D58  00B3               	movwf	?___ftadd^(0+128)
  6092  0D59  30C8               	movlw	200
  6093  0D5A  00B4               	movwf	(?___ftadd+1)^(0+128)
  6094  0D5B  3040               	movlw	64
  6095  0D5C  00B5               	movwf	(?___ftadd+2)^(0+128)
  6096  0D5D  318E  26FC  318D   	fcall	___ftadd
  6097  0D60  0021               	movlb	1	; select bank1
  6098  0D61  0833               	movf	?___ftadd^(0+128),w
  6099  0D62  00C3               	movwf	(?___ftdiv^(0+128)+3)
  6100  0D63  0834               	movf	(?___ftadd+1)^(0+128),w
  6101  0D64  00C4               	movwf	((?___ftdiv+1)^(0+128)+3)
  6102  0D65  0835               	movf	(?___ftadd+2)^(0+128),w
  6103  0D66  00C5               	movwf	((?___ftdiv+2)^(0+128)+3)
  6104  0D67  3000               	movlw	0
  6105  0D68  00C0               	movwf	?___ftdiv^(0+128)
  6106  0D69  3048               	movlw	72
  6107  0D6A  00C1               	movwf	(?___ftdiv+1)^(0+128)
  6108  0D6B  3041               	movlw	65
  6109  0D6C  00C2               	movwf	(?___ftdiv+2)^(0+128)
  6110  0D6D  318B  23BF  318D   	fcall	___ftdiv
  6111  0D70  0021               	movlb	1	; select bank1
  6112  0D71  0840               	movf	?___ftdiv^(0+128),w
  6113  0D72  00D0               	movwf	?___fttol^(0+128)
  6114  0D73  0841               	movf	(?___ftdiv+1)^(0+128),w
  6115  0D74  00D1               	movwf	(?___fttol+1)^(0+128)
  6116  0D75  0842               	movf	(?___ftdiv+2)^(0+128),w
  6117  0D76  00D2               	movwf	(?___fttol+2)^(0+128)
  6118  0D77  3194  248D  318D   	fcall	___fttol
  6119  0D7A  0021               	movlb	1	; select bank1
  6120  0D7B  0853               	movf	(?___fttol+3)^(0+128),w
  6121  0D7C  00E9               	movwf	(SetAsicClock@CLOCK_F_VALUE+3)^(0+128)
  6122  0D7D  0852               	movf	(?___fttol+2)^(0+128),w
  6123  0D7E  00E8               	movwf	(SetAsicClock@CLOCK_F_VALUE+2)^(0+128)
  6124  0D7F  0851               	movf	(?___fttol+1)^(0+128),w
  6125  0D80  00E7               	movwf	(SetAsicClock@CLOCK_F_VALUE+1)^(0+128)
  6126  0D81  0850               	movf	?___fttol^(0+128),w
  6127  0D82  00E6               	movwf	SetAsicClock@CLOCK_F_VALUE^(0+128)
  6128                           
  6129                           ;klondike.c: 290: Cfg.HashClock = 25 * CLOCK_F_VALUE / 2;
  6130  0D83  0869               	movf	(SetAsicClock@CLOCK_F_VALUE+3)^(0+128),w
  6131  0D84  0020               	movlb	0	; select bank0
  6132  0D85  00DB               	movwf	?___lmul+3
  6133  0D86  0021               	movlb	1	; select bank1
  6134  0D87  0868               	movf	(SetAsicClock@CLOCK_F_VALUE+2)^(0+128),w
  6135  0D88  0020               	movlb	0	; select bank0
  6136  0D89  00DA               	movwf	?___lmul+2
  6137  0D8A  0021               	movlb	1	; select bank1
  6138  0D8B  0867               	movf	(SetAsicClock@CLOCK_F_VALUE+1)^(0+128),w
  6139  0D8C  0020               	movlb	0	; select bank0
  6140  0D8D  00D9               	movwf	?___lmul+1
  6141  0D8E  0021               	movlb	1	; select bank1
  6142  0D8F  0866               	movf	SetAsicClock@CLOCK_F_VALUE^(0+128),w
  6143  0D90  0020               	movlb	0	; select bank0
  6144  0D91  00D8               	movwf	?___lmul
  6145  0D92  3000               	movlw	0
  6146  0D93  00DF               	movwf	?___lmul+7
  6147  0D94  3000               	movlw	0
  6148  0D95  00DE               	movwf	?___lmul+6
  6149  0D96  3000               	movlw	0
  6150  0D97  00DD               	movwf	?___lmul+5
  6151  0D98  3019               	movlw	25
  6152  0D99  00DC               	movwf	?___lmul+4
  6153  0D9A  3190  2006  318D   	fcall	___lmul
  6154  0D9D  0020               	movlb	0	; select bank0
  6155  0D9E  0858               	movf	?___lmul,w
  6156  0D9F  0021               	movlb	1	; select bank1
  6157  0DA0  00E2               	movwf	??_SetAsicClock^(0+128)
  6158  0DA1  0020               	movlb	0	; select bank0
  6159  0DA2  0859               	movf	?___lmul+1,w
  6160  0DA3  0021               	movlb	1	; select bank1
  6161  0DA4  00E3               	movwf	(??_SetAsicClock^(0+128)+1)
  6162  0DA5  0020               	movlb	0	; select bank0
  6163  0DA6  085A               	movf	?___lmul+2,w
  6164  0DA7  0021               	movlb	1	; select bank1
  6165  0DA8  00E4               	movwf	(??_SetAsicClock^(0+128)+2)
  6166  0DA9  0020               	movlb	0	; select bank0
  6167  0DAA  085B               	movf	?___lmul+3,w
  6168  0DAB  0021               	movlb	1	; select bank1
  6169  0DAC  00E5               	movwf	(??_SetAsicClock^(0+128)+3)
  6170  0DAD  3001               	movlw	1
  6171  0DAE                     u5365:	
  6172  0DAE  36E5               	lsrf	(??_SetAsicClock^(0+128)+3),f
  6173  0DAF  0CE4               	rrf	(??_SetAsicClock^(0+128)+2),f
  6174  0DB0  0CE3               	rrf	(??_SetAsicClock^(0+128)+1),f
  6175  0DB1  0CE2               	rrf	??_SetAsicClock^(0+128),f
  6176  0DB2  0B89               	decfsz	9,f
  6177  0DB3  2DAE               	goto	u5365
  6178  0DB4  0863               	movf	(??_SetAsicClock+1)^(0+128),w
  6179  0DB5  0023               	movlb	3	; select bank3
  6180  0DB6  01DB               	clrf	(_Cfg+1)^(0+384)
  6181  0DB7  07DB               	addwf	(_Cfg+1)^(0+384),f
  6182  0DB8  0021               	movlb	1	; select bank1
  6183  0DB9  0862               	movf	??_SetAsicClock^(0+128),w
  6184  0DBA  0023               	movlb	3	; select bank3
  6185  0DBB  01DA               	clrf	_Cfg^(0+384)
  6186  0DBC  07DA               	addwf	_Cfg^(0+384),f
  6187                           
  6188                           ;klondike.c: 291: ClockCfg[0] = 0x20047 | ((CLOCK_F_VALUE & 0x7F) << 21);
  6189  0DBD  307F               	movlw	127
  6190  0DBE  0021               	movlb	1	; select bank1
  6191  0DBF  0566               	andwf	SetAsicClock@CLOCK_F_VALUE^(0+128),w
  6192  0DC0  00E2               	movwf	??_SetAsicClock^(0+128)
  6193  0DC1  3000               	movlw	0
  6194  0DC2  0567               	andwf	(SetAsicClock@CLOCK_F_VALUE+1)^(0+128),w
  6195  0DC3  00E3               	movwf	(??_SetAsicClock^(0+128)+1)
  6196  0DC4  3000               	movlw	0
  6197  0DC5  0568               	andwf	(SetAsicClock@CLOCK_F_VALUE+2)^(0+128),w
  6198  0DC6  00E4               	movwf	(??_SetAsicClock^(0+128)+2)
  6199  0DC7  3000               	movlw	0
  6200  0DC8  0569               	andwf	(SetAsicClock@CLOCK_F_VALUE+3)^(0+128),w
  6201  0DC9  00E5               	movwf	(??_SetAsicClock^(0+128)+3)
  6202  0DCA  3015               	movlw	21
  6203  0DCB                     u5375:	
  6204  0DCB  35E2               	lslf	??_SetAsicClock^(0+128),f
  6205  0DCC  0DE3               	rlf	(??_SetAsicClock^(0+128)+1),f
  6206  0DCD  0DE4               	rlf	(??_SetAsicClock^(0+128)+2),f
  6207  0DCE  0DE5               	rlf	(??_SetAsicClock^(0+128)+3),f
  6208  0DCF  0B89               	decfsz	9,f
  6209  0DD0  2DCB               	goto	u5375
  6210  0DD1  3047               	movlw	71
  6211  0DD2  0462               	iorwf	??_SetAsicClock^(0+128),w
  6212  0DD3  0023               	movlb	3	; select bank3
  6213  0DD4  00C0               	movwf	_ClockCfg^(0+384)
  6214  0DD5  3000               	movlw	0
  6215  0DD6  0021               	movlb	1	; select bank1
  6216  0DD7  0463               	iorwf	(??_SetAsicClock+1)^(0+128),w
  6217  0DD8  0023               	movlb	3	; select bank3
  6218  0DD9  00C1               	movwf	(_ClockCfg+1)^(0+384)
  6219  0DDA  3002               	movlw	2
  6220  0DDB  0021               	movlb	1	; select bank1
  6221  0DDC  0464               	iorwf	(??_SetAsicClock+2)^(0+128),w
  6222  0DDD  0023               	movlb	3	; select bank3
  6223  0DDE  00C2               	movwf	(_ClockCfg+2)^(0+384)
  6224  0DDF  3000               	movlw	0
  6225  0DE0  0021               	movlb	1	; select bank1
  6226  0DE1  0465               	iorwf	(??_SetAsicClock+3)^(0+128),w
  6227  0DE2  0023               	movlb	3	; select bank3
  6228  0DE3  00C3               	movwf	(_ClockCfg+3)^(0+384)
  6229                           
  6230                           ;klondike.c: 292: ClockCfg[1] = 0;
  6231  0DE4  3000               	movlw	0
  6232  0DE5  00C7               	movwf	((_ClockCfg+3)^(0+384)+4)
  6233  0DE6  3000               	movlw	0
  6234  0DE7  00C6               	movwf	((_ClockCfg+2)^(0+384)+4)
  6235  0DE8  3000               	movlw	0
  6236  0DE9  00C5               	movwf	((_ClockCfg+1)^(0+384)+4)
  6237  0DEA  3000               	movlw	0
  6238  0DEB  00C4               	movwf	(_ClockCfg^(0+384)+4)
  6239                           
  6240                           ;klondike.c: 293: HashTime = 256 - ((WORD)9598/Cfg.HashClock);
  6241  0DEC  085B               	movf	(_Cfg+1)^(0+384),w
  6242  0DED  0020               	movlb	0	; select bank0
  6243  0DEE  01D9               	clrf	?___lwdiv+1
  6244  0DEF  07D9               	addwf	?___lwdiv+1,f
  6245  0DF0  0023               	movlb	3	; select bank3
  6246  0DF1  085A               	movf	_Cfg^(0+384),w
  6247  0DF2  0020               	movlb	0	; select bank0
  6248  0DF3  01D8               	clrf	?___lwdiv
  6249  0DF4  07D8               	addwf	?___lwdiv,f
  6250  0DF5  307E               	movlw	126
  6251  0DF6  00DA               	movwf	?___lwdiv+2
  6252  0DF7  3025               	movlw	37
  6253  0DF8  00DB               	movwf	?___lwdiv+3
  6254  0DF9  319D  2536         	fcall	___lwdiv
  6255  0DFB  0020               	movlb	0	; select bank0
  6256  0DFC  0858               	movf	?___lwdiv,w
  6257  0DFD  3AFF               	xorlw	255
  6258  0DFE  3E01               	addlw	1
  6259  0DFF  0021               	movlb	1	; select bank1
  6260  0E00  00E2               	movwf	??_SetAsicClock^(0+128)
  6261  0E01  0862               	movf	??_SetAsicClock^(0+128),w
  6262  0E02  0022               	movlb	2	; select bank2
  6263  0E03  00EB               	movwf	_HashTime^(0+256)
  6264  0E04  0008               	return
  6265  0E05                     __end_of_SetAsicClock:	
  6266                           
  6267                           	psect	text16
  6268  1D36                     __ptext16:	
  6269 ;; *************** function ___lwdiv *****************
  6270 ;; Defined at:
  6271 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwdiv.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  divisor         2    8[BANK0 ] unsigned int 
  6274 ;;  dividend        2   10[BANK0 ] unsigned int 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  quotient        2   13[BANK0 ] unsigned int 
  6277 ;;  counter         1   15[BANK0 ] unsigned char 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  2    8[BANK0 ] unsigned int 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6287 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;Total ram usage:        8 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    4
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_SetAsicClock
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function ___lwdiv
  6303  1D36                     ___lwdiv:	
  6304                           
  6305                           ;incstack = 0
  6306                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6307  1D36  0020               	movlb	0	; select bank0
  6308  1D37  01DD               	clrf	___lwdiv@quotient
  6309  1D38  01DE               	clrf	___lwdiv@quotient+1
  6310  1D39  0859               	movf	___lwdiv@divisor+1,w
  6311  1D3A  0458               	iorwf	___lwdiv@divisor,w
  6312  1D3B  1903               	skipnz
  6313  1D3C  2D66               	goto	l6120
  6314  1D3D  01DF               	clrf	___lwdiv@counter
  6315  1D3E  0ADF               	incf	___lwdiv@counter,f
  6316  1D3F                     l6108:	
  6317  1D3F  1BD9               	btfsc	___lwdiv@divisor+1,7
  6318  1D40  2D4B               	goto	l6110
  6319  1D41  3001               	movlw	1
  6320  1D42                     u6585:	
  6321  1D42  35D8               	lslf	___lwdiv@divisor,f
  6322  1D43  0DD9               	rlf	___lwdiv@divisor+1,f
  6323  1D44  0B89               	decfsz	9,f
  6324  1D45  2D42               	goto	u6585
  6325  1D46  3001               	movlw	1
  6326  1D47  00DC               	movwf	??___lwdiv
  6327  1D48  085C               	movf	??___lwdiv,w
  6328  1D49  07DF               	addwf	___lwdiv@counter,f
  6329  1D4A  2D3F               	goto	l6108
  6330  1D4B                     l6110:	
  6331  1D4B  3001               	movlw	1
  6332  1D4C                     u6605:	
  6333  1D4C  35DD               	lslf	___lwdiv@quotient,f
  6334  1D4D  0DDE               	rlf	___lwdiv@quotient+1,f
  6335  1D4E  0B89               	decfsz	9,f
  6336  1D4F  2D4C               	goto	u6605
  6337  1D50  0859               	movf	___lwdiv@divisor+1,w
  6338  1D51  025B               	subwf	___lwdiv@dividend+1,w
  6339  1D52  1D03               	skipz
  6340  1D53  2D56               	goto	u6615
  6341  1D54  0858               	movf	___lwdiv@divisor,w
  6342  1D55  025A               	subwf	___lwdiv@dividend,w
  6343  1D56                     u6615:	
  6344  1D56  1C03               	skipc
  6345  1D57  2D5D               	goto	l6116
  6346  1D58  0858               	movf	___lwdiv@divisor,w
  6347  1D59  02DA               	subwf	___lwdiv@dividend,f
  6348  1D5A  0859               	movf	___lwdiv@divisor+1,w
  6349  1D5B  3BDB               	subwfb	___lwdiv@dividend+1,f
  6350  1D5C  145D               	bsf	___lwdiv@quotient,0
  6351  1D5D                     l6116:	
  6352  1D5D  3001               	movlw	1
  6353  1D5E                     u6625:	
  6354  1D5E  36D9               	lsrf	___lwdiv@divisor+1,f
  6355  1D5F  0CD8               	rrf	___lwdiv@divisor,f
  6356  1D60  0B89               	decfsz	9,f
  6357  1D61  2D5E               	goto	u6625
  6358  1D62  3001               	movlw	1
  6359  1D63  02DF               	subwf	___lwdiv@counter,f
  6360  1D64  1D03               	btfss	3,2
  6361  1D65  2D4B               	goto	l6110
  6362  1D66                     l6120:	
  6363  1D66  085E               	movf	___lwdiv@quotient+1,w
  6364  1D67  01D9               	clrf	?___lwdiv+1
  6365  1D68  07D9               	addwf	?___lwdiv+1,f
  6366  1D69  085D               	movf	___lwdiv@quotient,w
  6367  1D6A  01D8               	clrf	?___lwdiv
  6368  1D6B  07D8               	addwf	?___lwdiv,f
  6369  1D6C  0008               	return
  6370  1D6D                     __end_of___lwdiv:	
  6371                           
  6372                           	psect	text17
  6373  1006                     __ptext17:	
  6374 ;; *************** function ___lmul *****************
  6375 ;; Defined at:
  6376 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lmul.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  multiplier      4    8[BANK0 ] unsigned long 
  6379 ;;  multiplicand    4   12[BANK0 ] unsigned long 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  product         4   16[BANK0 ] unsigned long 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  4    8[BANK0 ] unsigned long 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6391 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;Total ram usage:       12 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    4
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		_SetAsicClock
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function ___lmul
  6407  1006                     ___lmul:	
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6411  1006  3000               	movlw	0
  6412  1007  0020               	movlb	0	; select bank0
  6413  1008  00E3               	movwf	___lmul@product+3
  6414  1009  3000               	movlw	0
  6415  100A  00E2               	movwf	___lmul@product+2
  6416  100B  3000               	movlw	0
  6417  100C  00E1               	movwf	___lmul@product+1
  6418  100D  3000               	movlw	0
  6419  100E  00E0               	movwf	___lmul@product
  6420  100F                     l6086:	
  6421  100F  1C58               	btfss	___lmul@multiplier,0
  6422  1010  2819               	goto	l6090
  6423  1011  085C               	movf	___lmul@multiplicand,w
  6424  1012  07E0               	addwf	___lmul@product,f
  6425  1013  085D               	movf	___lmul@multiplicand+1,w
  6426  1014  3DE1               	addwfc	___lmul@product+1,f
  6427  1015  085E               	movf	___lmul@multiplicand+2,w
  6428  1016  3DE2               	addwfc	___lmul@product+2,f
  6429  1017  085F               	movf	___lmul@multiplicand+3,w
  6430  1018  3DE3               	addwfc	___lmul@product+3,f
  6431  1019                     l6090:	
  6432  1019  3001               	movlw	1
  6433  101A                     u6545:	
  6434  101A  35DC               	lslf	___lmul@multiplicand,f
  6435  101B  0DDD               	rlf	___lmul@multiplicand+1,f
  6436  101C  0DDE               	rlf	___lmul@multiplicand+2,f
  6437  101D  0DDF               	rlf	___lmul@multiplicand+3,f
  6438  101E  0B89               	decfsz	9,f
  6439  101F  281A               	goto	u6545
  6440  1020  3001               	movlw	1
  6441  1021                     u6555:	
  6442  1021  36DB               	lsrf	___lmul@multiplier+3,f
  6443  1022  0CDA               	rrf	___lmul@multiplier+2,f
  6444  1023  0CD9               	rrf	___lmul@multiplier+1,f
  6445  1024  0CD8               	rrf	___lmul@multiplier,f
  6446  1025  0B89               	decfsz	9,f
  6447  1026  2821               	goto	u6555
  6448  1027  085B               	movf	___lmul@multiplier+3,w
  6449  1028  045A               	iorwf	___lmul@multiplier+2,w
  6450  1029  0459               	iorwf	___lmul@multiplier+1,w
  6451  102A  0458               	iorwf	___lmul@multiplier,w
  6452  102B  1D03               	skipz
  6453  102C  280F               	goto	l6086
  6454  102D  0863               	movf	___lmul@product+3,w
  6455  102E  00DB               	movwf	?___lmul+3
  6456  102F  0862               	movf	___lmul@product+2,w
  6457  1030  00DA               	movwf	?___lmul+2
  6458  1031  0861               	movf	___lmul@product+1,w
  6459  1032  00D9               	movwf	?___lmul+1
  6460  1033  0860               	movf	___lmul@product,w
  6461  1034  00D8               	movwf	?___lmul
  6462  1035  0008               	return
  6463  1036                     __end_of___lmul:	
  6464                           
  6465                           	psect	text18
  6466  1CDF                     __ptext18:	
  6467 ;; *************** function ___lltoft *****************
  6468 ;; Defined at:
  6469 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lltoft.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  c               4   16[BANK0 ] unsigned long 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  exp             1   21[BANK0 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  3   16[BANK0 ] float 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, pclath, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6483 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;Total ram usage:        6 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    5
  6490 ;; This function calls:
  6491 ;;		___ftpack
  6492 ;; This function is called by:
  6493 ;;		_SetAsicClock
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           
  6498                           ;psect for function ___lltoft
  6499  1CDF                     ___lltoft:	
  6500                           
  6501                           ;incstack = 0
  6502                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6503  1CDF  308E               	movlw	142
  6504  1CE0  0020               	movlb	0	; select bank0
  6505  1CE1  00E4               	movwf	??___lltoft
  6506  1CE2  0864               	movf	??___lltoft,w
  6507  1CE3  00E5               	movwf	___lltoft@exp
  6508  1CE4                     l6078:	
  6509  1CE4  30FF               	movlw	255
  6510  1CE5  0563               	andwf	___lltoft@c+3,w
  6511  1CE6  1903               	btfsc	3,2
  6512  1CE7  2CF4               	goto	l6080
  6513  1CE8  3001               	movlw	1
  6514  1CE9                     u6515:	
  6515  1CE9  36E3               	lsrf	___lltoft@c+3,f
  6516  1CEA  0CE2               	rrf	___lltoft@c+2,f
  6517  1CEB  0CE1               	rrf	___lltoft@c+1,f
  6518  1CEC  0CE0               	rrf	___lltoft@c,f
  6519  1CED  0B89               	decfsz	9,f
  6520  1CEE  2CE9               	goto	u6515
  6521  1CEF  3001               	movlw	1
  6522  1CF0  00E4               	movwf	??___lltoft
  6523  1CF1  0864               	movf	??___lltoft,w
  6524  1CF2  07E5               	addwf	___lltoft@exp,f
  6525  1CF3  2CE4               	goto	l6078
  6526  1CF4                     l6080:	
  6527  1CF4  0860               	movf	___lltoft@c,w
  6528  1CF5  00D8               	movwf	?___ftpack
  6529  1CF6  0861               	movf	___lltoft@c+1,w
  6530  1CF7  00D9               	movwf	?___ftpack+1
  6531  1CF8  0862               	movf	___lltoft@c+2,w
  6532  1CF9  00DA               	movwf	?___ftpack+2
  6533  1CFA  0865               	movf	___lltoft@exp,w
  6534  1CFB  00E4               	movwf	??___lltoft
  6535  1CFC  0864               	movf	??___lltoft,w
  6536  1CFD  00DB               	movwf	?___ftpack+3
  6537  1CFE  01DC               	clrf	?___ftpack+4
  6538  1CFF  3190  20F1         	fcall	___ftpack
  6539  1D01  0020               	movlb	0	; select bank0
  6540  1D02  0858               	movf	?___ftpack,w
  6541  1D03  00E0               	movwf	?___lltoft
  6542  1D04  0859               	movf	?___ftpack+1,w
  6543  1D05  00E1               	movwf	?___lltoft+1
  6544  1D06  085A               	movf	?___ftpack+2,w
  6545  1D07  00E2               	movwf	?___lltoft+2
  6546  1D08  0008               	return
  6547  1D09                     __end_of___lltoft:	
  6548                           
  6549                           	psect	text19
  6550  0BBF                     __ptext19:	
  6551 ;; *************** function ___ftdiv *****************
  6552 ;; Defined at:
  6553 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftdiv.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  f2              3   32[BANK1 ] float 
  6556 ;;  f1              3   35[BANK1 ] float 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  f3              3   43[BANK1 ] float 
  6559 ;;  sign            1   47[BANK1 ] unsigned char 
  6560 ;;  exp             1   46[BANK1 ] unsigned char 
  6561 ;;  cntr            1   42[BANK1 ] unsigned char 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  3   32[BANK1 ] float 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0, pclath, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6571 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;Total ram usage:       16 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    5
  6578 ;; This function calls:
  6579 ;;		___ftpack
  6580 ;; This function is called by:
  6581 ;;		_SetAsicClock
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           
  6586                           ;psect for function ___ftdiv
  6587  0BBF                     ___ftdiv:	
  6588                           
  6589                           ;incstack = 0
  6590                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6591  0BBF  0021               	movlb	1	; select bank1
  6592  0BC0  0843               	movf	___ftdiv@f1^(0+128),w
  6593  0BC1  00C6               	movwf	??___ftdiv^(0+128)
  6594  0BC2  0844               	movf	(___ftdiv@f1+1)^(0+128),w
  6595  0BC3  00C7               	movwf	(??___ftdiv^(0+128)+1)
  6596  0BC4  0845               	movf	(___ftdiv@f1+2)^(0+128),w
  6597  0BC5  00C8               	movwf	(??___ftdiv^(0+128)+2)
  6598  0BC6  1003               	clrc
  6599  0BC7  0D47               	rlf	(??___ftdiv^(0+128)+1),w
  6600  0BC8  0D48               	rlf	(??___ftdiv^(0+128)+2),w
  6601  0BC9  00C9               	movwf	(??___ftdiv+3)^(0+128)
  6602  0BCA  0849               	movf	(??___ftdiv+3)^(0+128),w
  6603  0BCB  00CE               	movwf	___ftdiv@exp^(0+128)
  6604  0BCC  08CE               	movf	___ftdiv@exp^(0+128),f
  6605  0BCD  1D03               	skipz
  6606  0BCE  2BD6               	goto	l5936
  6607  0BCF  3000               	movlw	0
  6608  0BD0  00C0               	movwf	?___ftdiv^(0+128)
  6609  0BD1  3000               	movlw	0
  6610  0BD2  00C1               	movwf	(?___ftdiv+1)^(0+128)
  6611  0BD3  3000               	movlw	0
  6612  0BD4  00C2               	movwf	(?___ftdiv+2)^(0+128)
  6613  0BD5  0008               	return
  6614  0BD6                     l5936:	
  6615  0BD6  0840               	movf	___ftdiv@f2^(0+128),w
  6616  0BD7  00C6               	movwf	??___ftdiv^(0+128)
  6617  0BD8  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  6618  0BD9  00C7               	movwf	(??___ftdiv^(0+128)+1)
  6619  0BDA  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  6620  0BDB  00C8               	movwf	(??___ftdiv^(0+128)+2)
  6621  0BDC  1003               	clrc
  6622  0BDD  0D47               	rlf	(??___ftdiv^(0+128)+1),w
  6623  0BDE  0D48               	rlf	(??___ftdiv^(0+128)+2),w
  6624  0BDF  00C9               	movwf	(??___ftdiv+3)^(0+128)
  6625  0BE0  0849               	movf	(??___ftdiv+3)^(0+128),w
  6626  0BE1  00CF               	movwf	___ftdiv@sign^(0+128)
  6627  0BE2  08CF               	movf	___ftdiv@sign^(0+128),f
  6628  0BE3  1D03               	skipz
  6629  0BE4  2BEC               	goto	l5942
  6630  0BE5  3000               	movlw	0
  6631  0BE6  00C0               	movwf	?___ftdiv^(0+128)
  6632  0BE7  3000               	movlw	0
  6633  0BE8  00C1               	movwf	(?___ftdiv+1)^(0+128)
  6634  0BE9  3000               	movlw	0
  6635  0BEA  00C2               	movwf	(?___ftdiv+2)^(0+128)
  6636  0BEB  0008               	return
  6637  0BEC                     l5942:	
  6638  0BEC  3000               	movlw	0
  6639  0BED  00CB               	movwf	___ftdiv@f3^(0+128)
  6640  0BEE  3000               	movlw	0
  6641  0BEF  00CC               	movwf	(___ftdiv@f3+1)^(0+128)
  6642  0BF0  3000               	movlw	0
  6643  0BF1  00CD               	movwf	(___ftdiv@f3+2)^(0+128)
  6644  0BF2  3089               	movlw	137
  6645  0BF3  074F               	addwf	___ftdiv@sign^(0+128),w
  6646  0BF4  00C6               	movwf	??___ftdiv^(0+128)
  6647  0BF5  0846               	movf	??___ftdiv^(0+128),w
  6648  0BF6  02CE               	subwf	___ftdiv@exp^(0+128),f
  6649  0BF7  0843               	movf	___ftdiv@f1^(0+128),w
  6650  0BF8  00C6               	movwf	??___ftdiv^(0+128)
  6651  0BF9  0844               	movf	(___ftdiv@f1+1)^(0+128),w
  6652  0BFA  00C7               	movwf	(??___ftdiv^(0+128)+1)
  6653  0BFB  0845               	movf	(___ftdiv@f1+2)^(0+128),w
  6654  0BFC  00C8               	movwf	(??___ftdiv^(0+128)+2)
  6655  0BFD  3010               	movlw	16
  6656  0BFE                     u6225:	
  6657  0BFE  36C8               	lsrf	(??___ftdiv^(0+128)+2),f
  6658  0BFF  0CC7               	rrf	(??___ftdiv^(0+128)+1),f
  6659  0C00  0CC6               	rrf	??___ftdiv^(0+128),f
  6660  0C01  0B89               	decfsz	9,f
  6661  0C02  2BFE               	goto	u6225
  6662  0C03  0846               	movf	??___ftdiv^(0+128),w
  6663  0C04  00C9               	movwf	(??___ftdiv+3)^(0+128)
  6664  0C05  0849               	movf	(??___ftdiv+3)^(0+128),w
  6665  0C06  00CF               	movwf	___ftdiv@sign^(0+128)
  6666  0C07  0840               	movf	___ftdiv@f2^(0+128),w
  6667  0C08  00C6               	movwf	??___ftdiv^(0+128)
  6668  0C09  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  6669  0C0A  00C7               	movwf	(??___ftdiv^(0+128)+1)
  6670  0C0B  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  6671  0C0C  00C8               	movwf	(??___ftdiv^(0+128)+2)
  6672  0C0D  3010               	movlw	16
  6673  0C0E                     u6235:	
  6674  0C0E  36C8               	lsrf	(??___ftdiv^(0+128)+2),f
  6675  0C0F  0CC7               	rrf	(??___ftdiv^(0+128)+1),f
  6676  0C10  0CC6               	rrf	??___ftdiv^(0+128),f
  6677  0C11  0B89               	decfsz	9,f
  6678  0C12  2C0E               	goto	u6235
  6679  0C13  0846               	movf	??___ftdiv^(0+128),w
  6680  0C14  00C9               	movwf	(??___ftdiv+3)^(0+128)
  6681  0C15  0849               	movf	(??___ftdiv+3)^(0+128),w
  6682  0C16  06CF               	xorwf	___ftdiv@sign^(0+128),f
  6683  0C17  3080               	movlw	128
  6684  0C18  00C6               	movwf	??___ftdiv^(0+128)
  6685  0C19  0846               	movf	??___ftdiv^(0+128),w
  6686  0C1A  05CF               	andwf	___ftdiv@sign^(0+128),f
  6687  0C1B  17C4               	bsf	(___ftdiv@f1^(0+128)+1),7
  6688  0C1C  30FF               	movlw	255
  6689  0C1D  05C3               	andwf	___ftdiv@f1^(0+128),f
  6690  0C1E  30FF               	movlw	255
  6691  0C1F  05C4               	andwf	(___ftdiv@f1+1)^(0+128),f
  6692  0C20  3000               	movlw	0
  6693  0C21  05C5               	andwf	(___ftdiv@f1+2)^(0+128),f
  6694  0C22  17C1               	bsf	(___ftdiv@f2^(0+128)+1),7
  6695  0C23  30FF               	movlw	255
  6696  0C24  05C0               	andwf	___ftdiv@f2^(0+128),f
  6697  0C25  30FF               	movlw	255
  6698  0C26  05C1               	andwf	(___ftdiv@f2+1)^(0+128),f
  6699  0C27  3000               	movlw	0
  6700  0C28  05C2               	andwf	(___ftdiv@f2+2)^(0+128),f
  6701  0C29  3018               	movlw	24
  6702  0C2A  00C6               	movwf	??___ftdiv^(0+128)
  6703  0C2B  0846               	movf	??___ftdiv^(0+128),w
  6704  0C2C  00CA               	movwf	___ftdiv@cntr^(0+128)
  6705  0C2D                     l5956:	
  6706  0C2D  3001               	movlw	1
  6707  0C2E                     u6245:	
  6708  0C2E  35CB               	lslf	___ftdiv@f3^(0+128),f
  6709  0C2F  0DCC               	rlf	(___ftdiv@f3+1)^(0+128),f
  6710  0C30  0DCD               	rlf	(___ftdiv@f3+2)^(0+128),f
  6711  0C31  0B89               	decfsz	9,f
  6712  0C32  2C2E               	goto	u6245
  6713  0C33  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  6714  0C34  0245               	subwf	(___ftdiv@f1+2)^(0+128),w
  6715  0C35  1D03               	skipz
  6716  0C36  2C3D               	goto	u6255
  6717  0C37  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  6718  0C38  0244               	subwf	(___ftdiv@f1+1)^(0+128),w
  6719  0C39  1D03               	skipz
  6720  0C3A  2C3D               	goto	u6255
  6721  0C3B  0840               	movf	___ftdiv@f2^(0+128),w
  6722  0C3C  0243               	subwf	___ftdiv@f1^(0+128),w
  6723  0C3D                     u6255:	
  6724  0C3D  1C03               	skipc
  6725  0C3E  2C46               	goto	l5964
  6726  0C3F  0840               	movf	___ftdiv@f2^(0+128),w
  6727  0C40  02C3               	subwf	___ftdiv@f1^(0+128),f
  6728  0C41  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  6729  0C42  3BC4               	subwfb	(___ftdiv@f1+1)^(0+128),f
  6730  0C43  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  6731  0C44  3BC5               	subwfb	(___ftdiv@f1+2)^(0+128),f
  6732  0C45  144B               	bsf	___ftdiv@f3^(0+128),0
  6733  0C46                     l5964:	
  6734  0C46  3001               	movlw	1
  6735  0C47                     u6265:	
  6736  0C47  35C3               	lslf	___ftdiv@f1^(0+128),f
  6737  0C48  0DC4               	rlf	(___ftdiv@f1+1)^(0+128),f
  6738  0C49  0DC5               	rlf	(___ftdiv@f1+2)^(0+128),f
  6739  0C4A  0B89               	decfsz	9,f
  6740  0C4B  2C47               	goto	u6265
  6741  0C4C  3001               	movlw	1
  6742  0C4D  02CA               	subwf	___ftdiv@cntr^(0+128),f
  6743  0C4E  1D03               	btfss	3,2
  6744  0C4F  2C2D               	goto	l5956
  6745  0C50  084B               	movf	___ftdiv@f3^(0+128),w
  6746  0C51  0020               	movlb	0	; select bank0
  6747  0C52  00D8               	movwf	?___ftpack
  6748  0C53  0021               	movlb	1	; select bank1
  6749  0C54  084C               	movf	(___ftdiv@f3+1)^(0+128),w
  6750  0C55  0020               	movlb	0	; select bank0
  6751  0C56  00D9               	movwf	?___ftpack+1
  6752  0C57  0021               	movlb	1	; select bank1
  6753  0C58  084D               	movf	(___ftdiv@f3+2)^(0+128),w
  6754  0C59  0020               	movlb	0	; select bank0
  6755  0C5A  00DA               	movwf	?___ftpack+2
  6756  0C5B  0021               	movlb	1	; select bank1
  6757  0C5C  084E               	movf	___ftdiv@exp^(0+128),w
  6758  0C5D  00C6               	movwf	??___ftdiv^(0+128)
  6759  0C5E  0846               	movf	??___ftdiv^(0+128),w
  6760  0C5F  0020               	movlb	0	; select bank0
  6761  0C60  00DB               	movwf	?___ftpack+3
  6762  0C61  0021               	movlb	1	; select bank1
  6763  0C62  084F               	movf	___ftdiv@sign^(0+128),w
  6764  0C63  00C7               	movwf	(??___ftdiv+1)^(0+128)
  6765  0C64  0847               	movf	(??___ftdiv+1)^(0+128),w
  6766  0C65  0020               	movlb	0	; select bank0
  6767  0C66  00DC               	movwf	?___ftpack+4
  6768  0C67  3190  20F1         	fcall	___ftpack
  6769  0C69  0020               	movlb	0	; select bank0
  6770  0C6A  0858               	movf	?___ftpack,w
  6771  0C6B  0021               	movlb	1	; select bank1
  6772  0C6C  00C0               	movwf	?___ftdiv^(0+128)
  6773  0C6D  0020               	movlb	0	; select bank0
  6774  0C6E  0859               	movf	?___ftpack+1,w
  6775  0C6F  0021               	movlb	1	; select bank1
  6776  0C70  00C1               	movwf	(?___ftdiv+1)^(0+128)
  6777  0C71  0020               	movlb	0	; select bank0
  6778  0C72  085A               	movf	?___ftpack+2,w
  6779  0C73  0021               	movlb	1	; select bank1
  6780  0C74  00C2               	movwf	(?___ftdiv+2)^(0+128)
  6781  0C75  0008               	return
  6782  0C76                     __end_of___ftdiv:	
  6783                           
  6784                           	psect	text20
  6785  1B26                     __ptext20:	
  6786 ;; *************** function _InitTempSensor *****************
  6787 ;; Defined at:
  6788 ;;		line 238 in file "klondike.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;		None               void
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6805 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6806 ;;Total ram usage:        1 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    4
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_UserInit
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           
  6817                           ;psect for function _InitTempSensor
  6818  1B26                     _InitTempSensor:	
  6819                           
  6820                           ;klondike.c: 239: TRISCbits.TRISC2=1;
  6821                           
  6822                           ;incstack = 0
  6823                           ; Regs used in _InitTempSensor: [wreg+status,2+status,0]
  6824  1B26  0021               	movlb	1	; select bank1
  6825  1B27  150E               	bsf	14,2	;volatile
  6826                           
  6827                           ;klondike.c: 242: ADCON0bits.CHS = 6;
  6828  1B28  081D               	movf	29,w	;volatile
  6829  1B29  3983               	andlw	-125
  6830  1B2A  3818               	iorlw	24
  6831  1B2B  009D               	movwf	29	;volatile
  6832                           
  6833                           ;klondike.c: 243: ADCON0bits.ADON = 1;
  6834  1B2C  141D               	bsf	29,0	;volatile
  6835                           
  6836                           ;klondike.c: 244: ADCON1bits.ADFM = 0;
  6837  1B2D  139E               	bcf	30,7	;volatile
  6838                           
  6839                           ;klondike.c: 245: ADCON1bits.ADCS = 6;
  6840  1B2E  081E               	movf	30,w	;volatile
  6841  1B2F  398F               	andlw	-113
  6842  1B30  3860               	iorlw	96
  6843  1B31  009E               	movwf	30	;volatile
  6844                           
  6845                           ;klondike.c: 246: ADCON1bits.ADPREF = 0;
  6846  1B32  30FC               	movlw	-4
  6847  1B33  059E               	andwf	30,f	;volatile
  6848                           
  6849                           ;klondike.c: 247: ADCON2bits.TRIGSEL = 0;
  6850  1B34  308F               	movlw	-113
  6851  1B35  059F               	andwf	31,f	;volatile
  6852                           
  6853                           ;klondike.c: 248: TempTarget = 143;
  6854  1B36  308F               	movlw	143
  6855  1B37  0020               	movlb	0	; select bank0
  6856  1B38  00D8               	movwf	??_InitTempSensor
  6857  1B39  0858               	movf	??_InitTempSensor,w
  6858  1B3A  0023               	movlb	3	; select bank3
  6859  1B3B  00E0               	movwf	_TempTarget^(0+384)
  6860  1B3C  0008               	return
  6861  1B3D                     __end_of_InitTempSensor:	
  6862                           
  6863                           	psect	text21
  6864  1BBE                     __ptext21:	
  6865 ;; *************** function _InitFAN *****************
  6866 ;; Defined at:
  6867 ;;		line 218 in file "klondike.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;		None
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;		None
  6872 ;; Return value:  Size  Location     Type
  6873 ;;		None               void
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;Total ram usage:        0 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    4
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_UserInit
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _InitFAN
  6897  1BBE                     _InitFAN:	
  6898                           
  6899                           ;klondike.c: 219: TRISCbits.TRISC5 = 1;
  6900                           
  6901                           ;incstack = 0
  6902                           ; Regs used in _InitFAN: [wreg+status,2+status,0]
  6903  1BBE  0021               	movlb	1	; select bank1
  6904  1BBF  168E               	bsf	14,5	;volatile
  6905                           
  6906                           ;klondike.c: 220: PWM1CON = 0;
  6907  1BC0  002C               	movlb	12	; select bank12
  6908  1BC1  0193               	clrf	19	;volatile
  6909                           
  6910                           ;klondike.c: 221: PR2 = 0xFF;
  6911  1BC2  30FF               	movlw	255
  6912  1BC3  0020               	movlb	0	; select bank0
  6913  1BC4  009B               	movwf	27	;volatile
  6914                           
  6915                           ;klondike.c: 222: PWM1CON = 0xC0;
  6916  1BC5  30C0               	movlw	192
  6917  1BC6  002C               	movlb	12	; select bank12
  6918  1BC7  0093               	movwf	19	;volatile
  6919                           
  6920                           ;klondike.c: 223: PWM1DCH = FanLevel = 230;
  6921  1BC8  30E6               	movlw	230
  6922  1BC9  0022               	movlb	2	; select bank2
  6923  1BCA  00EA               	movwf	_FanLevel^(0+256)
  6924  1BCB  002C               	movlb	12	; select bank12
  6925  1BCC  0092               	movwf	18	;volatile
  6926                           
  6927                           ;klondike.c: 224: PWM1DCL = 0;
  6928  1BCD  0191               	clrf	17	;volatile
  6929                           
  6930                           ;klondike.c: 225: TMR2IF = 0;
  6931  1BCE  0020               	movlb	0	; select bank0
  6932  1BCF  1091               	bcf	17,1	;volatile
  6933                           
  6934                           ;klondike.c: 226: T2CONbits.T2CKPS = 1;
  6935  1BD0  081C               	movf	28,w	;volatile
  6936  1BD1  39FC               	andlw	-4
  6937  1BD2  3801               	iorlw	1
  6938  1BD3  009C               	movwf	28	;volatile
  6939                           
  6940                           ;klondike.c: 227: TMR2ON = 1;
  6941  1BD4  151C               	bsf	28,2	;volatile
  6942                           
  6943                           ;klondike.c: 228: TRISCbits.TRISC5 = 0;
  6944  1BD5  0021               	movlb	1	; select bank1
  6945  1BD6  128E               	bcf	14,5	;volatile
  6946                           
  6947                           ;klondike.c: 229: PWM1OE=1;
  6948  1BD7  002C               	movlb	12	; select bank12
  6949  1BD8  1713               	bsf	19,6	;volatile
  6950  1BD9  0008               	return
  6951  1BDA                     __end_of_InitFAN:	
  6952                           
  6953                           	psect	text22
  6954  0B08                     __ptext22:	
  6955 ;; *************** function _DetectAsics *****************
  6956 ;; Defined at:
  6957 ;;		line 117 in file "klondike.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  x               1    2[BANK1 ] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;		None               void
  6964 ;; Registers used:
  6965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;      Totals:         0       7       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;Total ram usage:       10 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    5
  6978 ;; This function calls:
  6979 ;;		___awdiv
  6980 ;; This function is called by:
  6981 ;;		_UserInit
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           
  6986                           ;psect for function _DetectAsics
  6987  0B08                     _DetectAsics:	
  6988                           
  6989                           ;klondike.c: 118: Status.ChipCount = 16;
  6990                           
  6991                           ;incstack = 0
  6992                           ; Regs used in _DetectAsics: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6993  0B08  3010               	movlw	16
  6994  0B09  0020               	movlb	0	; select bank0
  6995  0B0A  00E1               	movwf	??_DetectAsics
  6996  0B0B  0861               	movf	??_DetectAsics,w
  6997  0B0C  0022               	movlb	2	; select bank2
  6998  0B0D  00D3               	movwf	(_Status^(0+256)+1)	;volatile
  6999                           
  7000                           ;klondike.c: 121: BankSize = (Status.ChipCount)/2;
  7001  0B0E  3002               	movlw	2
  7002  0B0F  0020               	movlb	0	; select bank0
  7003  0B10  00D8               	movwf	?___awdiv
  7004  0B11  3000               	movlw	0
  7005  0B12  00D9               	movwf	?___awdiv+1
  7006  0B13  0022               	movlb	2	; select bank2
  7007  0B14  0853               	movf	(_Status^(0+256)+1),w	;volatile
  7008  0B15  0020               	movlb	0	; select bank0
  7009  0B16  00E1               	movwf	??_DetectAsics
  7010  0B17  01E2               	clrf	??_DetectAsics+1
  7011  0B18  0861               	movf	??_DetectAsics,w
  7012  0B19  00DA               	movwf	?___awdiv+2
  7013  0B1A  0862               	movf	??_DetectAsics+1,w
  7014  0B1B  00DB               	movwf	?___awdiv+3
  7015  0B1C  319F  27AC  318B   	fcall	___awdiv
  7016  0B1F  0020               	movlb	0	; select bank0
  7017  0B20  0858               	movf	?___awdiv,w
  7018  0B21  00E3               	movwf	??_DetectAsics+2
  7019  0B22  0863               	movf	??_DetectAsics+2,w
  7020  0B23  0022               	movlb	2	; select bank2
  7021  0B24  00EC               	movwf	_BankSize^(0+256)
  7022                           
  7023                           ;klondike.c: 122: Status.MaxCount = 16384 / BankSize / 2;
  7024  0B25  086C               	movf	_BankSize^(0+256),w
  7025  0B26  0020               	movlb	0	; select bank0
  7026  0B27  00E1               	movwf	??_DetectAsics
  7027  0B28  01E2               	clrf	??_DetectAsics+1
  7028  0B29  0861               	movf	??_DetectAsics,w
  7029  0B2A  00D8               	movwf	?___awdiv
  7030  0B2B  0862               	movf	??_DetectAsics+1,w
  7031  0B2C  00D9               	movwf	?___awdiv+1
  7032  0B2D  3000               	movlw	0
  7033  0B2E  00DA               	movwf	?___awdiv+2
  7034  0B2F  3040               	movlw	64
  7035  0B30  00DB               	movwf	?___awdiv+3
  7036  0B31  319F  27AC  318B   	fcall	___awdiv
  7037  0B34  0020               	movlb	0	; select bank0
  7038  0B35  0859               	movf	?___awdiv+1,w
  7039  0B36  0021               	movlb	1	; select bank1
  7040  0B37  01A1               	clrf	(_DetectAsics$2765+1)^(0+128)
  7041  0B38  07A1               	addwf	(_DetectAsics$2765+1)^(0+128),f
  7042  0B39  0020               	movlb	0	; select bank0
  7043  0B3A  0858               	movf	?___awdiv,w
  7044  0B3B  0021               	movlb	1	; select bank1
  7045  0B3C  01A0               	clrf	_DetectAsics$2765^(0+128)
  7046  0B3D  07A0               	addwf	_DetectAsics$2765^(0+128),f
  7047                           
  7048                           ;klondike.c: 122: Status.MaxCount = 16384 / BankSize / 2;
  7049  0B3E  3002               	movlw	2
  7050  0B3F  0020               	movlb	0	; select bank0
  7051  0B40  00D8               	movwf	?___awdiv
  7052  0B41  3000               	movlw	0
  7053  0B42  00D9               	movwf	?___awdiv+1
  7054  0B43  0021               	movlb	1	; select bank1
  7055  0B44  0821               	movf	(_DetectAsics$2765+1)^(0+128),w
  7056  0B45  0020               	movlb	0	; select bank0
  7057  0B46  01DB               	clrf	?___awdiv+3
  7058  0B47  07DB               	addwf	?___awdiv+3,f
  7059  0B48  0021               	movlb	1	; select bank1
  7060  0B49  0820               	movf	_DetectAsics$2765^(0+128),w
  7061  0B4A  0020               	movlb	0	; select bank0
  7062  0B4B  01DA               	clrf	?___awdiv+2
  7063  0B4C  07DA               	addwf	?___awdiv+2,f
  7064  0B4D  319F  27AC  318B   	fcall	___awdiv
  7065  0B50  0020               	movlb	0	; select bank0
  7066  0B51  0859               	movf	?___awdiv+1,w
  7067  0B52  0022               	movlb	2	; select bank2
  7068  0B53  01DD               	clrf	((_Status+1)^(0+256)+10)	;volatile
  7069  0B54  07DD               	addwf	((_Status+1)^(0+256)+10),f	;volatile
  7070  0B55  0020               	movlb	0	; select bank0
  7071  0B56  0858               	movf	?___awdiv,w
  7072  0B57  0022               	movlb	2	; select bank2
  7073  0B58  01DC               	clrf	(_Status^(0+256)+10)	;volatile
  7074  0B59  07DC               	addwf	(_Status^(0+256)+10),f	;volatile
  7075                           
  7076                           ;klondike.c: 124: NonceRanges[0] = 0;
  7077  0B5A  3000               	movlw	0
  7078  0B5B  0026               	movlb	6	; select bank6
  7079  0B5C  00A3               	movwf	(_NonceRanges+3)^(0+768)
  7080  0B5D  3000               	movlw	0
  7081  0B5E  00A2               	movwf	(_NonceRanges+2)^(0+768)
  7082  0B5F  3000               	movlw	0
  7083  0B60  00A1               	movwf	(_NonceRanges+1)^(0+768)
  7084  0B61  3000               	movlw	0
  7085  0B62  00A0               	movwf	_NonceRanges^(0+768)
  7086                           
  7087                           ;klondike.c: 125: for(BYTE x = 1; x < BankSize; x++)
  7088  0B63  0021               	movlb	1	; select bank1
  7089  0B64  01A2               	clrf	DetectAsics@x^(0+128)
  7090  0B65  0AA2               	incf	DetectAsics@x^(0+128),f
  7091  0B66                     l7464:	
  7092  0B66  0022               	movlb	2	; select bank2
  7093  0B67  086C               	movf	_BankSize^(0+256),w
  7094  0B68  0021               	movlb	1	; select bank1
  7095  0B69  0222               	subwf	DetectAsics@x^(0+128),w
  7096  0B6A  1803               	btfsc	3,0
  7097  0B6B  2BB6               	goto	l7466
  7098                           
  7099                           ;klondike.c: 126: NonceRanges[x] = NonceRanges[x-1] + BankRanges[BankSize-1];
  7100  0B6C  0022               	movlb	2	; select bank2
  7101  0B6D  086C               	movf	_BankSize^(0+256),w
  7102  0B6E  0020               	movlb	0	; select bank0
  7103  0B6F  00E1               	movwf	??_DetectAsics
  7104  0B70  3001               	movlw	1
  7105  0B71                     u8285:	
  7106  0B71  35E1               	lslf	??_DetectAsics,f
  7107  0B72  3EFF               	addlw	-1
  7108  0B73  1D03               	skipz
  7109  0B74  2B71               	goto	u8285
  7110  0B75  3561               	lslf	??_DetectAsics,w
  7111  0B76  3EFC               	addlw	252
  7112  0B77  3E40               	addlw	_BankRanges& (0+255)
  7113  0B78  0086               	movwf	6
  7114  0B79  3003               	movlw	3	; select bank6/7
  7115  0B7A  0087               	movwf	7
  7116  0B7B  3F40               	moviw [0]fsr1
  7117  0B7C  00E2               	movwf	??_DetectAsics+1
  7118  0B7D  3F41               	moviw [1]fsr1
  7119  0B7E  00E3               	movwf	??_DetectAsics+2
  7120  0B7F  3F42               	moviw [2]fsr1
  7121  0B80  00E4               	movwf	??_DetectAsics+3
  7122  0B81  3F43               	moviw [3]fsr1
  7123  0B82  00E5               	movwf	??_DetectAsics+4
  7124  0B83  0021               	movlb	1	; select bank1
  7125  0B84  0822               	movf	DetectAsics@x^(0+128),w
  7126  0B85  0020               	movlb	0	; select bank0
  7127  0B86  00E6               	movwf	??_DetectAsics+5
  7128  0B87  3001               	movlw	1
  7129  0B88                     u8295:	
  7130  0B88  35E6               	lslf	??_DetectAsics+5,f
  7131  0B89  3EFF               	addlw	-1
  7132  0B8A  1D03               	skipz
  7133  0B8B  2B88               	goto	u8295
  7134  0B8C  3566               	lslf	??_DetectAsics+5,w
  7135  0B8D  3EFC               	addlw	252
  7136  0B8E  3E20               	addlw	_NonceRanges& (0+255)
  7137  0B8F  0086               	movwf	6
  7138  0B90  3003               	movlw	3	; select bank6/7
  7139  0B91  0087               	movwf	7
  7140  0B92  3F40               	moviw [0]fsr1
  7141  0B93  07E2               	addwf	??_DetectAsics+1,f
  7142  0B94  3F41               	moviw [1]fsr1
  7143  0B95  3DE3               	addwfc	??_DetectAsics+2,f
  7144  0B96  3F42               	moviw [2]fsr1
  7145  0B97  3DE4               	addwfc	??_DetectAsics+3,f
  7146  0B98  3F43               	moviw [3]fsr1
  7147  0B99  3DE5               	addwfc	??_DetectAsics+4,f
  7148  0B9A  0021               	movlb	1	; select bank1
  7149  0B9B  0822               	movf	DetectAsics@x^(0+128),w
  7150  0B9C  0020               	movlb	0	; select bank0
  7151  0B9D  00E7               	movwf	??_DetectAsics+6
  7152  0B9E  3001               	movlw	1
  7153  0B9F                     u8305:	
  7154  0B9F  35E7               	lslf	??_DetectAsics+6,f
  7155  0BA0  3EFF               	addlw	-1
  7156  0BA1  1D03               	skipz
  7157  0BA2  2B9F               	goto	u8305
  7158  0BA3  3567               	lslf	??_DetectAsics+6,w
  7159  0BA4  3E20               	addlw	_NonceRanges& (0+255)
  7160  0BA5  0086               	movwf	6
  7161  0BA6  3003               	movlw	3	; select bank6/7
  7162  0BA7  0087               	movwf	7
  7163  0BA8  0862               	movf	??_DetectAsics+1,w
  7164  0BA9  3FC0               	movwi [0]fsr1
  7165  0BAA  0863               	movf	??_DetectAsics+2,w
  7166  0BAB  3FC1               	movwi [1]fsr1
  7167  0BAC  0864               	movf	??_DetectAsics+3,w
  7168  0BAD  3FC2               	movwi [2]fsr1
  7169  0BAE  0865               	movf	??_DetectAsics+4,w
  7170  0BAF  3FC3               	movwi [3]fsr1
  7171  0BB0  3001               	movlw	1
  7172  0BB1  00E1               	movwf	??_DetectAsics
  7173  0BB2  0861               	movf	??_DetectAsics,w
  7174  0BB3  0021               	movlb	1	; select bank1
  7175  0BB4  07A2               	addwf	DetectAsics@x^(0+128),f
  7176  0BB5  2B66               	goto	l7464
  7177  0BB6                     l7466:	
  7178                           
  7179                           ;klondike.c: 128: Status.State = 'R';
  7180  0BB6  3052               	movlw	82
  7181  0BB7  0020               	movlb	0	; select bank0
  7182  0BB8  00E1               	movwf	??_DetectAsics
  7183  0BB9  0861               	movf	??_DetectAsics,w
  7184  0BBA  0022               	movlb	2	; select bank2
  7185  0BBB  00D2               	movwf	_Status^(0+256)	;volatile
  7186                           
  7187                           ;klondike.c: 129: Status.HashCount = 0;
  7188  0BBC  01DA               	clrf	(_Status^(0+256)+8)	;volatile
  7189  0BBD  01DB               	clrf	((_Status+1)^(0+256)+8)	;volatile
  7190  0BBE  0008               	return
  7191  0BBF                     __end_of_DetectAsics:	
  7192                           
  7193                           	psect	text23
  7194  1FAC                     __ptext23:	
  7195 ;; *************** function ___awdiv *****************
  7196 ;; Defined at:
  7197 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;  divisor         2    8[BANK0 ] int 
  7200 ;;  dividend        2   10[BANK0 ] int 
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  quotient        2   15[BANK0 ] int 
  7203 ;;  sign            1   14[BANK0 ] unsigned char 
  7204 ;;  counter         1   13[BANK0 ] unsigned char 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2    8[BANK0 ] int 
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;Total ram usage:        9 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    4
  7221 ;; This function calls:
  7222 ;;		Nothing
  7223 ;; This function is called by:
  7224 ;;		_DetectAsics
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           
  7229                           ;psect for function ___awdiv
  7230  1FAC                     ___awdiv:	
  7231                           
  7232                           ;incstack = 0
  7233                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7234  1FAC  0020               	movlb	0	; select bank0
  7235  1FAD  01DE               	clrf	___awdiv@sign
  7236  1FAE  1FD9               	btfss	___awdiv@divisor+1,7
  7237  1FAF  2FB7               	goto	l7566
  7238  1FB0  09D8               	comf	___awdiv@divisor,f
  7239  1FB1  09D9               	comf	___awdiv@divisor+1,f
  7240  1FB2  0AD8               	incf	___awdiv@divisor,f
  7241  1FB3  1903               	skipnz
  7242  1FB4  0AD9               	incf	___awdiv@divisor+1,f
  7243  1FB5  01DE               	clrf	___awdiv@sign
  7244  1FB6  0ADE               	incf	___awdiv@sign,f
  7245  1FB7                     l7566:	
  7246  1FB7  1FDB               	btfss	___awdiv@dividend+1,7
  7247  1FB8  2FC2               	goto	l7572
  7248  1FB9  09DA               	comf	___awdiv@dividend,f
  7249  1FBA  09DB               	comf	___awdiv@dividend+1,f
  7250  1FBB  0ADA               	incf	___awdiv@dividend,f
  7251  1FBC  1903               	skipnz
  7252  1FBD  0ADB               	incf	___awdiv@dividend+1,f
  7253  1FBE  3001               	movlw	1
  7254  1FBF  00DC               	movwf	??___awdiv
  7255  1FC0  085C               	movf	??___awdiv,w
  7256  1FC1  06DE               	xorwf	___awdiv@sign,f
  7257  1FC2                     l7572:	
  7258  1FC2  01DF               	clrf	___awdiv@quotient
  7259  1FC3  01E0               	clrf	___awdiv@quotient+1
  7260  1FC4  0859               	movf	___awdiv@divisor+1,w
  7261  1FC5  0458               	iorwf	___awdiv@divisor,w
  7262  1FC6  1903               	skipnz
  7263  1FC7  2FF1               	goto	l7594
  7264  1FC8  01DD               	clrf	___awdiv@counter
  7265  1FC9  0ADD               	incf	___awdiv@counter,f
  7266  1FCA                     l7582:	
  7267  1FCA  1BD9               	btfsc	___awdiv@divisor+1,7
  7268  1FCB  2FD6               	goto	l7584
  7269  1FCC  3001               	movlw	1
  7270  1FCD                     u8485:	
  7271  1FCD  35D8               	lslf	___awdiv@divisor,f
  7272  1FCE  0DD9               	rlf	___awdiv@divisor+1,f
  7273  1FCF  0B89               	decfsz	9,f
  7274  1FD0  2FCD               	goto	u8485
  7275  1FD1  3001               	movlw	1
  7276  1FD2  00DC               	movwf	??___awdiv
  7277  1FD3  085C               	movf	??___awdiv,w
  7278  1FD4  07DD               	addwf	___awdiv@counter,f
  7279  1FD5  2FCA               	goto	l7582
  7280  1FD6                     l7584:	
  7281  1FD6  3001               	movlw	1
  7282  1FD7                     u8505:	
  7283  1FD7  35DF               	lslf	___awdiv@quotient,f
  7284  1FD8  0DE0               	rlf	___awdiv@quotient+1,f
  7285  1FD9  0B89               	decfsz	9,f
  7286  1FDA  2FD7               	goto	u8505
  7287  1FDB  0859               	movf	___awdiv@divisor+1,w
  7288  1FDC  025B               	subwf	___awdiv@dividend+1,w
  7289  1FDD  1D03               	skipz
  7290  1FDE  2FE1               	goto	u8515
  7291  1FDF  0858               	movf	___awdiv@divisor,w
  7292  1FE0  025A               	subwf	___awdiv@dividend,w
  7293  1FE1                     u8515:	
  7294  1FE1  1C03               	skipc
  7295  1FE2  2FE8               	goto	l7590
  7296  1FE3  0858               	movf	___awdiv@divisor,w
  7297  1FE4  02DA               	subwf	___awdiv@dividend,f
  7298  1FE5  0859               	movf	___awdiv@divisor+1,w
  7299  1FE6  3BDB               	subwfb	___awdiv@dividend+1,f
  7300  1FE7  145F               	bsf	___awdiv@quotient,0
  7301  1FE8                     l7590:	
  7302  1FE8  3001               	movlw	1
  7303  1FE9                     u8525:	
  7304  1FE9  36D9               	lsrf	___awdiv@divisor+1,f
  7305  1FEA  0CD8               	rrf	___awdiv@divisor,f
  7306  1FEB  0B89               	decfsz	9,f
  7307  1FEC  2FE9               	goto	u8525
  7308  1FED  3001               	movlw	1
  7309  1FEE  02DD               	subwf	___awdiv@counter,f
  7310  1FEF  1D03               	btfss	3,2
  7311  1FF0  2FD6               	goto	l7584
  7312  1FF1                     l7594:	
  7313  1FF1  085E               	movf	___awdiv@sign,w
  7314  1FF2  1903               	btfsc	3,2
  7315  1FF3  2FF9               	goto	l7598
  7316  1FF4  09DF               	comf	___awdiv@quotient,f
  7317  1FF5  09E0               	comf	___awdiv@quotient+1,f
  7318  1FF6  0ADF               	incf	___awdiv@quotient,f
  7319  1FF7  1903               	skipnz
  7320  1FF8  0AE0               	incf	___awdiv@quotient+1,f
  7321  1FF9                     l7598:	
  7322  1FF9  0860               	movf	___awdiv@quotient+1,w
  7323  1FFA  01D9               	clrf	?___awdiv+1
  7324  1FFB  07D9               	addwf	?___awdiv+1,f
  7325  1FFC  085F               	movf	___awdiv@quotient,w
  7326  1FFD  01D8               	clrf	?___awdiv
  7327  1FFE  07D8               	addwf	?___awdiv,f
  7328  1FFF  0008               	return
  7329  2000                     __end_of___awdiv:	
  7330                           
  7331                           	psect	text24
  7332  1036                     __ptext24:	
  7333 ;; *************** function _WorkTick *****************
  7334 ;; Defined at:
  7335 ;;		line 134 in file "klondike.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;		None
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;		None               void
  7342 ;; Registers used:
  7343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;Total ram usage:        3 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    7
  7356 ;; This function calls:
  7357 ;;		_UpdateFanLevel
  7358 ;;		___awmod
  7359 ;; This function is called by:
  7360 ;;		_main
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           
  7365                           ;psect for function _WorkTick
  7366  1036                     _WorkTick:	
  7367                           
  7368                           ;klondike.c: 135: TMR0 += HashTime;
  7369                           
  7370                           ;incstack = 0
  7371                           ; Regs used in _WorkTick: [allreg]
  7372  1036  0022               	movlb	2	; select bank2
  7373  1037  086B               	movf	_HashTime^(0+256),w
  7374  1038  0021               	movlb	1	; select bank1
  7375  1039  00E5               	movwf	??_WorkTick^(0+128)
  7376  103A  0865               	movf	??_WorkTick^(0+128),w
  7377  103B  0020               	movlb	0	; select bank0
  7378  103C  0795               	addwf	21,f	;volatile
  7379                           
  7380                           ;klondike.c: 136: TMR0IF = 0;
  7381  103D  110B               	bcf	11,2	;volatile
  7382                           
  7383                           ;klondike.c: 138: if((Status.State == 'W') && (++Status.HashCount == Status.MaxCount)) {
  7384  103E  0022               	movlb	2	; select bank2
  7385  103F  0852               	movf	_Status^(0+256),w	;volatile
  7386  1040  3A57               	xorlw	87
  7387  1041  1D03               	skipz
  7388  1042  2861               	goto	l5514
  7389  1043  3008               	movlw	8
  7390  1044  3E52               	addlw	_Status& (0+255)
  7391  1045  0086               	movwf	6
  7392  1046  3001               	movlw	1	; select bank2/3
  7393  1047  0087               	movwf	7
  7394  1048  3001               	movlw	1
  7395  1049  0781               	addwf	1,f
  7396  104A  3141               	addfsr 1,1
  7397  104B  1803               	skipnc
  7398  104C  0A81               	incf	1,f
  7399  104D  317F               	addfsr 1,-1
  7400  104E  3F40               	moviw [0]fsr1
  7401  104F  065C               	xorwf	(_Status^(0+256)+10),w	;volatile
  7402  1050  1D03               	skipz
  7403  1051  2854               	goto	u5435
  7404  1052  3F41               	moviw [1]fsr1
  7405  1053  065D               	xorwf	((_Status+1)^(0+256)+10),w	;volatile
  7406  1054                     u5435:	
  7407  1054  1D03               	skipz
  7408  1055  2861               	goto	l5514
  7409                           
  7410                           ;klondike.c: 139: if(Status.WorkQC > 0) {
  7411  1056  0855               	movf	(_Status^(0+256)+3),w	;volatile
  7412  1057  1903               	btfsc	3,2
  7413  1058  285B               	goto	l5512
  7414                           
  7415                           ;klondike.c: 140: Status.State = 'P';
  7416  1059  3050               	movlw	80
  7417  105A  285C               	goto	L5
  7418  105B                     l5512:	
  7419                           ;klondike.c: 141: }
  7420                           
  7421                           
  7422                           ;klondike.c: 142: else {
  7423                           ;klondike.c: 143: Status.State = 'R';
  7424  105B  3052               	movlw	82
  7425  105C                     L5:	
  7426  105C  0021               	movlb	1	; select bank1
  7427  105D  00E5               	movwf	??_WorkTick^(0+128)
  7428  105E  0865               	movf	??_WorkTick^(0+128),w
  7429  105F  0022               	movlb	2	; select bank2
  7430  1060  00D2               	movwf	_Status^(0+256)	;volatile
  7431  1061                     l5514:	
  7432                           
  7433                           ;klondike.c: 144: }
  7434                           ;klondike.c: 145: }
  7435                           ;klondike.c: 147: if(++SlowTick == 0) {
  7436  1061  3001               	movlw	1
  7437  1062  0021               	movlb	1	; select bank1
  7438  1063  00E5               	movwf	??_WorkTick^(0+128)
  7439  1064  0865               	movf	??_WorkTick^(0+128),w
  7440  1065  0022               	movlb	2	; select bank2
  7441  1066  07B5               	addwf	_SlowTick^(0+256),f
  7442  1067  1D03               	btfss	3,2
  7443  1068  0008               	return
  7444                           
  7445                           ;klondike.c: 148: LATAbits.LATA5 = 0;;
  7446  1069  128C               	bcf	12,5	;volatile
  7447                           
  7448                           ;klondike.c: 149: Status.Temp = ADRESH;
  7449  106A  0021               	movlb	1	; select bank1
  7450  106B  081C               	movf	28,w	;volatile
  7451  106C  00E5               	movwf	??_WorkTick^(0+128)
  7452  106D  0865               	movf	??_WorkTick^(0+128),w
  7453  106E  0022               	movlb	2	; select bank2
  7454  106F  00D7               	movwf	(_Status^(0+256)+5)	;volatile
  7455                           
  7456                           ;klondike.c: 150: ADCON0bits.GO_nDONE = 1;
  7457  1070  0021               	movlb	1	; select bank1
  7458  1071  149D               	bsf	29,1	;volatile
  7459                           
  7460                           ;klondike.c: 151: if((++VerySlowTick % 15) == 0) {
  7461  1072  300F               	movlw	15
  7462  1073  0020               	movlb	0	; select bank0
  7463  1074  00D8               	movwf	?___awmod
  7464  1075  3000               	movlw	0
  7465  1076  00D9               	movwf	?___awmod+1
  7466  1077  3001               	movlw	1
  7467  1078  0021               	movlb	1	; select bank1
  7468  1079  00E5               	movwf	??_WorkTick^(0+128)
  7469  107A  0865               	movf	??_WorkTick^(0+128),w
  7470  107B  0022               	movlb	2	; select bank2
  7471  107C  07BF               	addwf	_VerySlowTick^(0+256),f
  7472  107D  083F               	movf	_VerySlowTick^(0+256),w
  7473  107E  0021               	movlb	1	; select bank1
  7474  107F  00E6               	movwf	(??_WorkTick+1)^(0+128)
  7475  1080  01E7               	clrf	((??_WorkTick+1)^(0+128)+1)
  7476  1081  0866               	movf	(??_WorkTick+1)^(0+128),w
  7477  1082  0020               	movlb	0	; select bank0
  7478  1083  00DA               	movwf	?___awmod+2
  7479  1084  0021               	movlb	1	; select bank1
  7480  1085  0867               	movf	(??_WorkTick+2)^(0+128),w
  7481  1086  0020               	movlb	0	; select bank0
  7482  1087  00DB               	movwf	?___awmod+3
  7483  1088  319E  2623  3190   	fcall	___awmod
  7484  108B  0020               	movlb	0	; select bank0
  7485  108C  0859               	movf	?___awmod+1,w
  7486  108D  0458               	iorwf	?___awmod,w
  7487  108E  1D03               	skipz
  7488  108F  0008               	return
  7489                           
  7490                           ;klondike.c: 152: UpdateFanLevel();
  7491  1090  3184  2414         	fcall	_UpdateFanLevel
  7492  1092  0008               	return
  7493  1093                     __end_of_WorkTick:	
  7494                           
  7495                           	psect	text25
  7496  1E23                     __ptext25:	
  7497 ;; *************** function ___awmod *****************
  7498 ;; Defined at:
  7499 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awmod.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  divisor         2    8[BANK0 ] int 
  7502 ;;  dividend        2   10[BANK0 ] int 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  sign            1   14[BANK0 ] unsigned char 
  7505 ;;  counter         1   13[BANK0 ] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  2    8[BANK0 ] int 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7515 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;Total ram usage:        7 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:    4
  7522 ;; This function calls:
  7523 ;;		Nothing
  7524 ;; This function is called by:
  7525 ;;		_WorkTick
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           
  7530                           ;psect for function ___awmod
  7531  1E23                     ___awmod:	
  7532                           
  7533                           ;incstack = 0
  7534                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7535  1E23  0020               	movlb	0	; select bank0
  7536  1E24  01DE               	clrf	___awmod@sign
  7537  1E25  1FDB               	btfss	___awmod@dividend+1,7
  7538  1E26  2E2E               	goto	l5800
  7539  1E27  09DA               	comf	___awmod@dividend,f
  7540  1E28  09DB               	comf	___awmod@dividend+1,f
  7541  1E29  0ADA               	incf	___awmod@dividend,f
  7542  1E2A  1903               	skipnz
  7543  1E2B  0ADB               	incf	___awmod@dividend+1,f
  7544  1E2C  01DE               	clrf	___awmod@sign
  7545  1E2D  0ADE               	incf	___awmod@sign,f
  7546  1E2E                     l5800:	
  7547  1E2E  1FD9               	btfss	___awmod@divisor+1,7
  7548  1E2F  2E35               	goto	l5804
  7549  1E30  09D8               	comf	___awmod@divisor,f
  7550  1E31  09D9               	comf	___awmod@divisor+1,f
  7551  1E32  0AD8               	incf	___awmod@divisor,f
  7552  1E33  1903               	skipnz
  7553  1E34  0AD9               	incf	___awmod@divisor+1,f
  7554  1E35                     l5804:	
  7555  1E35  0859               	movf	___awmod@divisor+1,w
  7556  1E36  0458               	iorwf	___awmod@divisor,w
  7557  1E37  1903               	skipnz
  7558  1E38  2E5C               	goto	l5822
  7559  1E39  01DD               	clrf	___awmod@counter
  7560  1E3A  0ADD               	incf	___awmod@counter,f
  7561  1E3B                     l5812:	
  7562  1E3B  1BD9               	btfsc	___awmod@divisor+1,7
  7563  1E3C  2E47               	goto	l5814
  7564  1E3D  3001               	movlw	1
  7565  1E3E                     u5885:	
  7566  1E3E  35D8               	lslf	___awmod@divisor,f
  7567  1E3F  0DD9               	rlf	___awmod@divisor+1,f
  7568  1E40  0B89               	decfsz	9,f
  7569  1E41  2E3E               	goto	u5885
  7570  1E42  3001               	movlw	1
  7571  1E43  00DC               	movwf	??___awmod
  7572  1E44  085C               	movf	??___awmod,w
  7573  1E45  07DD               	addwf	___awmod@counter,f
  7574  1E46  2E3B               	goto	l5812
  7575  1E47                     l5814:	
  7576  1E47  0859               	movf	___awmod@divisor+1,w
  7577  1E48  025B               	subwf	___awmod@dividend+1,w
  7578  1E49  1D03               	skipz
  7579  1E4A  2E4D               	goto	u5905
  7580  1E4B  0858               	movf	___awmod@divisor,w
  7581  1E4C  025A               	subwf	___awmod@dividend,w
  7582  1E4D                     u5905:	
  7583  1E4D  1C03               	skipc
  7584  1E4E  2E53               	goto	l5818
  7585  1E4F  0858               	movf	___awmod@divisor,w
  7586  1E50  02DA               	subwf	___awmod@dividend,f
  7587  1E51  0859               	movf	___awmod@divisor+1,w
  7588  1E52  3BDB               	subwfb	___awmod@dividend+1,f
  7589  1E53                     l5818:	
  7590  1E53  3001               	movlw	1
  7591  1E54                     u5915:	
  7592  1E54  36D9               	lsrf	___awmod@divisor+1,f
  7593  1E55  0CD8               	rrf	___awmod@divisor,f
  7594  1E56  0B89               	decfsz	9,f
  7595  1E57  2E54               	goto	u5915
  7596  1E58  3001               	movlw	1
  7597  1E59  02DD               	subwf	___awmod@counter,f
  7598  1E5A  1D03               	btfss	3,2
  7599  1E5B  2E47               	goto	l5814
  7600  1E5C                     l5822:	
  7601  1E5C  085E               	movf	___awmod@sign,w
  7602  1E5D  1903               	btfsc	3,2
  7603  1E5E  2E64               	goto	l5826
  7604  1E5F  09DA               	comf	___awmod@dividend,f
  7605  1E60  09DB               	comf	___awmod@dividend+1,f
  7606  1E61  0ADA               	incf	___awmod@dividend,f
  7607  1E62  1903               	skipnz
  7608  1E63  0ADB               	incf	___awmod@dividend+1,f
  7609  1E64                     l5826:	
  7610  1E64  085B               	movf	___awmod@dividend+1,w
  7611  1E65  01D9               	clrf	?___awmod+1
  7612  1E66  07D9               	addwf	?___awmod+1,f
  7613  1E67  085A               	movf	___awmod@dividend,w
  7614  1E68  01D8               	clrf	?___awmod
  7615  1E69  07D8               	addwf	?___awmod,f
  7616  1E6A  0008               	return
  7617  1E6B                     __end_of___awmod:	
  7618                           
  7619                           	psect	text26
  7620  0414                     __ptext26:	
  7621 ;; *************** function _UpdateFanLevel *****************
  7622 ;; Defined at:
  7623 ;;		line 196 in file "klondike.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;		None               void
  7630 ;; Registers used:
  7631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;Total ram usage:        7 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    6
  7644 ;; This function calls:
  7645 ;;		___awtoft
  7646 ;;		___ftadd
  7647 ;;		___ftmul
  7648 ;;		___ftneg
  7649 ;;		___fttol
  7650 ;; This function is called by:
  7651 ;;		_WorkTick
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           
  7656                           ;psect for function _UpdateFanLevel
  7657  0414                     _UpdateFanLevel:	
  7658                           
  7659                           ;klondike.c: 197: Error = Status.Temp - TempTarget;
  7660                           
  7661                           ;incstack = 0
  7662                           ; Regs used in _UpdateFanLevel: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  7663  0414  0023               	movlb	3	; select bank3
  7664  0415  0860               	movf	_TempTarget^(0+384),w
  7665  0416  0021               	movlb	1	; select bank1
  7666  0417  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7667  0418  01DF               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7668  0419  09DE               	comf	??_UpdateFanLevel^(0+128),f
  7669  041A  09DF               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7670  041B  0ADE               	incf	??_UpdateFanLevel^(0+128),f
  7671  041C  1903               	skipnz
  7672  041D  0ADF               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7673  041E  0022               	movlb	2	; select bank2
  7674  041F  0857               	movf	(_Status^(0+256)+5),w	;volatile
  7675  0420  0021               	movlb	1	; select bank1
  7676  0421  075E               	addwf	??_UpdateFanLevel^(0+128),w
  7677  0422  00E0               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7678  0423  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7679  0424  1803               	skipnc
  7680  0425  0A5F               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7681  0426  00E1               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7682  0427  0860               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7683  0428  0022               	movlb	2	; select bank2
  7684  0429  00CC               	movwf	_Error^(0+256)
  7685  042A  0021               	movlb	1	; select bank1
  7686  042B  0861               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7687  042C  0022               	movlb	2	; select bank2
  7688  042D  00CD               	movwf	(_Error+1)^(0+256)
  7689                           
  7690                           ;klondike.c: 198: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  7691  042E  084D               	movf	(_Error+1)^(0+256),w
  7692  042F  0020               	movlb	0	; select bank0
  7693  0430  01E1               	clrf	?___awtoft+1
  7694  0431  07E1               	addwf	?___awtoft+1,f
  7695  0432  0022               	movlb	2	; select bank2
  7696  0433  084C               	movf	_Error^(0+256),w
  7697  0434  0020               	movlb	0	; select bank0
  7698  0435  01E0               	clrf	?___awtoft
  7699  0436  07E0               	addwf	?___awtoft,f
  7700  0437  319C  2498  3184   	fcall	___awtoft
  7701  043A  0020               	movlb	0	; select bank0
  7702  043B  0860               	movf	?___awtoft,w
  7703  043C  0021               	movlb	1	; select bank1
  7704  043D  00B6               	movwf	(?___ftadd^(0+128)+3)
  7705  043E  0020               	movlb	0	; select bank0
  7706  043F  0861               	movf	?___awtoft+1,w
  7707  0440  0021               	movlb	1	; select bank1
  7708  0441  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  7709  0442  0020               	movlb	0	; select bank0
  7710  0443  0862               	movf	?___awtoft+2,w
  7711  0444  0021               	movlb	1	; select bank1
  7712  0445  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  7713  0446  0022               	movlb	2	; select bank2
  7714  0447  0857               	movf	(_Status^(0+256)+5),w	;volatile
  7715  0448  0021               	movlb	1	; select bank1
  7716  0449  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7717  044A  01DF               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7718  044B  09DE               	comf	??_UpdateFanLevel^(0+128),f
  7719  044C  09DF               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7720  044D  0ADE               	incf	??_UpdateFanLevel^(0+128),f
  7721  044E  1903               	skipnz
  7722  044F  0ADF               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7723  0450  0022               	movlb	2	; select bank2
  7724  0451  0831               	movf	_LastTemp^(0+256),w
  7725  0452  0021               	movlb	1	; select bank1
  7726  0453  075E               	addwf	??_UpdateFanLevel^(0+128),w
  7727  0454  00E0               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7728  0455  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7729  0456  1803               	skipnc
  7730  0457  0A5F               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7731  0458  00E1               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7732  0459  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7733  045A  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7734  045B  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7735  045C  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7736  045D  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7737  045E  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7738  045F  0860               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7739  0460  0020               	movlb	0	; select bank0
  7740  0461  00E0               	movwf	?___awtoft
  7741  0462  0021               	movlb	1	; select bank1
  7742  0463  0861               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7743  0464  0020               	movlb	0	; select bank0
  7744  0465  00E1               	movwf	?___awtoft+1
  7745  0466  319C  2498  3184   	fcall	___awtoft
  7746  0469  0020               	movlb	0	; select bank0
  7747  046A  0860               	movf	?___awtoft,w
  7748  046B  0021               	movlb	1	; select bank1
  7749  046C  00B0               	movwf	?___ftneg^(0+128)
  7750  046D  0020               	movlb	0	; select bank0
  7751  046E  0861               	movf	?___awtoft+1,w
  7752  046F  0021               	movlb	1	; select bank1
  7753  0470  00B1               	movwf	(?___ftneg+1)^(0+128)
  7754  0471  0020               	movlb	0	; select bank0
  7755  0472  0862               	movf	?___awtoft+2,w
  7756  0473  0021               	movlb	1	; select bank1
  7757  0474  00B2               	movwf	(?___ftneg+2)^(0+128)
  7758  0475  319A  229D  3184   	fcall	___ftneg
  7759  0478  0021               	movlb	1	; select bank1
  7760  0479  0830               	movf	?___ftneg^(0+128),w
  7761  047A  00B3               	movwf	?___ftadd^(0+128)
  7762  047B  0831               	movf	(?___ftneg+1)^(0+128),w
  7763  047C  00B4               	movwf	(?___ftadd+1)^(0+128)
  7764  047D  0832               	movf	(?___ftneg+2)^(0+128),w
  7765  047E  00B5               	movwf	(?___ftadd+2)^(0+128)
  7766  047F  318E  26FC  3184   	fcall	___ftadd
  7767  0482  0021               	movlb	1	; select bank1
  7768  0483  0833               	movf	?___ftadd^(0+128),w
  7769  0484  00E2               	movwf	_UpdateFanLevel$2766^(0+128)
  7770  0485  0834               	movf	(?___ftadd+1)^(0+128),w
  7771  0486  00E3               	movwf	(_UpdateFanLevel$2766+1)^(0+128)
  7772  0487  0835               	movf	(?___ftadd+2)^(0+128),w
  7773  0488  00E4               	movwf	(_UpdateFanLevel$2766+2)^(0+128)
  7774                           
  7775                           ;klondike.c: 198: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  7776  0489  0862               	movf	_UpdateFanLevel$2766^(0+128),w
  7777  048A  00B6               	movwf	(?___ftadd^(0+128)+3)
  7778  048B  0863               	movf	(_UpdateFanLevel$2766+1)^(0+128),w
  7779  048C  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  7780  048D  0864               	movf	(_UpdateFanLevel$2766+2)^(0+128),w
  7781  048E  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  7782  048F  0023               	movlb	3	; select bank3
  7783  0490  0827               	movf	(_LastError+1)^(0+384),w
  7784  0491  0020               	movlb	0	; select bank0
  7785  0492  01E1               	clrf	?___awtoft+1
  7786  0493  07E1               	addwf	?___awtoft+1,f
  7787  0494  0023               	movlb	3	; select bank3
  7788  0495  0826               	movf	_LastError^(0+384),w
  7789  0496  0020               	movlb	0	; select bank0
  7790  0497  01E0               	clrf	?___awtoft
  7791  0498  07E0               	addwf	?___awtoft,f
  7792  0499  319C  2498  3184   	fcall	___awtoft
  7793  049C  0020               	movlb	0	; select bank0
  7794  049D  0860               	movf	?___awtoft,w
  7795  049E  0021               	movlb	1	; select bank1
  7796  049F  00A3               	movwf	(?___ftmul^(0+128)+3)
  7797  04A0  0020               	movlb	0	; select bank0
  7798  04A1  0861               	movf	?___awtoft+1,w
  7799  04A2  0021               	movlb	1	; select bank1
  7800  04A3  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  7801  04A4  0020               	movlb	0	; select bank0
  7802  04A5  0862               	movf	?___awtoft+2,w
  7803  04A6  0021               	movlb	1	; select bank1
  7804  04A7  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  7805  04A8  3000               	movlw	0
  7806  04A9  00A0               	movwf	?___ftmul^(0+128)
  7807  04AA  3000               	movlw	0
  7808  04AB  00A1               	movwf	(?___ftmul+1)^(0+128)
  7809  04AC  303F               	movlw	63
  7810  04AD  00A2               	movwf	(?___ftmul+2)^(0+128)
  7811  04AE  318C  2476  3184   	fcall	___ftmul
  7812  04B1  0021               	movlb	1	; select bank1
  7813  04B2  0820               	movf	?___ftmul^(0+128),w
  7814  04B3  00B0               	movwf	?___ftneg^(0+128)
  7815  04B4  0821               	movf	(?___ftmul+1)^(0+128),w
  7816  04B5  00B1               	movwf	(?___ftneg+1)^(0+128)
  7817  04B6  0822               	movf	(?___ftmul+2)^(0+128),w
  7818  04B7  00B2               	movwf	(?___ftneg+2)^(0+128)
  7819  04B8  319A  229D  3184   	fcall	___ftneg
  7820  04BB  0021               	movlb	1	; select bank1
  7821  04BC  0830               	movf	?___ftneg^(0+128),w
  7822  04BD  00B3               	movwf	?___ftadd^(0+128)
  7823  04BE  0831               	movf	(?___ftneg+1)^(0+128),w
  7824  04BF  00B4               	movwf	(?___ftadd+1)^(0+128)
  7825  04C0  0832               	movf	(?___ftneg+2)^(0+128),w
  7826  04C1  00B5               	movwf	(?___ftadd+2)^(0+128)
  7827  04C2  318E  26FC  3184   	fcall	___ftadd
  7828  04C5  0021               	movlb	1	; select bank1
  7829  04C6  0833               	movf	?___ftadd^(0+128),w
  7830  04C7  00D0               	movwf	?___fttol^(0+128)
  7831  04C8  0834               	movf	(?___ftadd+1)^(0+128),w
  7832  04C9  00D1               	movwf	(?___fttol+1)^(0+128)
  7833  04CA  0835               	movf	(?___ftadd+2)^(0+128),w
  7834  04CB  00D2               	movwf	(?___fttol+2)^(0+128)
  7835  04CC  3194  248D  3184   	fcall	___fttol
  7836  04CF  0021               	movlb	1	; select bank1
  7837  04D0  0851               	movf	(?___fttol^(0+128)+1),w
  7838  04D1  0022               	movlb	2	; select bank2
  7839  04D2  01A3               	clrf	(_Step+1)^(0+256)
  7840  04D3  07A3               	addwf	(_Step+1)^(0+256),f
  7841  04D4  0021               	movlb	1	; select bank1
  7842  04D5  0850               	movf	?___fttol^(0+128),w
  7843  04D6  0022               	movlb	2	; select bank2
  7844  04D7  01A2               	clrf	_Step^(0+256)
  7845  04D8  07A2               	addwf	_Step^(0+256),f
  7846                           
  7847                           ;klondike.c: 200: if(FanLevel + Step > 75 && FanLevel + Step <= 255) {
  7848  04D9  086A               	movf	_FanLevel^(0+256),w
  7849  04DA  0722               	addwf	_Step^(0+256),w
  7850  04DB  0021               	movlb	1	; select bank1
  7851  04DC  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7852  04DD  0022               	movlb	2	; select bank2
  7853  04DE  0823               	movf	(_Step+1)^(0+256),w
  7854  04DF  1803               	skipnc
  7855  04E0  0A23               	incf	(_Step+1)^(0+256),w
  7856  04E1  0021               	movlb	1	; select bank1
  7857  04E2  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7858  04E3  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7859  04E4  3A80               	xorlw	128
  7860  04E5  00FF               	movwf	127
  7861  04E6  3080               	movlw	128
  7862  04E7  027F               	subwf	127,w
  7863  04E8  1D03               	skipz
  7864  04E9  2CEC               	goto	u5475
  7865  04EA  304C               	movlw	76
  7866  04EB  025E               	subwf	??_UpdateFanLevel^(0+128),w
  7867  04EC                     u5475:	
  7868  04EC  1C03               	skipc
  7869  04ED  2D0C               	goto	l5538
  7870  04EE  0022               	movlb	2	; select bank2
  7871  04EF  086A               	movf	_FanLevel^(0+256),w
  7872  04F0  0722               	addwf	_Step^(0+256),w
  7873  04F1  0021               	movlb	1	; select bank1
  7874  04F2  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7875  04F3  0022               	movlb	2	; select bank2
  7876  04F4  0823               	movf	(_Step+1)^(0+256),w
  7877  04F5  1803               	skipnc
  7878  04F6  0A23               	incf	(_Step+1)^(0+256),w
  7879  04F7  0021               	movlb	1	; select bank1
  7880  04F8  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7881  04F9  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7882  04FA  3A80               	xorlw	128
  7883  04FB  00FF               	movwf	127
  7884  04FC  3081               	movlw	129
  7885  04FD  027F               	subwf	127,w
  7886  04FE  1D03               	skipz
  7887  04FF  2D02               	goto	u5485
  7888  0500  3000               	movlw	0
  7889  0501  025E               	subwf	??_UpdateFanLevel^(0+128),w
  7890  0502                     u5485:	
  7891  0502  1803               	skipnc
  7892  0503  2D0C               	goto	l5538
  7893                           
  7894                           ;klondike.c: 201: FanLevel += Step;
  7895  0504  0022               	movlb	2	; select bank2
  7896  0505  0822               	movf	_Step^(0+256),w
  7897  0506  0021               	movlb	1	; select bank1
  7898  0507  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7899  0508  085E               	movf	??_UpdateFanLevel^(0+128),w
  7900  0509  0022               	movlb	2	; select bank2
  7901  050A  07EA               	addwf	_FanLevel^(0+256),f
  7902                           
  7903                           ;klondike.c: 202: }
  7904  050B  2D40               	goto	l720
  7905  050C                     l5538:	
  7906                           
  7907                           ;klondike.c: 203: else if(FanLevel + Step > 255) {
  7908  050C  0022               	movlb	2	; select bank2
  7909  050D  086A               	movf	_FanLevel^(0+256),w
  7910  050E  0722               	addwf	_Step^(0+256),w
  7911  050F  0021               	movlb	1	; select bank1
  7912  0510  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7913  0511  0022               	movlb	2	; select bank2
  7914  0512  0823               	movf	(_Step+1)^(0+256),w
  7915  0513  1803               	skipnc
  7916  0514  0A23               	incf	(_Step+1)^(0+256),w
  7917  0515  0021               	movlb	1	; select bank1
  7918  0516  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7919  0517  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7920  0518  3A80               	xorlw	128
  7921  0519  00FF               	movwf	127
  7922  051A  3081               	movlw	129
  7923  051B  027F               	subwf	127,w
  7924  051C  1D03               	skipz
  7925  051D  2D20               	goto	u5495
  7926  051E  3000               	movlw	0
  7927  051F  025E               	subwf	??_UpdateFanLevel^(0+128),w
  7928  0520                     u5495:	
  7929  0520  1C03               	skipc
  7930  0521  2D24               	goto	l5542
  7931                           
  7932                           ;klondike.c: 204: FanLevel = 255;
  7933  0522  30FF               	movlw	255
  7934  0523  2D3B               	goto	L6
  7935  0524                     l5542:	
  7936                           ;klondike.c: 205: }
  7937                           
  7938                           
  7939                           ;klondike.c: 206: else if(FanLevel + Step < 75) {
  7940  0524  0022               	movlb	2	; select bank2
  7941  0525  086A               	movf	_FanLevel^(0+256),w
  7942  0526  0722               	addwf	_Step^(0+256),w
  7943  0527  0021               	movlb	1	; select bank1
  7944  0528  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7945  0529  0022               	movlb	2	; select bank2
  7946  052A  0823               	movf	(_Step+1)^(0+256),w
  7947  052B  1803               	skipnc
  7948  052C  0A23               	incf	(_Step+1)^(0+256),w
  7949  052D  0021               	movlb	1	; select bank1
  7950  052E  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7951  052F  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7952  0530  3A80               	xorlw	128
  7953  0531  00FF               	movwf	127
  7954  0532  3080               	movlw	128
  7955  0533  027F               	subwf	127,w
  7956  0534  1D03               	skipz
  7957  0535  2D38               	goto	u5505
  7958  0536  304B               	movlw	75
  7959  0537  025E               	subwf	??_UpdateFanLevel^(0+128),w
  7960  0538                     u5505:	
  7961  0538  1803               	skipnc
  7962  0539  2D40               	goto	l720
  7963                           
  7964                           ;klondike.c: 207: FanLevel = 75;
  7965  053A  304B               	movlw	75
  7966  053B                     L6:	
  7967  053B  0021               	movlb	1	; select bank1
  7968  053C  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7969  053D  085E               	movf	??_UpdateFanLevel^(0+128),w
  7970  053E  0022               	movlb	2	; select bank2
  7971  053F  00EA               	movwf	_FanLevel^(0+256)
  7972  0540                     l720:	
  7973                           
  7974                           ;klondike.c: 208: }
  7975                           ;klondike.c: 210: LastTemp = Status.Temp;
  7976  0540  0022               	movlb	2	; select bank2
  7977  0541  0857               	movf	(_Status^(0+256)+5),w	;volatile
  7978  0542  0021               	movlb	1	; select bank1
  7979  0543  00DE               	movwf	??_UpdateFanLevel^(0+128)
  7980  0544  085E               	movf	??_UpdateFanLevel^(0+128),w
  7981  0545  0022               	movlb	2	; select bank2
  7982  0546  00B1               	movwf	_LastTemp^(0+256)
  7983                           
  7984                           ;klondike.c: 211: LastError = Error;
  7985  0547  084D               	movf	(_Error+1)^(0+256),w
  7986  0548  0023               	movlb	3	; select bank3
  7987  0549  01A7               	clrf	(_LastError+1)^(0+384)
  7988  054A  07A7               	addwf	(_LastError+1)^(0+384),f
  7989  054B  0022               	movlb	2	; select bank2
  7990  054C  084C               	movf	_Error^(0+256),w
  7991  054D  0023               	movlb	3	; select bank3
  7992  054E  01A6               	clrf	_LastError^(0+384)
  7993  054F  07A6               	addwf	_LastError^(0+384),f
  7994                           
  7995                           ;klondike.c: 213: PWM1DCH = Status.FanSpeed = FanLevel;
  7996  0550  3006               	movlw	6
  7997  0551  3E52               	addlw	_Status& (0+255)
  7998  0552  0086               	movwf	6
  7999  0553  3001               	movlw	1	; select bank2/3
  8000  0554  0087               	movwf	7
  8001  0555  0022               	movlb	2	; select bank2
  8002  0556  086A               	movf	_FanLevel^(0+256),w
  8003  0557  3FC0               	movwi [0]fsr1
  8004  0558  002C               	movlb	12	; select bank12
  8005  0559  0092               	movwf	18	;volatile
  8006  055A  0008               	return
  8007  055B                     __end_of_UpdateFanLevel:	
  8008                           
  8009                           	psect	text27
  8010  148D                     __ptext27:	
  8011 ;; *************** function ___fttol *****************
  8012 ;; Defined at:
  8013 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  f1              3   48[BANK1 ] float 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  lval            4   57[BANK1 ] unsigned long 
  8018 ;;  exp1            1   61[BANK1 ] unsigned char 
  8019 ;;  sign1           1   56[BANK1 ] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  4   48[BANK1 ] long 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8029 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;Total ram usage:       14 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:    4
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_UpdateFanLevel
  8040 ;;		_SetAsicClock
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           
  8045                           ;psect for function ___fttol
  8046  148D                     ___fttol:	
  8047                           
  8048                           ;incstack = 0
  8049                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8050  148D  0021               	movlb	1	; select bank1
  8051  148E  0850               	movf	___fttol@f1^(0+128),w
  8052  148F  00D4               	movwf	??___fttol^(0+128)
  8053  1490  0851               	movf	(___fttol@f1+1)^(0+128),w
  8054  1491  00D5               	movwf	(??___fttol^(0+128)+1)
  8055  1492  0852               	movf	(___fttol@f1+2)^(0+128),w
  8056  1493  00D6               	movwf	(??___fttol^(0+128)+2)
  8057  1494  1003               	clrc
  8058  1495  0D55               	rlf	(??___fttol^(0+128)+1),w
  8059  1496  0D56               	rlf	(??___fttol^(0+128)+2),w
  8060  1497  00D7               	movwf	(??___fttol+3)^(0+128)
  8061  1498  0857               	movf	(??___fttol+3)^(0+128),w
  8062  1499  00DD               	movwf	___fttol@exp1^(0+128)
  8063  149A  08DD               	movf	___fttol@exp1^(0+128),f
  8064  149B  1D03               	skipz
  8065  149C  2CA6               	goto	l6036
  8066  149D  3000               	movlw	0
  8067  149E  00D3               	movwf	(?___fttol+3)^(0+128)
  8068  149F  3000               	movlw	0
  8069  14A0  00D2               	movwf	(?___fttol+2)^(0+128)
  8070  14A1  3000               	movlw	0
  8071  14A2  00D1               	movwf	(?___fttol+1)^(0+128)
  8072  14A3  3000               	movlw	0
  8073  14A4  00D0               	movwf	?___fttol^(0+128)
  8074  14A5  0008               	return
  8075  14A6                     l6036:	
  8076  14A6  0850               	movf	___fttol@f1^(0+128),w
  8077  14A7  00D4               	movwf	??___fttol^(0+128)
  8078  14A8  0851               	movf	(___fttol@f1+1)^(0+128),w
  8079  14A9  00D5               	movwf	(??___fttol^(0+128)+1)
  8080  14AA  0852               	movf	(___fttol@f1+2)^(0+128),w
  8081  14AB  00D6               	movwf	(??___fttol^(0+128)+2)
  8082  14AC  3017               	movlw	23
  8083  14AD                     u6425:	
  8084  14AD  36D6               	lsrf	(??___fttol^(0+128)+2),f
  8085  14AE  0CD5               	rrf	(??___fttol^(0+128)+1),f
  8086  14AF  0CD4               	rrf	??___fttol^(0+128),f
  8087  14B0  0B89               	decfsz	9,f
  8088  14B1  2CAD               	goto	u6425
  8089  14B2  0854               	movf	??___fttol^(0+128),w
  8090  14B3  00D7               	movwf	(??___fttol+3)^(0+128)
  8091  14B4  0857               	movf	(??___fttol+3)^(0+128),w
  8092  14B5  00D8               	movwf	___fttol@sign1^(0+128)
  8093  14B6  17D1               	bsf	(___fttol@f1^(0+128)+1),7
  8094  14B7  30FF               	movlw	255
  8095  14B8  05D0               	andwf	___fttol@f1^(0+128),f
  8096  14B9  30FF               	movlw	255
  8097  14BA  05D1               	andwf	(___fttol@f1+1)^(0+128),f
  8098  14BB  3000               	movlw	0
  8099  14BC  05D2               	andwf	(___fttol@f1+2)^(0+128),f
  8100  14BD  0850               	movf	___fttol@f1^(0+128),w
  8101  14BE  00D9               	movwf	___fttol@lval^(0+128)
  8102  14BF  0851               	movf	(___fttol@f1+1)^(0+128),w
  8103  14C0  00DA               	movwf	(___fttol@lval^(0+128)+1)
  8104  14C1  0852               	movf	(___fttol@f1+2)^(0+128),w
  8105  14C2  00DB               	movwf	(___fttol@lval^(0+128)+2)
  8106  14C3  01DC               	clrf	(___fttol@lval^(0+128)+3)
  8107  14C4  308E               	movlw	142
  8108  14C5  02DD               	subwf	___fttol@exp1^(0+128),f
  8109  14C6  1FDD               	btfss	___fttol@exp1^(0+128),7
  8110  14C7  2CE4               	goto	l6056
  8111  14C8  085D               	movf	___fttol@exp1^(0+128),w
  8112  14C9  3A80               	xorlw	128
  8113  14CA  3E8F               	addlw	143
  8114  14CB  1803               	skipnc
  8115  14CC  2CD6               	goto	l6054
  8116  14CD  3000               	movlw	0
  8117  14CE  00D3               	movwf	(?___fttol+3)^(0+128)
  8118  14CF  3000               	movlw	0
  8119  14D0  00D2               	movwf	(?___fttol+2)^(0+128)
  8120  14D1  3000               	movlw	0
  8121  14D2  00D1               	movwf	(?___fttol+1)^(0+128)
  8122  14D3  3000               	movlw	0
  8123  14D4  00D0               	movwf	?___fttol^(0+128)
  8124  14D5  0008               	return
  8125  14D6                     l6054:	
  8126  14D6  3001               	movlw	1
  8127  14D7                     u6455:	
  8128  14D7  36DC               	lsrf	(___fttol@lval+3)^(0+128),f
  8129  14D8  0CDB               	rrf	(___fttol@lval+2)^(0+128),f
  8130  14D9  0CDA               	rrf	(___fttol@lval+1)^(0+128),f
  8131  14DA  0CD9               	rrf	___fttol@lval^(0+128),f
  8132  14DB  0B89               	decfsz	9,f
  8133  14DC  2CD7               	goto	u6455
  8134  14DD  3001               	movlw	1
  8135  14DE  00D4               	movwf	??___fttol^(0+128)
  8136  14DF  0854               	movf	??___fttol^(0+128),w
  8137  14E0  07DD               	addwf	___fttol@exp1^(0+128),f
  8138  14E1  1903               	btfsc	3,2
  8139  14E2  2CFD               	goto	l6066
  8140  14E3  2CD6               	goto	l6054
  8141  14E4                     l6056:	
  8142  14E4  3018               	movlw	24
  8143  14E5  025D               	subwf	___fttol@exp1^(0+128),w
  8144  14E6  1C03               	skipc
  8145  14E7  2CFA               	goto	l6064
  8146  14E8  3000               	movlw	0
  8147  14E9  00D3               	movwf	(?___fttol+3)^(0+128)
  8148  14EA  3000               	movlw	0
  8149  14EB  00D2               	movwf	(?___fttol+2)^(0+128)
  8150  14EC  3000               	movlw	0
  8151  14ED  00D1               	movwf	(?___fttol+1)^(0+128)
  8152  14EE  3000               	movlw	0
  8153  14EF  00D0               	movwf	?___fttol^(0+128)
  8154  14F0  0008               	return
  8155  14F1                     l6062:	
  8156  14F1  3001               	movlw	1
  8157  14F2                     u6485:	
  8158  14F2  35D9               	lslf	___fttol@lval^(0+128),f
  8159  14F3  0DDA               	rlf	(___fttol@lval+1)^(0+128),f
  8160  14F4  0DDB               	rlf	(___fttol@lval+2)^(0+128),f
  8161  14F5  0DDC               	rlf	(___fttol@lval+3)^(0+128),f
  8162  14F6  0B89               	decfsz	9,f
  8163  14F7  2CF2               	goto	u6485
  8164  14F8  3001               	movlw	1
  8165  14F9  02DD               	subwf	___fttol@exp1^(0+128),f
  8166  14FA                     l6064:	
  8167  14FA  08DD               	movf	___fttol@exp1^(0+128),f
  8168  14FB  1D03               	skipz
  8169  14FC  2CF1               	goto	l6062
  8170  14FD                     l6066:	
  8171  14FD  0858               	movf	___fttol@sign1^(0+128),w
  8172  14FE  1903               	btfsc	3,2
  8173  14FF  2D0B               	goto	l6070
  8174  1500  09D9               	comf	___fttol@lval^(0+128),f
  8175  1501  09DA               	comf	(___fttol@lval+1)^(0+128),f
  8176  1502  09DB               	comf	(___fttol@lval+2)^(0+128),f
  8177  1503  09DC               	comf	(___fttol@lval+3)^(0+128),f
  8178  1504  0AD9               	incf	___fttol@lval^(0+128),f
  8179  1505  1903               	skipnz
  8180  1506  0ADA               	incf	(___fttol@lval+1)^(0+128),f
  8181  1507  1903               	skipnz
  8182  1508  0ADB               	incf	(___fttol@lval+2)^(0+128),f
  8183  1509  1903               	skipnz
  8184  150A  0ADC               	incf	(___fttol@lval+3)^(0+128),f
  8185  150B                     l6070:	
  8186  150B  085C               	movf	(___fttol@lval+3)^(0+128),w
  8187  150C  00D3               	movwf	(?___fttol+3)^(0+128)
  8188  150D  085B               	movf	(___fttol@lval+2)^(0+128),w
  8189  150E  00D2               	movwf	(?___fttol+2)^(0+128)
  8190  150F  085A               	movf	(___fttol@lval+1)^(0+128),w
  8191  1510  00D1               	movwf	(?___fttol+1)^(0+128)
  8192  1511  0859               	movf	___fttol@lval^(0+128),w
  8193  1512  00D0               	movwf	?___fttol^(0+128)
  8194  1513  0008               	return
  8195  1514                     __end_of___fttol:	
  8196                           
  8197                           	psect	text28
  8198  1A9D                     __ptext28:	
  8199 ;; *************** function ___ftneg *****************
  8200 ;; Defined at:
  8201 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  f1              3   16[BANK1 ] float 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  3   16[BANK1 ] float 
  8208 ;; Registers used:
  8209 ;;		wreg
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8215 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;Total ram usage:        3 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    4
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_UpdateFanLevel
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function ___ftneg
  8231  1A9D                     ___ftneg:	
  8232                           
  8233                           ;incstack = 0
  8234                           ; Regs used in ___ftneg: [wreg]
  8235  1A9D  0021               	movlb	1	; select bank1
  8236  1A9E  0832               	movf	(___ftneg@f1+2)^(0+128),w
  8237  1A9F  0431               	iorwf	(___ftneg@f1+1)^(0+128),w
  8238  1AA0  0430               	iorwf	___ftneg@f1^(0+128),w
  8239  1AA1  1903               	skipnz
  8240  1AA2  0008               	return
  8241  1AA3  3080               	movlw	128
  8242  1AA4  06B2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8243  1AA5  0008               	return
  8244  1AA6                     __end_of___ftneg:	
  8245                           
  8246                           	psect	text29
  8247  0C76                     __ptext29:	
  8248 ;; *************** function ___ftmul *****************
  8249 ;; Defined at:
  8250 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  f1              3    0[BANK1 ] float 
  8253 ;;  f2              3    3[BANK1 ] float 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  f3_as_produc    3   11[BANK1 ] unsigned um
  8256 ;;  sign            1   15[BANK1 ] unsigned char 
  8257 ;;  cntr            1   14[BANK1 ] unsigned char 
  8258 ;;  exp             1   10[BANK1 ] unsigned char 
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  3    0[BANK1 ] float 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0, pclath, cstack
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8268 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8270 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;Total ram usage:       16 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    5
  8275 ;; This function calls:
  8276 ;;		___ftpack
  8277 ;; This function is called by:
  8278 ;;		_UpdateFanLevel
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           
  8283                           ;psect for function ___ftmul
  8284  0C76                     ___ftmul:	
  8285                           
  8286                           ;incstack = 0
  8287                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8288  0C76  0021               	movlb	1	; select bank1
  8289  0C77  0820               	movf	___ftmul@f1^(0+128),w
  8290  0C78  00A6               	movwf	??___ftmul^(0+128)
  8291  0C79  0821               	movf	(___ftmul@f1+1)^(0+128),w
  8292  0C7A  00A7               	movwf	(??___ftmul^(0+128)+1)
  8293  0C7B  0822               	movf	(___ftmul@f1+2)^(0+128),w
  8294  0C7C  00A8               	movwf	(??___ftmul^(0+128)+2)
  8295  0C7D  1003               	clrc
  8296  0C7E  0D27               	rlf	(??___ftmul^(0+128)+1),w
  8297  0C7F  0D28               	rlf	(??___ftmul^(0+128)+2),w
  8298  0C80  00A9               	movwf	(??___ftmul+3)^(0+128)
  8299  0C81  0829               	movf	(??___ftmul+3)^(0+128),w
  8300  0C82  00AA               	movwf	___ftmul@exp^(0+128)
  8301  0C83  08AA               	movf	___ftmul@exp^(0+128),f
  8302  0C84  1D03               	skipz
  8303  0C85  2C8D               	goto	l5978
  8304  0C86  3000               	movlw	0
  8305  0C87  00A0               	movwf	?___ftmul^(0+128)
  8306  0C88  3000               	movlw	0
  8307  0C89  00A1               	movwf	(?___ftmul+1)^(0+128)
  8308  0C8A  3000               	movlw	0
  8309  0C8B  00A2               	movwf	(?___ftmul+2)^(0+128)
  8310  0C8C  0008               	return
  8311  0C8D                     l5978:	
  8312  0C8D  0823               	movf	___ftmul@f2^(0+128),w
  8313  0C8E  00A6               	movwf	??___ftmul^(0+128)
  8314  0C8F  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8315  0C90  00A7               	movwf	(??___ftmul^(0+128)+1)
  8316  0C91  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8317  0C92  00A8               	movwf	(??___ftmul^(0+128)+2)
  8318  0C93  1003               	clrc
  8319  0C94  0D27               	rlf	(??___ftmul^(0+128)+1),w
  8320  0C95  0D28               	rlf	(??___ftmul^(0+128)+2),w
  8321  0C96  00A9               	movwf	(??___ftmul+3)^(0+128)
  8322  0C97  0829               	movf	(??___ftmul+3)^(0+128),w
  8323  0C98  00AF               	movwf	___ftmul@sign^(0+128)
  8324  0C99  08AF               	movf	___ftmul@sign^(0+128),f
  8325  0C9A  1D03               	skipz
  8326  0C9B  2CA3               	goto	l5984
  8327  0C9C  3000               	movlw	0
  8328  0C9D  00A0               	movwf	?___ftmul^(0+128)
  8329  0C9E  3000               	movlw	0
  8330  0C9F  00A1               	movwf	(?___ftmul+1)^(0+128)
  8331  0CA0  3000               	movlw	0
  8332  0CA1  00A2               	movwf	(?___ftmul+2)^(0+128)
  8333  0CA2  0008               	return
  8334  0CA3                     l5984:	
  8335  0CA3  082F               	movf	___ftmul@sign^(0+128),w
  8336  0CA4  3E7B               	addlw	123
  8337  0CA5  00A6               	movwf	??___ftmul^(0+128)
  8338  0CA6  0826               	movf	??___ftmul^(0+128),w
  8339  0CA7  07AA               	addwf	___ftmul@exp^(0+128),f
  8340  0CA8  0820               	movf	___ftmul@f1^(0+128),w
  8341  0CA9  00A6               	movwf	??___ftmul^(0+128)
  8342  0CAA  0821               	movf	(___ftmul@f1+1)^(0+128),w
  8343  0CAB  00A7               	movwf	(??___ftmul^(0+128)+1)
  8344  0CAC  0822               	movf	(___ftmul@f1+2)^(0+128),w
  8345  0CAD  00A8               	movwf	(??___ftmul^(0+128)+2)
  8346  0CAE  3010               	movlw	16
  8347  0CAF                     u6305:	
  8348  0CAF  36A8               	lsrf	(??___ftmul^(0+128)+2),f
  8349  0CB0  0CA7               	rrf	(??___ftmul^(0+128)+1),f
  8350  0CB1  0CA6               	rrf	??___ftmul^(0+128),f
  8351  0CB2  0B89               	decfsz	9,f
  8352  0CB3  2CAF               	goto	u6305
  8353  0CB4  0826               	movf	??___ftmul^(0+128),w
  8354  0CB5  00A9               	movwf	(??___ftmul+3)^(0+128)
  8355  0CB6  0829               	movf	(??___ftmul+3)^(0+128),w
  8356  0CB7  00AF               	movwf	___ftmul@sign^(0+128)
  8357  0CB8  0823               	movf	___ftmul@f2^(0+128),w
  8358  0CB9  00A6               	movwf	??___ftmul^(0+128)
  8359  0CBA  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8360  0CBB  00A7               	movwf	(??___ftmul^(0+128)+1)
  8361  0CBC  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8362  0CBD  00A8               	movwf	(??___ftmul^(0+128)+2)
  8363  0CBE  3010               	movlw	16
  8364  0CBF                     u6315:	
  8365  0CBF  36A8               	lsrf	(??___ftmul^(0+128)+2),f
  8366  0CC0  0CA7               	rrf	(??___ftmul^(0+128)+1),f
  8367  0CC1  0CA6               	rrf	??___ftmul^(0+128),f
  8368  0CC2  0B89               	decfsz	9,f
  8369  0CC3  2CBF               	goto	u6315
  8370  0CC4  0826               	movf	??___ftmul^(0+128),w
  8371  0CC5  00A9               	movwf	(??___ftmul+3)^(0+128)
  8372  0CC6  0829               	movf	(??___ftmul+3)^(0+128),w
  8373  0CC7  06AF               	xorwf	___ftmul@sign^(0+128),f
  8374  0CC8  3080               	movlw	128
  8375  0CC9  00A6               	movwf	??___ftmul^(0+128)
  8376  0CCA  0826               	movf	??___ftmul^(0+128),w
  8377  0CCB  05AF               	andwf	___ftmul@sign^(0+128),f
  8378  0CCC  17A1               	bsf	(___ftmul@f1^(0+128)+1),7
  8379  0CCD  17A4               	bsf	(___ftmul@f2^(0+128)+1),7
  8380  0CCE  30FF               	movlw	255
  8381  0CCF  05A3               	andwf	___ftmul@f2^(0+128),f
  8382  0CD0  30FF               	movlw	255
  8383  0CD1  05A4               	andwf	(___ftmul@f2+1)^(0+128),f
  8384  0CD2  3000               	movlw	0
  8385  0CD3  05A5               	andwf	(___ftmul@f2+2)^(0+128),f
  8386  0CD4  3000               	movlw	0
  8387  0CD5  00AB               	movwf	___ftmul@f3_as_product^(0+128)
  8388  0CD6  3000               	movlw	0
  8389  0CD7  00AC               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8390  0CD8  3000               	movlw	0
  8391  0CD9  00AD               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8392  0CDA  3007               	movlw	7
  8393  0CDB  00A6               	movwf	??___ftmul^(0+128)
  8394  0CDC  0826               	movf	??___ftmul^(0+128),w
  8395  0CDD  00AE               	movwf	___ftmul@cntr^(0+128)
  8396  0CDE                     l5996:	
  8397  0CDE  1C20               	btfss	___ftmul@f1^(0+128),0
  8398  0CDF  2CE6               	goto	l6000
  8399  0CE0  0823               	movf	___ftmul@f2^(0+128),w
  8400  0CE1  07AB               	addwf	___ftmul@f3_as_product^(0+128),f
  8401  0CE2  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8402  0CE3  3DAC               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8403  0CE4  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8404  0CE5  3DAD               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8405  0CE6                     l6000:	
  8406  0CE6  3001               	movlw	1
  8407  0CE7                     u6335:	
  8408  0CE7  36A2               	lsrf	(___ftmul@f1+2)^(0+128),f
  8409  0CE8  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  8410  0CE9  0CA0               	rrf	___ftmul@f1^(0+128),f
  8411  0CEA  0B89               	decfsz	9,f
  8412  0CEB  2CE7               	goto	u6335
  8413  0CEC  3001               	movlw	1
  8414  0CED                     u6345:	
  8415  0CED  35A3               	lslf	___ftmul@f2^(0+128),f
  8416  0CEE  0DA4               	rlf	(___ftmul@f2+1)^(0+128),f
  8417  0CEF  0DA5               	rlf	(___ftmul@f2+2)^(0+128),f
  8418  0CF0  0B89               	decfsz	9,f
  8419  0CF1  2CED               	goto	u6345
  8420  0CF2  3001               	movlw	1
  8421  0CF3  02AE               	subwf	___ftmul@cntr^(0+128),f
  8422  0CF4  1D03               	btfss	3,2
  8423  0CF5  2CDE               	goto	l5996
  8424  0CF6  3009               	movlw	9
  8425  0CF7  00A6               	movwf	??___ftmul^(0+128)
  8426  0CF8  0826               	movf	??___ftmul^(0+128),w
  8427  0CF9  00AE               	movwf	___ftmul@cntr^(0+128)
  8428  0CFA                     l6008:	
  8429  0CFA  1C20               	btfss	___ftmul@f1^(0+128),0
  8430  0CFB  2D02               	goto	l6012
  8431  0CFC  0823               	movf	___ftmul@f2^(0+128),w
  8432  0CFD  07AB               	addwf	___ftmul@f3_as_product^(0+128),f
  8433  0CFE  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8434  0CFF  3DAC               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8435  0D00  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8436  0D01  3DAD               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8437  0D02                     l6012:	
  8438  0D02  3001               	movlw	1
  8439  0D03                     u6375:	
  8440  0D03  36A2               	lsrf	(___ftmul@f1+2)^(0+128),f
  8441  0D04  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  8442  0D05  0CA0               	rrf	___ftmul@f1^(0+128),f
  8443  0D06  0B89               	decfsz	9,f
  8444  0D07  2D03               	goto	u6375
  8445  0D08  3001               	movlw	1
  8446  0D09                     u6385:	
  8447  0D09  36AD               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8448  0D0A  0CAC               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8449  0D0B  0CAB               	rrf	___ftmul@f3_as_product^(0+128),f
  8450  0D0C  0B89               	decfsz	9,f
  8451  0D0D  2D09               	goto	u6385
  8452  0D0E  3001               	movlw	1
  8453  0D0F  02AE               	subwf	___ftmul@cntr^(0+128),f
  8454  0D10  1D03               	btfss	3,2
  8455  0D11  2CFA               	goto	l6008
  8456  0D12  082B               	movf	___ftmul@f3_as_product^(0+128),w
  8457  0D13  0020               	movlb	0	; select bank0
  8458  0D14  00D8               	movwf	?___ftpack
  8459  0D15  0021               	movlb	1	; select bank1
  8460  0D16  082C               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8461  0D17  0020               	movlb	0	; select bank0
  8462  0D18  00D9               	movwf	?___ftpack+1
  8463  0D19  0021               	movlb	1	; select bank1
  8464  0D1A  082D               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  8465  0D1B  0020               	movlb	0	; select bank0
  8466  0D1C  00DA               	movwf	?___ftpack+2
  8467  0D1D  0021               	movlb	1	; select bank1
  8468  0D1E  082A               	movf	___ftmul@exp^(0+128),w
  8469  0D1F  00A6               	movwf	??___ftmul^(0+128)
  8470  0D20  0826               	movf	??___ftmul^(0+128),w
  8471  0D21  0020               	movlb	0	; select bank0
  8472  0D22  00DB               	movwf	?___ftpack+3
  8473  0D23  0021               	movlb	1	; select bank1
  8474  0D24  082F               	movf	___ftmul@sign^(0+128),w
  8475  0D25  00A7               	movwf	(??___ftmul+1)^(0+128)
  8476  0D26  0827               	movf	(??___ftmul+1)^(0+128),w
  8477  0D27  0020               	movlb	0	; select bank0
  8478  0D28  00DC               	movwf	?___ftpack+4
  8479  0D29  3190  20F1         	fcall	___ftpack
  8480  0D2B  0020               	movlb	0	; select bank0
  8481  0D2C  0858               	movf	?___ftpack,w
  8482  0D2D  0021               	movlb	1	; select bank1
  8483  0D2E  00A0               	movwf	?___ftmul^(0+128)
  8484  0D2F  0020               	movlb	0	; select bank0
  8485  0D30  0859               	movf	?___ftpack+1,w
  8486  0D31  0021               	movlb	1	; select bank1
  8487  0D32  00A1               	movwf	(?___ftmul+1)^(0+128)
  8488  0D33  0020               	movlb	0	; select bank0
  8489  0D34  085A               	movf	?___ftpack+2,w
  8490  0D35  0021               	movlb	1	; select bank1
  8491  0D36  00A2               	movwf	(?___ftmul+2)^(0+128)
  8492  0D37  0008               	return
  8493  0D38                     __end_of___ftmul:	
  8494                           
  8495                           	psect	text30
  8496  1C98                     __ptext30:	
  8497 ;; *************** function ___awtoft *****************
  8498 ;; Defined at:
  8499 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awtoft.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;  c               2   16[BANK0 ] int 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  sign            1   21[BANK0 ] unsigned char 
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  3   16[BANK0 ] float 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0, pclath, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8513 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8517 ;;Total ram usage:        6 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    5
  8520 ;; This function calls:
  8521 ;;		___ftpack
  8522 ;; This function is called by:
  8523 ;;		_UpdateFanLevel
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526                           
  8527                           
  8528                           ;psect for function ___awtoft
  8529  1C98                     ___awtoft:	
  8530                           
  8531                           ;incstack = 0
  8532                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8533  1C98  0020               	movlb	0	; select bank0
  8534  1C99  01E5               	clrf	___awtoft@sign
  8535  1C9A  1FE1               	btfss	___awtoft@c+1,7
  8536  1C9B  2CA3               	goto	l5838
  8537  1C9C  09E0               	comf	___awtoft@c,f
  8538  1C9D  09E1               	comf	___awtoft@c+1,f
  8539  1C9E  0AE0               	incf	___awtoft@c,f
  8540  1C9F  1903               	skipnz
  8541  1CA0  0AE1               	incf	___awtoft@c+1,f
  8542  1CA1  01E5               	clrf	___awtoft@sign
  8543  1CA2  0AE5               	incf	___awtoft@sign,f
  8544  1CA3                     l5838:	
  8545  1CA3  0860               	movf	___awtoft@c,w
  8546  1CA4  00D8               	movwf	?___ftpack
  8547  1CA5  0861               	movf	___awtoft@c+1,w
  8548  1CA6  00D9               	movwf	?___ftpack+1
  8549  1CA7  01DA               	clrf	?___ftpack+2
  8550  1CA8  308E               	movlw	142
  8551  1CA9  00E3               	movwf	??___awtoft
  8552  1CAA  0863               	movf	??___awtoft,w
  8553  1CAB  00DB               	movwf	?___ftpack+3
  8554  1CAC  0865               	movf	___awtoft@sign,w
  8555  1CAD  00E4               	movwf	??___awtoft+1
  8556  1CAE  0864               	movf	??___awtoft+1,w
  8557  1CAF  00DC               	movwf	?___ftpack+4
  8558  1CB0  3190  20F1         	fcall	___ftpack
  8559  1CB2  0020               	movlb	0	; select bank0
  8560  1CB3  0858               	movf	?___ftpack,w
  8561  1CB4  00E0               	movwf	?___awtoft
  8562  1CB5  0859               	movf	?___ftpack+1,w
  8563  1CB6  00E1               	movwf	?___awtoft+1
  8564  1CB7  085A               	movf	?___ftpack+2,w
  8565  1CB8  00E2               	movwf	?___awtoft+2
  8566  1CB9  0008               	return
  8567  1CBA                     __end_of___awtoft:	
  8568                           
  8569                           	psect	text31
  8570  0E05                     __ptext31:	
  8571 ;; *************** function _USBDeviceTasks *****************
  8572 ;; Defined at:
  8573 ;;		line 669 in file "../USB/usb_device.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  i               1   20[BANK1 ] unsigned char 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;		None               void
  8580 ;; Registers used:
  8581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;Total ram usage:        3 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:   12
  8594 ;; This function calls:
  8595 ;;		_USBDeviceInit
  8596 ;;		_USBWakeFromSuspend
  8597 ;;		_USBSuspend
  8598 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8599 ;;		_USBCtrlEPAllowStatusStage
  8600 ;;		_USBStallHandler
  8601 ;;		_USBCtrlEPService
  8602 ;; This function is called by:
  8603 ;;		_main
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function _USBDeviceTasks
  8609  0E05                     _USBDeviceTasks:	
  8610                           
  8611                           ;usb_device.c: 735: }
  8612                           ;usb_device.c: 757: if(USBDeviceState == DETACHED_STATE)
  8613                           
  8614                           ;usb_device.c: 734: return;
  8615                           
  8616                           ;usb_device.c: 733: PIR2bits.USBIF = 0;;
  8617                           
  8618                           ;usb_device.c: 705: USBDeviceState = DETACHED_STATE;
  8619                           
  8620                           ;usb_device.c: 702: UIE = 0;
  8621                           
  8622                           ;usb_device.c: 697: {
  8623                           ;usb_device.c: 699: UCON = 0;
  8624                           
  8625                           ;usb_device.c: 670: BYTE i;
  8626                           ;usb_device.c: 696: if (1 != 1)
  8627                           
  8628                           ;incstack = 0
  8629                           ; Regs used in _USBDeviceTasks: [allreg]
  8630  0E05  0021               	movlb	1	; select bank1
  8631  0E06  08EE               	movf	_USBDeviceState^(0+128),f
  8632  0E07  1D03               	skipz
  8633  0E08  2E19               	goto	l6398
  8634                           
  8635                           ;usb_device.c: 758: {
  8636                           ;usb_device.c: 760: UCON = 0;
  8637  0E09  003D               	movlb	29	; select bank29
  8638  0E0A  018E               	clrf	14	;volatile
  8639                           
  8640                           ;usb_device.c: 763: UIE = 0;
  8641  0E0B  0192               	clrf	18	;volatile
  8642                           
  8643                           ;usb_device.c: 767: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8644  0E0C  3016               	movlw	22
  8645  0E0D  0091               	movwf	17	;volatile
  8646  0E0E  309F               	movlw	159
  8647  0E0F  0097               	movwf	23	;volatile
  8648  0E10  307B               	movlw	123
  8649  0E11  0092               	movwf	18	;volatile
  8650  0E12                     l140:	
  8651                           ;usb_device.c: 770: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  8652                           
  8653  0E12  198E               	btfsc	14,3	;volatile
  8654  0E13  2E16               	goto	l142
  8655  0E14  158E               	bsf	14,3	;volatile
  8656  0E15  2E12               	goto	l140
  8657  0E16                     l142:	
  8658                           
  8659                           ;usb_device.c: 773: USBDeviceState = ATTACHED_STATE;
  8660  0E16  0021               	movlb	1	; select bank1
  8661  0E17  01EE               	clrf	_USBDeviceState^(0+128)
  8662  0E18  0AEE               	incf	_USBDeviceState^(0+128),f
  8663  0E19                     l6398:	
  8664                           
  8665                           ;usb_device.c: 778: }
  8666                           ;usb_device.c: 781: if(USBDeviceState == ATTACHED_STATE)
  8667  0E19  086E               	movf	_USBDeviceState^(0+128),w
  8668  0E1A  3A01               	xorlw	1
  8669  0E1B  1D03               	skipz
  8670  0E1C  2E29               	goto	l6410
  8671                           
  8672                           ;usb_device.c: 782: {
  8673                           ;usb_device.c: 792: if(!UCONbits.SE0)
  8674  0E1D  003D               	movlb	29	; select bank29
  8675  0E1E  1A8E               	btfsc	14,5	;volatile
  8676  0E1F  2E29               	goto	l6410
  8677                           
  8678                           ;usb_device.c: 793: {
  8679                           ;usb_device.c: 794: UIR = 0;;
  8680  0E20  0190               	clrf	16	;volatile
  8681                           
  8682                           ;usb_device.c: 796: UIE=0;
  8683  0E21  0192               	clrf	18	;volatile
  8684                           
  8685                           ;usb_device.c: 798: UIEbits.URSTIE = 1;
  8686  0E22  1412               	bsf	18,0	;volatile
  8687                           
  8688                           ;usb_device.c: 799: UIEbits.IDLEIE = 1;
  8689  0E23  1612               	bsf	18,4	;volatile
  8690                           
  8691                           ;usb_device.c: 800: USBDeviceState = POWERED_STATE;
  8692  0E24  3002               	movlw	2
  8693  0E25  0021               	movlb	1	; select bank1
  8694  0E26  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8695  0E27  0832               	movf	??_USBDeviceTasks^(0+128),w
  8696  0E28  00EE               	movwf	_USBDeviceState^(0+128)
  8697  0E29                     l6410:	
  8698                           
  8699                           ;usb_device.c: 801: }
  8700                           ;usb_device.c: 802: }
  8701                           ;usb_device.c: 818: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  8702  0E29  003D               	movlb	29	; select bank29
  8703  0E2A  1910               	btfsc	16,2	;volatile
  8704  0E2B  1D12               	btfss	18,2	;volatile
  8705  0E2C  2E36               	goto	l6418
  8706                           
  8707                           ;usb_device.c: 819: {
  8708                           ;usb_device.c: 820: (UIR &= 0xFB);
  8709  0E2D  30FB               	movlw	251
  8710  0E2E  0021               	movlb	1	; select bank1
  8711  0E2F  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8712  0E30  0832               	movf	??_USBDeviceTasks^(0+128),w
  8713  0E31  003D               	movlb	29	; select bank29
  8714  0E32  0590               	andwf	16,f	;volatile
  8715                           
  8716                           ;usb_device.c: 824: USBWakeFromSuspend();
  8717  0E33  319B  236B  318E   	fcall	_USBWakeFromSuspend
  8718  0E36                     l6418:	
  8719                           
  8720                           ;usb_device.c: 826: }
  8721                           ;usb_device.c: 831: if(UCONbits.SUSPND==1)
  8722  0E36  003D               	movlb	29	; select bank29
  8723  0E37  1C8E               	btfss	14,1	;volatile
  8724  0E38  2E3C               	goto	l146
  8725                           
  8726                           ;usb_device.c: 832: {
  8727                           ;usb_device.c: 833: PIR2bits.USBIF = 0;;
  8728  0E39  0020               	movlb	0	; select bank0
  8729  0E3A  1112               	bcf	18,2	;volatile
  8730                           
  8731                           ;usb_device.c: 834: return;
  8732  0E3B  0008               	return
  8733  0E3C                     l146:	
  8734                           
  8735                           ;usb_device.c: 835: }
  8736                           ;usb_device.c: 847: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8737  0E3C  1810               	btfsc	16,0	;volatile
  8738  0E3D  1C12               	btfss	18,0	;volatile
  8739  0E3E  2E4C               	goto	l6430
  8740                           
  8741                           ;usb_device.c: 848: {
  8742                           ;usb_device.c: 849: USBDeviceInit();
  8743  0E3F  3189  210A  318E   	fcall	_USBDeviceInit
  8744                           
  8745                           ;usb_device.c: 853: ;
  8746                           ;usb_device.c: 855: USBDeviceState = DEFAULT_STATE;
  8747  0E42  3004               	movlw	4
  8748  0E43  0021               	movlb	1	; select bank1
  8749  0E44  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8750  0E45  0832               	movf	??_USBDeviceTasks^(0+128),w
  8751  0E46  00EE               	movwf	_USBDeviceState^(0+128)
  8752                           
  8753                           ;usb_device.c: 865: (UIR &= 0xFE);
  8754  0E47  30FE               	movlw	254
  8755  0E48  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8756  0E49  0832               	movf	??_USBDeviceTasks^(0+128),w
  8757  0E4A  003D               	movlb	29	; select bank29
  8758  0E4B  0590               	andwf	16,f	;volatile
  8759  0E4C                     l6430:	
  8760                           
  8761                           ;usb_device.c: 866: }
  8762                           ;usb_device.c: 871: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8763  0E4C  1A10               	btfsc	16,4	;volatile
  8764  0E4D  1E12               	btfss	18,4	;volatile
  8765  0E4E  2E58               	goto	l6438
  8766                           
  8767                           ;usb_device.c: 872: {
  8768                           ;usb_device.c: 877: USBSuspend();
  8769  0E4F  319B  23A2  318E   	fcall	_USBSuspend
  8770                           
  8771                           ;usb_device.c: 880: (UIR &= 0xEF);
  8772  0E52  30EF               	movlw	239
  8773  0E53  0021               	movlb	1	; select bank1
  8774  0E54  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8775  0E55  0832               	movf	??_USBDeviceTasks^(0+128),w
  8776  0E56  003D               	movlb	29	; select bank29
  8777  0E57  0590               	andwf	16,f	;volatile
  8778  0E58                     l6438:	
  8779                           
  8780                           ;usb_device.c: 881: }
  8781                           ;usb_device.c: 883: if(UIRbits.SOFIF)
  8782  0E58  1F10               	btfss	16,6	;volatile
  8783  0E59  2E7E               	goto	l6454
  8784                           
  8785                           ;usb_device.c: 884: {
  8786                           ;usb_device.c: 885: if(UIEbits.SOFIE)
  8787  0E5A  1F12               	btfss	18,6	;volatile
  8788  0E5B  2E6C               	goto	l6444
  8789                           
  8790                           ;usb_device.c: 886: {
  8791                           ;usb_device.c: 887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8792  0E5C  3073               	movlw	115
  8793  0E5D  0021               	movlb	1	; select bank1
  8794  0E5E  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  8795  0E5F  3000               	movlw	0
  8796  0E60  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  8797  0E61  3000               	movlw	0
  8798  0E62  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  8799  0E63  3000               	movlw	0
  8800  0E64  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  8801  0E65  3001               	movlw	1
  8802  0E66  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  8803  0E67  3000               	movlw	0
  8804  0E68  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  8805  0E69  319D  25A4  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8806  0E6C                     l6444:	
  8807                           
  8808                           ;usb_device.c: 888: }
  8809                           ;usb_device.c: 889: (UIR &= 0xBF);
  8810  0E6C  30BF               	movlw	191
  8811  0E6D  0021               	movlb	1	; select bank1
  8812  0E6E  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8813  0E6F  0832               	movf	??_USBDeviceTasks^(0+128),w
  8814  0E70  003D               	movlb	29	; select bank29
  8815  0E71  0590               	andwf	16,f	;volatile
  8816                           
  8817                           ;usb_device.c: 914: if(USBStatusStageTimeoutCounter != 0u)
  8818  0E72  0022               	movlb	2	; select bank2
  8819  0E73  083E               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  8820  0E74  1903               	btfsc	3,2
  8821  0E75  2E78               	goto	l6450
  8822                           
  8823                           ;usb_device.c: 915: {
  8824                           ;usb_device.c: 916: USBStatusStageTimeoutCounter--;
  8825  0E76  3001               	movlw	1
  8826  0E77  02BE               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  8827  0E78                     l6450:	
  8828                           
  8829                           ;usb_device.c: 917: }
  8830                           ;usb_device.c: 923: if(USBStatusStageTimeoutCounter == 0)
  8831  0E78  08BE               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  8832  0E79  1D03               	skipz
  8833  0E7A  2E7E               	goto	l6454
  8834                           
  8835                           ;usb_device.c: 924: {
  8836                           ;usb_device.c: 925: USBCtrlEPAllowStatusStage();
  8837  0E7B  3191  21B5  318E   	fcall	_USBCtrlEPAllowStatusStage
  8838  0E7E                     l6454:	
  8839                           
  8840                           ;usb_device.c: 926: }
  8841                           ;usb_device.c: 928: }
  8842                           ;usb_device.c: 930: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8843  0E7E  003D               	movlb	29	; select bank29
  8844  0E7F  1A90               	btfsc	16,5	;volatile
  8845  0E80  1E92               	btfss	18,5	;volatile
  8846  0E81  2E85               	goto	l6460
  8847                           
  8848                           ;usb_device.c: 931: {
  8849                           ;usb_device.c: 932: USBStallHandler();
  8850  0E82  319C  2476  318E   	fcall	_USBStallHandler
  8851  0E85                     l6460:	
  8852                           
  8853                           ;usb_device.c: 933: }
  8854                           ;usb_device.c: 935: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8855  0E85  003D               	movlb	29	; select bank29
  8856  0E86  1890               	btfsc	16,1	;volatile
  8857  0E87  1C92               	btfss	18,1	;volatile
  8858  0E88  2E9B               	goto	l6468
  8859                           
  8860                           ;usb_device.c: 936: {
  8861                           ;usb_device.c: 937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8862  0E89  30FF               	movlw	255
  8863  0E8A  0021               	movlb	1	; select bank1
  8864  0E8B  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  8865  0E8C  307F               	movlw	127
  8866  0E8D  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  8867  0E8E  3000               	movlw	0
  8868  0E8F  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  8869  0E90  3000               	movlw	0
  8870  0E91  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  8871  0E92  3001               	movlw	1
  8872  0E93  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  8873  0E94  3000               	movlw	0
  8874  0E95  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  8875  0E96  319D  25A4  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8876                           
  8877                           ;usb_device.c: 938: UEIR = 0;;
  8878  0E99  003D               	movlb	29	; select bank29
  8879  0E9A  0193               	clrf	19	;volatile
  8880  0E9B                     l6468:	
  8881                           
  8882                           ;usb_device.c: 946: }
  8883                           ;usb_device.c: 953: if(USBDeviceState < DEFAULT_STATE)
  8884  0E9B  3004               	movlw	4
  8885  0E9C  0021               	movlb	1	; select bank1
  8886  0E9D  026E               	subwf	_USBDeviceState^(0+128),w
  8887  0E9E  1803               	skipnc
  8888  0E9F  2EA3               	goto	l155
  8889                           
  8890                           ;usb_device.c: 954: {
  8891                           ;usb_device.c: 955: PIR2bits.USBIF = 0;;
  8892  0EA0  0020               	movlb	0	; select bank0
  8893  0EA1  1112               	bcf	18,2	;volatile
  8894                           
  8895                           ;usb_device.c: 956: return;
  8896  0EA2  0008               	return
  8897  0EA3                     l155:	
  8898                           
  8899                           ;usb_device.c: 957: }
  8900                           ;usb_device.c: 962: if(UIEbits.TRNIE)
  8901  0EA3  003D               	movlb	29	; select bank29
  8902  0EA4  1D92               	btfss	18,3	;volatile
  8903  0EA5  2EF9               	goto	l156
  8904                           
  8905                           ;usb_device.c: 963: {
  8906                           ;usb_device.c: 964: for(i = 0; i < 4u; i++)
  8907  0EA6  0021               	movlb	1	; select bank1
  8908  0EA7  01B4               	clrf	USBDeviceTasks@i^(0+128)
  8909  0EA8  2EF2               	goto	L8
  8910  0EA9                     l6478:	
  8911                           
  8912                           ;usb_device.c: 967: {
  8913                           ;usb_device.c: 969: USTATcopy.Val = USTAT;
  8914  0EA9  080F               	movf	15,w	;volatile
  8915  0EAA  0021               	movlb	1	; select bank1
  8916  0EAB  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8917  0EAC  0832               	movf	??_USBDeviceTasks^(0+128),w
  8918  0EAD  00EF               	movwf	_USTATcopy^(0+128)
  8919                           
  8920                           ;usb_device.c: 970: endpoint_number = USTATcopy.endpoint_number;
  8921  0EAE  0C6F               	rrf	_USTATcopy^(0+128),w
  8922  0EAF  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8923  0EB0  0CB2               	rrf	??_USBDeviceTasks^(0+128),f
  8924  0EB1  0C32               	rrf	??_USBDeviceTasks^(0+128),w
  8925  0EB2  390F               	andlw	15
  8926  0EB3  00B3               	movwf	(??_USBDeviceTasks+1)^(0+128)
  8927  0EB4  0833               	movf	(??_USBDeviceTasks+1)^(0+128),w
  8928  0EB5  0022               	movlb	2	; select bank2
  8929  0EB6  00C1               	movwf	_endpoint_number^(0+256)
  8930                           
  8931                           ;usb_device.c: 972: (UIR &= 0xF7);
  8932  0EB7  30F7               	movlw	247
  8933  0EB8  0021               	movlb	1	; select bank1
  8934  0EB9  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8935  0EBA  0832               	movf	??_USBDeviceTasks^(0+128),w
  8936  0EBB  003D               	movlb	29	; select bank29
  8937  0EBC  0590               	andwf	16,f	;volatile
  8938                           
  8939                           ;usb_device.c: 977: if(USTATcopy.direction == 0)
  8940  0EBD  0021               	movlb	1	; select bank1
  8941  0EBE  196F               	btfsc	_USTATcopy^(0+128),2
  8942  0EBF  2EC4               	goto	l6488
  8943                           
  8944                           ;usb_device.c: 978: {
  8945                           ;usb_device.c: 979: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8946  0EC0  0022               	movlb	2	; select bank2
  8947  0EC1  0841               	movf	_endpoint_number^(0+256),w
  8948  0EC2  3E26               	addlw	_ep_data_out& (0+255)
  8949  0EC3  2EC7               	goto	L7
  8950  0EC4                     l6488:	
  8951                           ;usb_device.c: 980: }
  8952                           
  8953                           
  8954                           ;usb_device.c: 981: else
  8955                           ;usb_device.c: 982: {
  8956                           ;usb_device.c: 983: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8957  0EC4  0022               	movlb	2	; select bank2
  8958  0EC5  0841               	movf	_endpoint_number^(0+256),w
  8959  0EC6  3E24               	addlw	_ep_data_in& (0+255)
  8960  0EC7                     L7:	
  8961  0EC7  0086               	movwf	6
  8962  0EC8  3001               	movlw	1	; select bank2/3
  8963  0EC9  0087               	movwf	7
  8964  0ECA  0801               	movf	1,w
  8965  0ECB  3901               	andlw	1
  8966  0ECC  0021               	movlb	1	; select bank1
  8967  0ECD  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8968  0ECE  3001               	movlw	1
  8969  0ECF  06B2               	xorwf	??_USBDeviceTasks^(0+128),f
  8970  0ED0  0801               	movf	1,w
  8971  0ED1  0632               	xorwf	??_USBDeviceTasks^(0+128),w
  8972  0ED2  39FE               	andlw	-2
  8973  0ED3  0632               	xorwf	??_USBDeviceTasks^(0+128),w
  8974  0ED4  0081               	movwf	1
  8975                           
  8976                           ;usb_device.c: 984: }
  8977                           ;usb_device.c: 989: if(endpoint_number == 0)
  8978  0ED5  0022               	movlb	2	; select bank2
  8979  0ED6  08C1               	movf	_endpoint_number^(0+256),f
  8980  0ED7  1D03               	skipz
  8981  0ED8  2EDD               	goto	l6494
  8982                           
  8983                           ;usb_device.c: 990: {
  8984                           ;usb_device.c: 991: USBCtrlEPService();
  8985  0ED9  3193  230C  318E   	fcall	_USBCtrlEPService
  8986                           
  8987                           ;usb_device.c: 992: }
  8988  0EDC  2EED               	goto	l6496
  8989  0EDD                     l6494:	
  8990                           
  8991                           ;usb_device.c: 993: else
  8992                           ;usb_device.c: 994: {
  8993                           ;usb_device.c: 995: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  8994  0EDD  3072               	movlw	114
  8995  0EDE  0021               	movlb	1	; select bank1
  8996  0EDF  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  8997  0EE0  3000               	movlw	0
  8998  0EE1  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  8999  0EE2  30EF               	movlw	low _USTATcopy
  9000  0EE3  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9001  0EE4  3000               	movlw	high _USTATcopy
  9002  0EE5  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9003  0EE6  3000               	movlw	0
  9004  0EE7  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9005  0EE8  3000               	movlw	0
  9006  0EE9  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9007  0EEA  319D  25A4  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9008  0EED                     l6496:	
  9009                           ;usb_device.c: 998: else
  9010                           ;usb_device.c: 999: break;
  9011                           
  9012                           ;usb_device.c: 996: }
  9013                           ;usb_device.c: 997: }
  9014                           
  9015  0EED  3001               	movlw	1
  9016  0EEE  0021               	movlb	1	; select bank1
  9017  0EEF  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9018  0EF0  0832               	movf	??_USBDeviceTasks^(0+128),w
  9019  0EF1  07B4               	addwf	USBDeviceTasks@i^(0+128),f
  9020  0EF2                     L8:	
  9021  0EF2  3004               	movlw	4
  9022  0EF3  0234               	subwf	USBDeviceTasks@i^(0+128),w
  9023  0EF4  1803               	btfsc	3,0
  9024  0EF5  2EF9               	goto	l156
  9025                           
  9026                           ;usb_device.c: 965: {
  9027                           ;usb_device.c: 966: if(UIRbits.TRNIF)
  9028  0EF6  003D               	movlb	29	; select bank29
  9029  0EF7  1990               	btfsc	16,3	;volatile
  9030  0EF8  2EA9               	goto	l6478
  9031  0EF9                     l156:	
  9032                           
  9033                           ;usb_device.c: 1000: }
  9034                           ;usb_device.c: 1001: }
  9035                           ;usb_device.c: 1003: PIR2bits.USBIF = 0;;
  9036  0EF9  0020               	movlb	0	; select bank0
  9037  0EFA  1112               	bcf	18,2	;volatile
  9038  0EFB  0008               	return
  9039  0EFC                     __end_of_USBDeviceTasks:	
  9040                           
  9041                           	psect	text32
  9042  130C                     __ptext32:	
  9043 ;; *************** function _USBCtrlEPService *****************
  9044 ;; Defined at:
  9045 ;;		line 2523 in file "../USB/usb_device.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;		None
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  setup_cnt       1   17[BANK1 ] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;		None               void
  9052 ;; Registers used:
  9053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;Total ram usage:        4 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:   11
  9066 ;; This function calls:
  9067 ;;		_USBCtrlTrfSetupHandler
  9068 ;;		_USBCtrlTrfOutHandler
  9069 ;;		_USBCtrlTrfInHandler
  9070 ;; This function is called by:
  9071 ;;		_USBDeviceTasks
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           
  9076                           ;psect for function _USBCtrlEPService
  9077  130C                     _USBCtrlEPService:	
  9078                           
  9079                           ;usb_device.c: 2528: USBStatusStageTimeoutCounter = (BYTE)40;
  9080                           
  9081                           ;incstack = 0
  9082                           ; Regs used in _USBCtrlEPService: [allreg]
  9083  130C  3028               	movlw	40
  9084  130D  0021               	movlb	1	; select bank1
  9085  130E  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9086  130F  082E               	movf	??_USBCtrlEPService^(0+128),w
  9087  1310  0022               	movlb	2	; select bank2
  9088  1311  00BE               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  9089                           
  9090                           ;usb_device.c: 2532: if((USTATcopy.Val & ~0x02) == 0x00)
  9091  1312  0021               	movlb	1	; select bank1
  9092  1313  086F               	movf	_USTATcopy^(0+128),w
  9093  1314  39FD               	andlw	253
  9094  1315  1D03               	btfss	3,2
  9095  1316  2B7D               	goto	l6608
  9096                           
  9097                           ;usb_device.c: 2533: {
  9098                           ;usb_device.c: 2536: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9099  1317  366F               	lsrf	_USTATcopy^(0+128),w
  9100  1318  393F               	andlw	63
  9101  1319  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9102  131A  3001               	movlw	1
  9103  131B                     u7225:	
  9104  131B  35AE               	lslf	??_USBCtrlEPService^(0+128),f
  9105  131C  3EFF               	addlw	-1
  9106  131D  1D03               	skipz
  9107  131E  2B1B               	goto	u7225
  9108  131F  352E               	lslf	??_USBCtrlEPService^(0+128),w
  9109  1320  3E20               	addlw	32
  9110  1321  00AF               	movwf	(??_USBCtrlEPService+1)^(0+128)
  9111  1322  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9112  1323  0020               	movlb	0	; select bank0
  9113  1324  00ED               	movwf	_pBDTEntryEP0OutCurrent
  9114                           
  9115                           ;usb_device.c: 2544: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9116  1325  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9117  1326  0021               	movlb	1	; select bank1
  9118  1327  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9119  1328  082E               	movf	??_USBCtrlEPService^(0+128),w
  9120  1329  0020               	movlb	0	; select bank0
  9121  132A  00EE               	movwf	_pBDTEntryEP0OutNext
  9122                           
  9123                           ;usb_device.c: 2546: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9124  132B  3004               	movlw	4
  9125  132C  0021               	movlb	1	; select bank1
  9126  132D  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9127  132E  082E               	movf	??_USBCtrlEPService^(0+128),w
  9128  132F  0020               	movlb	0	; select bank0
  9129  1330  06EE               	xorwf	_pBDTEntryEP0OutNext,f
  9130                           
  9131                           ;usb_device.c: 2549: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9132  1331  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9133  1332  0086               	movwf	6
  9134  1333  0187               	clrf	7
  9135  1334  0C01               	rrf	1,w
  9136  1335  0C89               	rrf	9,f
  9137  1336  390F               	andlw	15
  9138  1337  3A0D               	xorlw	13
  9139  1338  1D03               	skipz
  9140  1339  2B7A               	goto	l6606
  9141                           
  9142                           ;usb_device.c: 2550: {
  9143                           ;usb_device.c: 2551: unsigned char setup_cnt;
  9144                           ;usb_device.c: 2557: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  9145  133A  0021               	movlb	1	; select bank1
  9146  133B  01B1               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  9147  133C  3008               	movlw	8
  9148  133D  0231               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9149  133E  1803               	btfsc	3,0
  9150  133F  2B69               	goto	l6602
  9151  1340                     l6596:	
  9152                           
  9153                           ;usb_device.c: 2558: {
  9154                           ;usb_device.c: 2559: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  9155  1340  0020               	movlb	0	; select bank0
  9156  1341  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9157  1342  3E02               	addlw	2
  9158  1343  0086               	movwf	6
  9159  1344  0187               	clrf	7
  9160  1345  3F40               	moviw [0]fsr1
  9161  1346  0021               	movlb	1	; select bank1
  9162  1347  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9163  1348  3F41               	moviw [1]fsr1
  9164  1349  00AF               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9165  134A  082E               	movf	??_USBCtrlEPService^(0+128),w
  9166  134B  0086               	movwf	6
  9167  134C  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9168  134D  0087               	movwf	7
  9169  134E  0801               	movf	1,w
  9170  134F  00B0               	movwf	(??_USBCtrlEPService+2)^(0+128)
  9171  1350  0831               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  9172  1351  3E40               	addlw	64
  9173  1352  0086               	movwf	6
  9174  1353  0187               	clrf	7
  9175  1354  0830               	movf	(??_USBCtrlEPService+2)^(0+128),w
  9176  1355  0081               	movwf	1
  9177                           
  9178                           ;usb_device.c: 2560: pBDTEntryEP0OutCurrent->ADR++;
  9179  1356  0020               	movlb	0	; select bank0
  9180  1357  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9181  1358  3E02               	addlw	2
  9182  1359  0086               	movwf	6
  9183  135A  0187               	clrf	7
  9184  135B  3001               	movlw	1
  9185  135C  0781               	addwf	1,f
  9186  135D  3141               	addfsr 1,1
  9187  135E  1803               	skipnc
  9188  135F  0A81               	incf	1,f
  9189  1360  3001               	movlw	1
  9190  1361  0021               	movlb	1	; select bank1
  9191  1362  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9192  1363  082E               	movf	??_USBCtrlEPService^(0+128),w
  9193  1364  07B1               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  9194  1365  3008               	movlw	8
  9195  1366  0231               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9196  1367  1C03               	skipc
  9197  1368  2B40               	goto	l6596
  9198  1369                     l6602:	
  9199                           
  9200                           ;usb_device.c: 2561: }
  9201                           ;usb_device.c: 2562: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9202  1369  3040               	movlw	64
  9203  136A  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9204  136B  3000               	movlw	0
  9205  136C  00AF               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9206  136D  0020               	movlb	0	; select bank0
  9207  136E  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9208  136F  3E02               	addlw	2
  9209  1370  0086               	movwf	6
  9210  1371  0187               	clrf	7
  9211  1372  0021               	movlb	1	; select bank1
  9212  1373  082E               	movf	??_USBCtrlEPService^(0+128),w
  9213  1374  3FC0               	movwi [0]fsr1
  9214  1375  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9215  1376  3FC1               	movwi [1]fsr1
  9216                           
  9217                           ;usb_device.c: 2565: USBCtrlTrfSetupHandler();
  9218  1377  319F  2709         	fcall	_USBCtrlTrfSetupHandler
  9219                           
  9220                           ;usb_device.c: 2566: }
  9221  1379  0008               	return
  9222  137A                     l6606:	
  9223                           
  9224                           ;usb_device.c: 2567: else
  9225                           ;usb_device.c: 2568: {
  9226                           ;usb_device.c: 2570: USBCtrlTrfOutHandler();
  9227  137A  319D  2509         	fcall	_USBCtrlTrfOutHandler
  9228                           
  9229                           ;usb_device.c: 2571: }
  9230                           ;usb_device.c: 2572: }
  9231  137C  0008               	return
  9232  137D                     l6608:	
  9233                           
  9234                           ;usb_device.c: 2573: else if((USTATcopy.Val & ~0x02) == 0x04)
  9235  137D  30FD               	movlw	253
  9236  137E  0021               	movlb	1	; select bank1
  9237  137F  056F               	andwf	_USTATcopy^(0+128),w
  9238  1380  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9239  1381  082E               	movf	??_USBCtrlEPService^(0+128),w
  9240  1382  3A04               	xorlw	4
  9241  1383  1D03               	skipz
  9242  1384  0008               	return
  9243                           
  9244                           ;usb_device.c: 2574: {
  9245                           ;usb_device.c: 2577: USBCtrlTrfInHandler();
  9246  1385  3191  2152         	fcall	_USBCtrlTrfInHandler
  9247  1387  0008               	return
  9248  1388                     __end_of_USBCtrlEPService:	
  9249                           
  9250                           	psect	text33
  9251  1152                     __ptext33:	
  9252 ;; *************** function _USBCtrlTrfInHandler *****************
  9253 ;; Defined at:
  9254 ;;		line 2748 in file "../USB/usb_device.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;		None
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;  lastDTS         1   13[BANK0 ] unsigned char 
  9259 ;; Return value:  Size  Location     Type
  9260 ;;		None               void
  9261 ;; Registers used:
  9262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;Total ram usage:        3 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    5
  9275 ;; This function calls:
  9276 ;;		_USBCtrlTrfTxService
  9277 ;; This function is called by:
  9278 ;;		_USBCtrlEPService
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function _USBCtrlTrfInHandler
  9284  1152                     _USBCtrlTrfInHandler:	
  9285                           
  9286                           ;usb_device.c: 2749: BYTE lastDTS;
  9287                           ;usb_device.c: 2751: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9288                           
  9289                           ;incstack = 0
  9290                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9291  1152  0020               	movlb	0	; select bank0
  9292  1153  0868               	movf	_pBDTEntryIn,w
  9293  1154  0086               	movwf	6
  9294  1155  0187               	clrf	7
  9295  1156  3000               	movlw	0
  9296  1157  1B01               	btfsc	1,6
  9297  1158  3001               	movlw	1
  9298  1159  00DD               	movwf	USBCtrlTrfInHandler@lastDTS
  9299                           
  9300                           ;usb_device.c: 2754: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9301  115A  3004               	movlw	4
  9302  115B  00DB               	movwf	??_USBCtrlTrfInHandler
  9303  115C  085B               	movf	??_USBCtrlTrfInHandler,w
  9304  115D  06E8               	xorwf	_pBDTEntryIn,f
  9305                           
  9306                           ;usb_device.c: 2759: if(USBDeviceState == ADR_PENDING_STATE)
  9307  115E  0021               	movlb	1	; select bank1
  9308  115F  086E               	movf	_USBDeviceState^(0+128),w
  9309  1160  3A08               	xorlw	8
  9310  1161  1D03               	skipz
  9311  1162  2972               	goto	l315
  9312                           
  9313                           ;usb_device.c: 2760: {
  9314                           ;usb_device.c: 2761: UADDR = SetupPkt.bDevADR.Val;
  9315  1163  0020               	movlb	0	; select bank0
  9316  1164  0842               	movf	66,w	;volatile
  9317  1165  003D               	movlb	29	; select bank29
  9318  1166  0096               	movwf	22	;volatile
  9319                           
  9320                           ;usb_device.c: 2762: if(UADDR != 0u)
  9321  1167  0816               	movf	22,w	;volatile
  9322  1168  1903               	btfsc	3,2
  9323  1169  296C               	goto	l6972
  9324                           
  9325                           ;usb_device.c: 2763: {
  9326                           ;usb_device.c: 2764: USBDeviceState=ADDRESS_STATE;
  9327  116A  3010               	movlw	16
  9328  116B  296D               	goto	L9
  9329  116C                     l6972:	
  9330                           ;usb_device.c: 2765: }
  9331                           
  9332                           
  9333                           ;usb_device.c: 2766: else
  9334                           ;usb_device.c: 2767: {
  9335                           ;usb_device.c: 2768: USBDeviceState=DEFAULT_STATE;
  9336  116C  3004               	movlw	4
  9337  116D                     L9:	
  9338  116D  0020               	movlb	0	; select bank0
  9339  116E  00DB               	movwf	??_USBCtrlTrfInHandler
  9340  116F  085B               	movf	??_USBCtrlTrfInHandler,w
  9341  1170  0021               	movlb	1	; select bank1
  9342  1171  00EE               	movwf	_USBDeviceState^(0+128)
  9343  1172                     l315:	
  9344                           
  9345                           ;usb_device.c: 2769: }
  9346                           ;usb_device.c: 2770: }
  9347                           ;usb_device.c: 2773: if(controlTransferState == 1)
  9348  1172  0020               	movlb	0	; select bank0
  9349  1173  086C               	movf	_controlTransferState,w
  9350  1174  3A01               	xorlw	1
  9351  1175  1D03               	skipz
  9352  1176  29A8               	goto	l318
  9353                           
  9354                           ;usb_device.c: 2774: {
  9355                           ;usb_device.c: 2775: pBDTEntryIn[0]->ADR = (((WORD)(CtrlTrfData))& 0x7FFF);
  9356  1177  3048               	movlw	72
  9357  1178  00DB               	movwf	??_USBCtrlTrfInHandler
  9358  1179  3000               	movlw	0
  9359  117A  00DC               	movwf	??_USBCtrlTrfInHandler+1
  9360  117B  0868               	movf	_pBDTEntryIn,w
  9361  117C  3E02               	addlw	2
  9362  117D  0086               	movwf	6
  9363  117E  0187               	clrf	7
  9364  117F  085B               	movf	??_USBCtrlTrfInHandler,w
  9365  1180  3FC0               	movwi [0]fsr1
  9366  1181  085C               	movf	??_USBCtrlTrfInHandler+1,w
  9367  1182  3FC1               	movwi [1]fsr1
  9368                           
  9369                           ;usb_device.c: 2776: USBCtrlTrfTxService();
  9370  1183  3195  2514  3191   	fcall	_USBCtrlTrfTxService
  9371                           
  9372                           ;usb_device.c: 2782: if(shortPacketStatus == 2)
  9373  1186  0022               	movlb	2	; select bank2
  9374  1187  0846               	movf	_shortPacketStatus^(0+256),w
  9375  1188  3A02               	xorlw	2
  9376  1189  1D03               	skipz
  9377  118A  2994               	goto	l6982
  9378                           
  9379                           ;usb_device.c: 2783: {
  9380                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  9381  118B  3084               	movlw	132
  9382  118C  0020               	movlb	0	; select bank0
  9383  118D  00DB               	movwf	??_USBCtrlTrfInHandler
  9384  118E  0868               	movf	_pBDTEntryIn,w
  9385  118F  0086               	movwf	6
  9386  1190  0187               	clrf	7
  9387  1191  085B               	movf	??_USBCtrlTrfInHandler,w
  9388  1192  0081               	movwf	1
  9389                           
  9390                           ;usb_device.c: 2787: }
  9391  1193  0008               	return
  9392  1194                     l6982:	
  9393                           
  9394                           ;usb_device.c: 2788: else
  9395                           ;usb_device.c: 2789: {
  9396                           ;usb_device.c: 2790: if(lastDTS == 0)
  9397  1194  0020               	movlb	0	; select bank0
  9398  1195  08DD               	movf	USBCtrlTrfInHandler@lastDTS,f
  9399  1196  1D03               	skipz
  9400  1197  29A0               	goto	l6986
  9401                           
  9402                           ;usb_device.c: 2791: {
  9403                           ;usb_device.c: 2792: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9404  1198  30C8               	movlw	200
  9405  1199  00DB               	movwf	??_USBCtrlTrfInHandler
  9406  119A  0868               	movf	_pBDTEntryIn,w
  9407  119B  0086               	movwf	6
  9408  119C  0187               	clrf	7
  9409  119D  085B               	movf	??_USBCtrlTrfInHandler,w
  9410  119E  0081               	movwf	1
  9411                           
  9412                           ;usb_device.c: 2793: }
  9413  119F  0008               	return
  9414  11A0                     l6986:	
  9415                           
  9416                           ;usb_device.c: 2794: else
  9417                           ;usb_device.c: 2795: {
  9418                           ;usb_device.c: 2796: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9419  11A0  3088               	movlw	136
  9420  11A1  00DB               	movwf	??_USBCtrlTrfInHandler
  9421  11A2  0868               	movf	_pBDTEntryIn,w
  9422  11A3  0086               	movwf	6
  9423  11A4  0187               	clrf	7
  9424  11A5  085B               	movf	??_USBCtrlTrfInHandler,w
  9425  11A6  0081               	movwf	1
  9426                           
  9427                           ;usb_device.c: 2797: }
  9428                           ;usb_device.c: 2798: }
  9429                           ;usb_device.c: 2799: }
  9430  11A7  0008               	return
  9431  11A8                     l318:	
  9432                           
  9433                           ;usb_device.c: 2800: else
  9434                           ;usb_device.c: 2801: {
  9435                           ;usb_device.c: 2805: if(outPipes[0].info.bits.busy == 1)
  9436  11A8  0023               	movlb	3	; select bank3
  9437  11A9  1FA2               	btfss	(_outPipes^(0+384)+2),7
  9438  11AA  29B2               	goto	l6994
  9439                           
  9440                           ;usb_device.c: 2806: {
  9441                           ;usb_device.c: 2807: if(outPipes[0].pFunc != (0))
  9442  11AB  0825               	movf	(_outPipes+5)^(0+384),w
  9443  11AC  1903               	btfsc	3,2
  9444  11AD  29B1               	goto	l6992
  9445                           
  9446                           ;usb_device.c: 2808: {
  9447                           ;usb_device.c: 2809: outPipes[0].pFunc();
  9448  11AE  0825               	movf	(_outPipes+5)^(0+384),w
  9449  11AF  3191  2952         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9450  11B1                     l6992:	
  9451                           
  9452                           ;usb_device.c: 2810: }
  9453                           ;usb_device.c: 2811: outPipes[0].info.bits.busy = 0;
  9454  11B1  13A2               	bcf	(_outPipes^(0+384)+2),7
  9455  11B2                     l6994:	
  9456                           
  9457                           ;usb_device.c: 2812: }
  9458                           ;usb_device.c: 2814: controlTransferState = 0;
  9459  11B2  0020               	movlb	0	; select bank0
  9460  11B3  01EC               	clrf	_controlTransferState
  9461  11B4  0008               	return
  9462  11B5                     __end_of_USBCtrlTrfInHandler:	
  9463                           
  9464                           	psect	text34
  9465  1D09                     __ptext34:	
  9466 ;; *************** function _USBCtrlTrfOutHandler *****************
  9467 ;; Defined at:
  9468 ;;		line 2695 in file "../USB/usb_device.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;		None
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;		None
  9473 ;; Return value:  Size  Location     Type
  9474 ;;		None               void
  9475 ;; Registers used:
  9476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9485 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9486 ;;Total ram usage:        2 bytes
  9487 ;; Hardware stack levels used:    1
  9488 ;; Hardware stack levels required when called:    6
  9489 ;; This function calls:
  9490 ;;		_USBCtrlTrfRxService
  9491 ;; This function is called by:
  9492 ;;		_USBCtrlEPService
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           
  9497                           ;psect for function _USBCtrlTrfOutHandler
  9498  1D09                     _USBCtrlTrfOutHandler:	
  9499                           
  9500                           ;usb_device.c: 2696: if(controlTransferState == 2)
  9501                           
  9502                           ;incstack = 0
  9503                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9504  1D09  0020               	movlb	0	; select bank0
  9505  1D0A  086C               	movf	_controlTransferState,w
  9506  1D0B  3A02               	xorlw	2
  9507  1D0C  1D03               	skipz
  9508  1D0D  2D11               	goto	l6954
  9509                           
  9510                           ;usb_device.c: 2697: {
  9511                           ;usb_device.c: 2698: USBCtrlTrfRxService();
  9512  1D0E  3197  2758         	fcall	_USBCtrlTrfRxService
  9513                           
  9514                           ;usb_device.c: 2699: }
  9515  1D10  0008               	return
  9516  1D11                     l6954:	
  9517                           
  9518                           ;usb_device.c: 2700: else
  9519                           ;usb_device.c: 2701: {
  9520                           ;usb_device.c: 2704: controlTransferState = 0;
  9521  1D11  0020               	movlb	0	; select bank0
  9522  1D12  01EC               	clrf	_controlTransferState
  9523                           
  9524                           ;usb_device.c: 2711: if(BothEP0OutUOWNsSet == FALSE)
  9525  1D13  0022               	movlb	2	; select bank2
  9526  1D14  08AC               	movf	_BothEP0OutUOWNsSet^(0+256),f
  9527  1D15  1D03               	skipz
  9528  1D16  2D33               	goto	l6960
  9529                           
  9530                           ;usb_device.c: 2712: {
  9531                           ;usb_device.c: 2713: pBDTEntryEP0OutNext->CNT = 8;
  9532  1D17  3008               	movlw	8
  9533  1D18  0020               	movlb	0	; select bank0
  9534  1D19  00DE               	movwf	??_USBCtrlTrfOutHandler
  9535  1D1A  0A6E               	incf	_pBDTEntryEP0OutNext,w
  9536  1D1B  0086               	movwf	6
  9537  1D1C  0187               	clrf	7
  9538  1D1D  085E               	movf	??_USBCtrlTrfOutHandler,w
  9539  1D1E  0081               	movwf	1
  9540                           
  9541                           ;usb_device.c: 2714: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9542  1D1F  3040               	movlw	64
  9543  1D20  00DE               	movwf	??_USBCtrlTrfOutHandler
  9544  1D21  3000               	movlw	0
  9545  1D22  00DF               	movwf	??_USBCtrlTrfOutHandler+1
  9546  1D23  086E               	movf	_pBDTEntryEP0OutNext,w
  9547  1D24  3E02               	addlw	2
  9548  1D25  0086               	movwf	6
  9549  1D26  0187               	clrf	7
  9550  1D27  085E               	movf	??_USBCtrlTrfOutHandler,w
  9551  1D28  3FC0               	movwi [0]fsr1
  9552  1D29  085F               	movf	??_USBCtrlTrfOutHandler+1,w
  9553  1D2A  3FC1               	movwi [1]fsr1
  9554                           
  9555                           ;usb_device.c: 2715: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  9556  1D2B  308C               	movlw	140
  9557  1D2C  00DE               	movwf	??_USBCtrlTrfOutHandler
  9558  1D2D  086E               	movf	_pBDTEntryEP0OutNext,w
  9559  1D2E  0086               	movwf	6
  9560  1D2F  0187               	clrf	7
  9561  1D30  085E               	movf	??_USBCtrlTrfOutHandler,w
  9562  1D31  0081               	movwf	1
  9563                           
  9564                           ;usb_device.c: 2716: }
  9565  1D32  0008               	return
  9566  1D33                     l6960:	
  9567                           
  9568                           ;usb_device.c: 2717: else
  9569                           ;usb_device.c: 2718: {
  9570                           ;usb_device.c: 2719: BothEP0OutUOWNsSet = FALSE;
  9571  1D33  0022               	movlb	2	; select bank2
  9572  1D34  01AC               	clrf	_BothEP0OutUOWNsSet^(0+256)
  9573  1D35  0008               	return
  9574  1D36                     __end_of_USBCtrlTrfOutHandler:	
  9575                           
  9576                           	psect	text35
  9577  1758                     __ptext35:	
  9578 ;; *************** function _USBCtrlTrfRxService *****************
  9579 ;; Defined at:
  9580 ;;		line 2019 in file "../USB/usb_device.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;		None
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;  byteToRead      1   13[BANK0 ] unsigned char 
  9585 ;;  i               1   12[BANK0 ] unsigned char 
  9586 ;; Return value:  Size  Location     Type
  9587 ;;		None               void
  9588 ;; Registers used:
  9589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;Total ram usage:        4 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    5
  9602 ;; This function calls:
  9603 ;;		_USBCtrlEPAllowStatusStage
  9604 ;; This function is called by:
  9605 ;;		_USBCtrlTrfOutHandler
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           
  9610                           ;psect for function _USBCtrlTrfRxService
  9611  1758                     _USBCtrlTrfRxService:	
  9612                           
  9613                           ;usb_device.c: 2020: BYTE byteToRead;
  9614                           ;usb_device.c: 2021: BYTE i;
  9615                           ;usb_device.c: 2025: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9616                           
  9617                           ;incstack = 0
  9618                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9619  1758  0020               	movlb	0	; select bank0
  9620  1759  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9621  175A  0086               	movwf	6
  9622  175B  0187               	clrf	7
  9623  175C  3F41               	moviw [1]fsr1
  9624  175D  00DD               	movwf	USBCtrlTrfRxService@byteToRead
  9625                           
  9626                           ;usb_device.c: 2031: if(byteToRead > outPipes[0].wCount.Val)
  9627  175E  085D               	movf	USBCtrlTrfRxService@byteToRead,w
  9628  175F  00DA               	movwf	??_USBCtrlTrfRxService
  9629  1760  01DB               	clrf	??_USBCtrlTrfRxService+1
  9630  1761  085B               	movf	??_USBCtrlTrfRxService+1,w
  9631  1762  0023               	movlb	3	; select bank3
  9632  1763  0224               	subwf	((_outPipes+1)^(0+384)+3),w
  9633  1764  1D03               	skipz
  9634  1765  2F6A               	goto	u7515
  9635  1766  0020               	movlb	0	; select bank0
  9636  1767  085A               	movf	??_USBCtrlTrfRxService,w
  9637  1768  0023               	movlb	3	; select bank3
  9638  1769  0223               	subwf	(_outPipes^(0+384)+3),w
  9639  176A                     u7515:	
  9640  176A  1803               	skipnc
  9641  176B  2F71               	goto	l6778
  9642                           
  9643                           ;usb_device.c: 2032: {
  9644                           ;usb_device.c: 2033: byteToRead = outPipes[0].wCount.Val;
  9645  176C  0823               	movf	(_outPipes^(0+384)+3),w
  9646  176D  0020               	movlb	0	; select bank0
  9647  176E  00DA               	movwf	??_USBCtrlTrfRxService
  9648  176F  085A               	movf	??_USBCtrlTrfRxService,w
  9649  1770  00DD               	movwf	USBCtrlTrfRxService@byteToRead
  9650  1771                     l6778:	
  9651                           
  9652                           ;usb_device.c: 2034: }
  9653                           ;usb_device.c: 2036: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
  9654  1771  3003               	movlw	3
  9655  1772  3EA0               	addlw	_outPipes& (0+255)
  9656  1773  0086               	movwf	6
  9657  1774  3001               	movlw	1	; select bank3/4
  9658  1775  0087               	movwf	7
  9659  1776  0020               	movlb	0	; select bank0
  9660  1777  085D               	movf	USBCtrlTrfRxService@byteToRead,w
  9661  1778  00DA               	movwf	??_USBCtrlTrfRxService
  9662  1779  01DB               	clrf	??_USBCtrlTrfRxService+1
  9663  177A  09DA               	comf	??_USBCtrlTrfRxService,f
  9664  177B  09DB               	comf	??_USBCtrlTrfRxService+1,f
  9665  177C  0ADA               	incf	??_USBCtrlTrfRxService,f
  9666  177D  1903               	skipnz
  9667  177E  0ADB               	incf	??_USBCtrlTrfRxService+1,f
  9668  177F  3F40               	moviw [0]fsr1
  9669  1780  075A               	addwf	??_USBCtrlTrfRxService,w
  9670  1781  0023               	movlb	3	; select bank3
  9671  1782  00A3               	movwf	(_outPipes^(0+384)+3)
  9672  1783  3F41               	moviw [1]fsr1
  9673  1784  0020               	movlb	0	; select bank0
  9674  1785  3D5B               	addwfc	??_USBCtrlTrfRxService+1,w
  9675  1786  0023               	movlb	3	; select bank3
  9676  1787  00A4               	movwf	(_outPipes^(0+384)+4)
  9677                           
  9678                           ;usb_device.c: 2040: for(i=0;i<byteToRead;i++)
  9679  1788  0020               	movlb	0	; select bank0
  9680  1789  01DC               	clrf	USBCtrlTrfRxService@i
  9681  178A                     l6788:	
  9682  178A  085D               	movf	USBCtrlTrfRxService@byteToRead,w
  9683  178B  025C               	subwf	USBCtrlTrfRxService@i,w
  9684  178C  1803               	btfsc	3,0
  9685  178D  2FA6               	goto	l6790
  9686                           
  9687                           ;usb_device.c: 2041: {
  9688                           ;usb_device.c: 2042: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9689  178E  085C               	movf	USBCtrlTrfRxService@i,w
  9690  178F  3E48               	addlw	72
  9691  1790  0086               	movwf	6
  9692  1791  0187               	clrf	7
  9693  1792  0801               	movf	1,w
  9694  1793  00DA               	movwf	??_USBCtrlTrfRxService
  9695  1794  0023               	movlb	3	; select bank3
  9696  1795  0820               	movf	_outPipes^(0+384),w
  9697  1796  0086               	movwf	6
  9698  1797  0187               	clrf	7
  9699  1798  0020               	movlb	0	; select bank0
  9700  1799  085A               	movf	??_USBCtrlTrfRxService,w
  9701  179A  0081               	movwf	1
  9702  179B  3001               	movlw	1
  9703  179C  00DA               	movwf	??_USBCtrlTrfRxService
  9704  179D  085A               	movf	??_USBCtrlTrfRxService,w
  9705  179E  0023               	movlb	3	; select bank3
  9706  179F  07A0               	addwf	_outPipes^(0+384),f
  9707  17A0  3001               	movlw	1
  9708  17A1  0020               	movlb	0	; select bank0
  9709  17A2  00DA               	movwf	??_USBCtrlTrfRxService
  9710  17A3  085A               	movf	??_USBCtrlTrfRxService,w
  9711  17A4  07DC               	addwf	USBCtrlTrfRxService@i,f
  9712  17A5  2F8A               	goto	l6788
  9713  17A6                     l6790:	
  9714                           
  9715                           ;usb_device.c: 2043: }
  9716                           ;usb_device.c: 2047: if(outPipes[0].wCount.Val > 0)
  9717  17A6  3003               	movlw	3
  9718  17A7  3EA0               	addlw	_outPipes& (0+255)
  9719  17A8  0086               	movwf	6
  9720  17A9  3001               	movlw	1	; select bank3/4
  9721  17AA  0087               	movwf	7
  9722  17AB  0016               	moviw fsr1++
  9723  17AC  0401               	iorwf	1,w
  9724  17AD  1903               	skipnz
  9725  17AE  2FD7               	goto	l6798
  9726                           
  9727                           ;usb_device.c: 2048: {
  9728                           ;usb_device.c: 2049: pBDTEntryEP0OutNext->CNT = 8;
  9729  17AF  3008               	movlw	8
  9730  17B0  00DA               	movwf	??_USBCtrlTrfRxService
  9731  17B1  0A6E               	incf	_pBDTEntryEP0OutNext,w
  9732  17B2  0086               	movwf	6
  9733  17B3  0187               	clrf	7
  9734  17B4  085A               	movf	??_USBCtrlTrfRxService,w
  9735  17B5  0081               	movwf	1
  9736                           
  9737                           ;usb_device.c: 2050: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  9738  17B6  3048               	movlw	72
  9739  17B7  00DA               	movwf	??_USBCtrlTrfRxService
  9740  17B8  3000               	movlw	0
  9741  17B9  00DB               	movwf	??_USBCtrlTrfRxService+1
  9742  17BA  086E               	movf	_pBDTEntryEP0OutNext,w
  9743  17BB  3E02               	addlw	2
  9744  17BC  0086               	movwf	6
  9745  17BD  0187               	clrf	7
  9746  17BE  085A               	movf	??_USBCtrlTrfRxService,w
  9747  17BF  3FC0               	movwi [0]fsr1
  9748  17C0  085B               	movf	??_USBCtrlTrfRxService+1,w
  9749  17C1  3FC1               	movwi [1]fsr1
  9750                           
  9751                           ;usb_device.c: 2051: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9752  17C2  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9753  17C3  0086               	movwf	6
  9754  17C4  0187               	clrf	7
  9755  17C5  1B01               	btfsc	1,6
  9756  17C6  2FCF               	goto	l6796
  9757                           
  9758                           ;usb_device.c: 2052: {
  9759                           ;usb_device.c: 2053: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9760  17C7  30C8               	movlw	200
  9761  17C8  00DA               	movwf	??_USBCtrlTrfRxService
  9762  17C9  086E               	movf	_pBDTEntryEP0OutNext,w
  9763  17CA  0086               	movwf	6
  9764  17CB  0187               	clrf	7
  9765  17CC  085A               	movf	??_USBCtrlTrfRxService,w
  9766  17CD  0081               	movwf	1
  9767                           
  9768                           ;usb_device.c: 2054: }
  9769  17CE  0008               	return
  9770  17CF                     l6796:	
  9771                           
  9772                           ;usb_device.c: 2055: else
  9773                           ;usb_device.c: 2056: {
  9774                           ;usb_device.c: 2057: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9775  17CF  3088               	movlw	136
  9776  17D0  00DA               	movwf	??_USBCtrlTrfRxService
  9777  17D1  086E               	movf	_pBDTEntryEP0OutNext,w
  9778  17D2  0086               	movwf	6
  9779  17D3  0187               	clrf	7
  9780  17D4  085A               	movf	??_USBCtrlTrfRxService,w
  9781  17D5  0081               	movwf	1
  9782                           
  9783                           ;usb_device.c: 2058: }
  9784                           ;usb_device.c: 2059: }
  9785  17D6  0008               	return
  9786  17D7                     l6798:	
  9787                           
  9788                           ;usb_device.c: 2060: else
  9789                           ;usb_device.c: 2061: {
  9790                           ;usb_device.c: 2065: pBDTEntryEP0OutNext->CNT = 8;
  9791  17D7  3008               	movlw	8
  9792  17D8  00DA               	movwf	??_USBCtrlTrfRxService
  9793  17D9  0A6E               	incf	_pBDTEntryEP0OutNext,w
  9794  17DA  0086               	movwf	6
  9795  17DB  0187               	clrf	7
  9796  17DC  085A               	movf	??_USBCtrlTrfRxService,w
  9797  17DD  0081               	movwf	1
  9798                           
  9799                           ;usb_device.c: 2066: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9800  17DE  3040               	movlw	64
  9801  17DF  00DA               	movwf	??_USBCtrlTrfRxService
  9802  17E0  3000               	movlw	0
  9803  17E1  00DB               	movwf	??_USBCtrlTrfRxService+1
  9804  17E2  086E               	movf	_pBDTEntryEP0OutNext,w
  9805  17E3  3E02               	addlw	2
  9806  17E4  0086               	movwf	6
  9807  17E5  0187               	clrf	7
  9808  17E6  085A               	movf	??_USBCtrlTrfRxService,w
  9809  17E7  3FC0               	movwi [0]fsr1
  9810  17E8  085B               	movf	??_USBCtrlTrfRxService+1,w
  9811  17E9  3FC1               	movwi [1]fsr1
  9812                           
  9813                           ;usb_device.c: 2070: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  9814  17EA  3084               	movlw	132
  9815  17EB  00DA               	movwf	??_USBCtrlTrfRxService
  9816  17EC  086E               	movf	_pBDTEntryEP0OutNext,w
  9817  17ED  0086               	movwf	6
  9818  17EE  0187               	clrf	7
  9819  17EF  085A               	movf	??_USBCtrlTrfRxService,w
  9820  17F0  0081               	movwf	1
  9821                           
  9822                           ;usb_device.c: 2077: if(outPipes[0].pFunc != (0))
  9823  17F1  0023               	movlb	3	; select bank3
  9824  17F2  0825               	movf	(_outPipes+5)^(0+384),w
  9825  17F3  1903               	btfsc	3,2
  9826  17F4  2FF8               	goto	l6804
  9827                           
  9828                           ;usb_device.c: 2078: {
  9829                           ;usb_device.c: 2084: outPipes[0].pFunc();
  9830  17F5  0825               	movf	(_outPipes+5)^(0+384),w
  9831  17F6  3197  2F58         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9832  17F8                     l6804:	
  9833                           
  9834                           ;usb_device.c: 2089: }
  9835                           ;usb_device.c: 2090: outPipes[0].info.bits.busy = 0;
  9836  17F8  13A2               	bcf	(_outPipes^(0+384)+2),7
  9837                           
  9838                           ;usb_device.c: 2104: if(USBDeferStatusStagePacket == FALSE)
  9839  17F9  0020               	movlb	0	; select bank0
  9840  17FA  08EB               	movf	_USBDeferStatusStagePacket,f
  9841  17FB  1D03               	skipz
  9842  17FC  0008               	return
  9843                           
  9844                           ;usb_device.c: 2105: {
  9845                           ;usb_device.c: 2106: USBCtrlEPAllowStatusStage();
  9846  17FD  3191  21B5         	fcall	_USBCtrlEPAllowStatusStage
  9847  17FF  0008               	return
  9848  1800                     __end_of_USBCtrlTrfRxService:	
  9849                           
  9850                           	psect	text36
  9851  1F09                     __ptext36:	
  9852 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9853 ;; Defined at:
  9854 ;;		line 2623 in file "../USB/usb_device.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;		None
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;		None
  9859 ;; Return value:  Size  Location     Type
  9860 ;;		None               void
  9861 ;; Registers used:
  9862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;Total ram usage:        1 bytes
  9873 ;; Hardware stack levels used:    1
  9874 ;; Hardware stack levels required when called:   10
  9875 ;; This function calls:
  9876 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9877 ;;		_USBCtrlEPServiceComplete
  9878 ;;		_USBCheckStdRequest
  9879 ;; This function is called by:
  9880 ;;		_USBCtrlEPService
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           
  9885                           ;psect for function _USBCtrlTrfSetupHandler
  9886  1F09                     _USBCtrlTrfSetupHandler:	
  9887                           
  9888                           ;usb_device.c: 2627: shortPacketStatus = 0;
  9889                           
  9890                           ;incstack = 0
  9891                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  9892  1F09  0022               	movlb	2	; select bank2
  9893  1F0A  01C6               	clrf	_shortPacketStatus^(0+256)
  9894                           
  9895                           ;usb_device.c: 2628: USBDeferStatusStagePacket = FALSE;
  9896  1F0B  0020               	movlb	0	; select bank0
  9897  1F0C  01EB               	clrf	_USBDeferStatusStagePacket	;volatile
  9898                           
  9899                           ;usb_device.c: 2629: USBDeferINDataStagePackets = FALSE;
  9900  1F0D  0022               	movlb	2	; select bank2
  9901  1F0E  01B8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  9902                           
  9903                           ;usb_device.c: 2630: USBDeferOUTDataStagePackets = FALSE;
  9904  1F0F  01B9               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  9905                           
  9906                           ;usb_device.c: 2631: BothEP0OutUOWNsSet = FALSE;
  9907  1F10  01AC               	clrf	_BothEP0OutUOWNsSet^(0+256)
  9908                           
  9909                           ;usb_device.c: 2632: controlTransferState = 0;
  9910  1F11  0020               	movlb	0	; select bank0
  9911  1F12  01EC               	clrf	_controlTransferState
  9912                           
  9913                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9914  1F13  307F               	movlw	127
  9915  1F14  0021               	movlb	1	; select bank1
  9916  1F15  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9917  1F16  0020               	movlb	0	; select bank0
  9918  1F17  0868               	movf	_pBDTEntryIn,w
  9919  1F18  0086               	movwf	6
  9920  1F19  0187               	clrf	7
  9921  1F1A  0021               	movlb	1	; select bank1
  9922  1F1B  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9923  1F1C  0581               	andwf	1,f
  9924                           
  9925                           ;usb_device.c: 2642: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9926  1F1D  3004               	movlw	4
  9927  1F1E  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9928  1F1F  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9929  1F20  0020               	movlb	0	; select bank0
  9930  1F21  06E8               	xorwf	_pBDTEntryIn,f
  9931                           
  9932                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9933  1F22  307F               	movlw	127
  9934  1F23  0021               	movlb	1	; select bank1
  9935  1F24  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9936  1F25  0020               	movlb	0	; select bank0
  9937  1F26  0868               	movf	_pBDTEntryIn,w
  9938  1F27  0086               	movwf	6
  9939  1F28  0187               	clrf	7
  9940  1F29  0021               	movlb	1	; select bank1
  9941  1F2A  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9942  1F2B  0581               	andwf	1,f
  9943                           
  9944                           ;usb_device.c: 2644: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9945  1F2C  3004               	movlw	4
  9946  1F2D  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9947  1F2E  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9948  1F2F  0020               	movlb	0	; select bank0
  9949  1F30  06E8               	xorwf	_pBDTEntryIn,f
  9950                           
  9951                           ;usb_device.c: 2645: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9952  1F31  307F               	movlw	127
  9953  1F32  0021               	movlb	1	; select bank1
  9954  1F33  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9955  1F34  0020               	movlb	0	; select bank0
  9956  1F35  086E               	movf	_pBDTEntryEP0OutNext,w
  9957  1F36  0086               	movwf	6
  9958  1F37  0187               	clrf	7
  9959  1F38  0021               	movlb	1	; select bank1
  9960  1F39  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9961  1F3A  0581               	andwf	1,f
  9962                           
  9963                           ;usb_device.c: 2647: inPipes[0].info.Val = 0;
  9964  1F3B  0022               	movlb	2	; select bank2
  9965  1F3C  01C9               	clrf	(_inPipes^(0+256)+2)
  9966                           
  9967                           ;usb_device.c: 2648: inPipes[0].wCount.Val = 0;
  9968  1F3D  01CA               	clrf	(_inPipes^(0+256)+3)
  9969  1F3E  01CB               	clrf	((_inPipes+1)^(0+256)+3)
  9970                           
  9971                           ;usb_device.c: 2649: outPipes[0].info.Val = 0;
  9972  1F3F  0023               	movlb	3	; select bank3
  9973  1F40  01A2               	clrf	(_outPipes^(0+384)+2)
  9974                           
  9975                           ;usb_device.c: 2650: outPipes[0].wCount.Val = 0;
  9976  1F41  01A3               	clrf	(_outPipes^(0+384)+3)
  9977  1F42  01A4               	clrf	((_outPipes+1)^(0+384)+3)
  9978                           
  9979                           ;usb_device.c: 2656: USBCheckStdRequest();
  9980  1F43  3190  2093  319F   	fcall	_USBCheckStdRequest
  9981                           
  9982                           ;usb_device.c: 2657: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9983  1F46  3003               	movlw	3
  9984  1F47  0021               	movlb	1	; select bank1
  9985  1F48  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9986  1F49  3000               	movlw	0
  9987  1F4A  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9988  1F4B  3000               	movlw	0
  9989  1F4C  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9990  1F4D  3000               	movlw	0
  9991  1F4E  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9992  1F4F  3000               	movlw	0
  9993  1F50  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9994  1F51  3000               	movlw	0
  9995  1F52  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9996  1F53  319D  25A4  319F   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9997                           
  9998                           ;usb_device.c: 2670: USBCtrlEPServiceComplete();
  9999  1F56  3192  2219         	fcall	_USBCtrlEPServiceComplete
 10000  1F58  0008               	return
 10001  1F59                     __end_of_USBCtrlTrfSetupHandler:	
 10002                           
 10003                           	psect	text37
 10004  1093                     __ptext37:	
 10005 ;; *************** function _USBCheckStdRequest *****************
 10006 ;; Defined at:
 10007 ;;		line 2839 in file "../USB/usb_device.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;		None
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;		None
 10012 ;; Return value:  Size  Location     Type
 10013 ;;		None               void
 10014 ;; Registers used:
 10015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;Total ram usage:        1 bytes
 10026 ;; Hardware stack levels used:    1
 10027 ;; Hardware stack levels required when called:    9
 10028 ;; This function calls:
 10029 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10030 ;;		_USBStdSetCfgHandler
 10031 ;;		_USBStdGetDscHandler
 10032 ;;		_USBStdGetStatusHandler
 10033 ;;		_USBStdFeatureReqHandler
 10034 ;; This function is called by:
 10035 ;;		_USBCtrlTrfSetupHandler
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           
 10040                           ;psect for function _USBCheckStdRequest
 10041  1093                     _USBCheckStdRequest:	
 10042                           
 10043                           ;usb_device.c: 2840: if(SetupPkt.RequestType != (0x00>>5)) return;
 10044                           
 10045                           ;incstack = 0
 10046                           ; Regs used in _USBCheckStdRequest: [allreg]
 10047  1093  0020               	movlb	0	; select bank0
 10048  1094  0E40               	swapf	64,w	;volatile
 10049  1095  0C89               	rrf	9,f
 10050  1096  3903               	andlw	3
 10051  1097  3A00               	xorlw	0
 10052  1098  1D03               	btfss	3,2
 10053  1099  0008               	return
 10054  109A  28E5               	goto	l7032
 10055  109B                     l332:	
 10056                           ;usb_device.c: 2843: {
 10057                           ;usb_device.c: 2844: case 5:
 10058                           
 10059                           ;usb_device.c: 2842: switch(SetupPkt.bRequest)
 10060                           
 10061                           
 10062                           ;usb_device.c: 2845: inPipes[0].info.bits.busy = 1;
 10063  109B  0022               	movlb	2	; select bank2
 10064  109C  17C9               	bsf	(_inPipes^(0+256)+2),7
 10065                           
 10066                           ;usb_device.c: 2846: USBDeviceState = ADR_PENDING_STATE;
 10067  109D  3008               	movlw	8
 10068  109E  0021               	movlb	1	; select bank1
 10069  109F  00AC               	movwf	??_USBCheckStdRequest^(0+128)
 10070  10A0  082C               	movf	??_USBCheckStdRequest^(0+128),w
 10071  10A1  00EE               	movwf	_USBDeviceState^(0+128)
 10072                           
 10073                           ;usb_device.c: 2848: break;
 10074  10A2  0008               	return
 10075  10A3                     l7002:	
 10076                           ;usb_device.c: 2849: case 6:
 10077                           
 10078                           
 10079                           ;usb_device.c: 2850: USBStdGetDscHandler();
 10080  10A3  3193  2388         	fcall	_USBStdGetDscHandler
 10081                           
 10082                           ;usb_device.c: 2851: break;
 10083  10A5  0008               	return
 10084  10A6                     l7004:	
 10085                           ;usb_device.c: 2852: case 9:
 10086                           
 10087                           
 10088                           ;usb_device.c: 2853: USBStdSetCfgHandler();
 10089  10A6  3195  25A2         	fcall	_USBStdSetCfgHandler
 10090                           
 10091                           ;usb_device.c: 2854: break;
 10092  10A8  0008               	return
 10093  10A9                     l7006:	
 10094                           ;usb_device.c: 2855: case 8:
 10095                           
 10096                           
 10097                           ;usb_device.c: 2856: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
 10098  10A9  304E               	movlw	low _USBActiveConfiguration
 10099  10AA  0022               	movlb	2	; select bank2
 10100  10AB  00C7               	movwf	_inPipes^(0+256)
 10101  10AC  3001               	movlw	high _USBActiveConfiguration
 10102  10AD  00C8               	movwf	(_inPipes+1)^(0+256)
 10103                           
 10104                           ;usb_device.c: 2857: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10105  10AE  1449               	bsf	(_inPipes^(0+256)+2),0
 10106                           
 10107                           ;usb_device.c: 2858: inPipes[0].wCount.v[0] = 1;
 10108  10AF  01CA               	clrf	(_inPipes^(0+256)+3)
 10109  10B0  0ACA               	incf	(_inPipes^(0+256)+3),f
 10110                           
 10111                           ;usb_device.c: 2859: inPipes[0].info.bits.busy = 1;
 10112  10B1  17C9               	bsf	(_inPipes^(0+256)+2),7
 10113                           
 10114                           ;usb_device.c: 2860: break;
 10115  10B2  0008               	return
 10116  10B3                     l7014:	
 10117                           ;usb_device.c: 2861: case 0:
 10118                           
 10119                           
 10120                           ;usb_device.c: 2862: USBStdGetStatusHandler();
 10121  10B3  319F  2759         	fcall	_USBStdGetStatusHandler
 10122                           
 10123                           ;usb_device.c: 2863: break;
 10124  10B5  0008               	return
 10125  10B6                     l7016:	
 10126                           ;usb_device.c: 2864: case 1:
 10127                           
 10128                           
 10129                           ;usb_device.c: 2865: case 3:
 10130                           ;usb_device.c: 2866: USBStdFeatureReqHandler();
 10131  10B6  3185  255B         	fcall	_USBStdFeatureReqHandler
 10132                           
 10133                           ;usb_device.c: 2867: break;
 10134  10B8  0008               	return
 10135  10B9                     l7018:	
 10136                           ;usb_device.c: 2868: case 10:
 10137                           
 10138                           
 10139                           ;usb_device.c: 2869: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
 10140  10B9  0020               	movlb	0	; select bank0
 10141  10BA  0844               	movf	68,w	;volatile
 10142  10BB  3E4F               	addlw	_USBAlternateInterface& (0+255)
 10143  10BC  0022               	movlb	2	; select bank2
 10144  10BD  00C7               	movwf	_inPipes^(0+256)
 10145  10BE  3001               	movlw	1
 10146  10BF  00C8               	movwf	(_inPipes+1)^(0+256)
 10147                           
 10148                           ;usb_device.c: 2870: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10149  10C0  1449               	bsf	(_inPipes^(0+256)+2),0
 10150                           
 10151                           ;usb_device.c: 2871: inPipes[0].wCount.v[0] = 1;
 10152  10C1  01CA               	clrf	(_inPipes^(0+256)+3)
 10153  10C2  0ACA               	incf	(_inPipes^(0+256)+3),f
 10154                           
 10155                           ;usb_device.c: 2872: inPipes[0].info.bits.busy = 1;
 10156  10C3  17C9               	bsf	(_inPipes^(0+256)+2),7
 10157                           
 10158                           ;usb_device.c: 2873: break;
 10159  10C4  0008               	return
 10160  10C5                     l341:	
 10161                           ;usb_device.c: 2874: case 11:
 10162                           
 10163                           
 10164                           ;usb_device.c: 2875: inPipes[0].info.bits.busy = 1;
 10165  10C5  0022               	movlb	2	; select bank2
 10166  10C6  17C9               	bsf	(_inPipes^(0+256)+2),7
 10167                           
 10168                           ;usb_device.c: 2876: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10169  10C7  0020               	movlb	0	; select bank0
 10170  10C8  0842               	movf	66,w	;volatile
 10171  10C9  0021               	movlb	1	; select bank1
 10172  10CA  00AC               	movwf	??_USBCheckStdRequest^(0+128)
 10173  10CB  0020               	movlb	0	; select bank0
 10174  10CC  0844               	movf	68,w	;volatile
 10175  10CD  3E4F               	addlw	_USBAlternateInterface& (0+255)
 10176  10CE  0086               	movwf	6
 10177  10CF  3001               	movlw	1	; select bank2/3
 10178  10D0  0087               	movwf	7
 10179  10D1  0021               	movlb	1	; select bank1
 10180  10D2  082C               	movf	??_USBCheckStdRequest^(0+128),w
 10181  10D3  0081               	movwf	1
 10182                           
 10183                           ;usb_device.c: 2877: break;
 10184  10D4  0008               	return
 10185  10D5                     l7028:	
 10186                           ;usb_device.c: 2878: case 7:
 10187                           
 10188                           
 10189                           ;usb_device.c: 2879: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10190  10D5  3002               	movlw	2
 10191  10D6  0021               	movlb	1	; select bank1
 10192  10D7  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10193  10D8  3000               	movlw	0
 10194  10D9  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10195  10DA  3000               	movlw	0
 10196  10DB  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10197  10DC  3000               	movlw	0
 10198  10DD  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10199  10DE  3000               	movlw	0
 10200  10DF  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10201  10E0  3000               	movlw	0
 10202  10E1  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10203  10E2  319D  25A4         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10204                           
 10205                           ;usb_device.c: 2884: }
 10206                           
 10207                           ;usb_device.c: 2883: break;
 10208                           
 10209                           ;usb_device.c: 2882: default:
 10210                           
 10211                           ;usb_device.c: 2881: case 12:
 10212                           
 10213                           ;usb_device.c: 2880: break;
 10214  10E4  0008               	return
 10215  10E5                     l7032:	
 10216  10E5  0020               	movlb	0	; select bank0
 10217  10E6  0841               	movf	65,w	;volatile
 10218                           
 10219                           ; Switch size 1, requested type "space"
 10220                           ; Number of cases is 11, Range of values is 0 to 12
 10221                           ; switch strategies available:
 10222                           ; Name         Instructions Cycles
 10223                           ; direct_byte           32     6 (fixed)
 10224                           ; simple_byte           34    18 (average)
 10225                           ; jumptable            260     6 (fixed)
 10226                           ; rangetable            17     4 (fixed)
 10227                           ; spacedrange           31     6 (fixed)
 10228                           ; locatedrange          13     3 (fixed)
 10229                           ;	Chosen strategy is direct_byte
 10230  10E7  0084               	movwf	4
 10231  10E8  300D               	movlw	13
 10232  10E9  0204               	subwf	4,w
 10233  10EA  1803               	skipnc
 10234  10EB  0008               	return
 10235  10EC  3198               	movlp	high S7752
 10236  10ED  3504               	lslf	4,w
 10237  10EE  3E00               	addlw	low S7752
 10238  10EF  0082               	movwf	2
 10239  10F0                     l330:	
 10240  10F0  0008               	return
 10241  10F1                     __end_of_USBCheckStdRequest:	
 10242                           
 10243                           	psect	swtext1
 10244  1800                     __pswtext1:	
 10245  1800                     S7752:	
 10246  1800  3190  28B3         	ljmp	l7014
 10247  1802  3190  28B6         	ljmp	l7016
 10248  1804  3190  28F0         	ljmp	l330
 10249  1806  3190  28B6         	ljmp	l7016
 10250  1808  3190  28F0         	ljmp	l330
 10251  180A  3190  289B         	ljmp	l332
 10252  180C  3190  28A3         	ljmp	l7002
 10253  180E  3190  28D5         	ljmp	l7028
 10254  1810  3190  28A9         	ljmp	l7006
 10255  1812  3190  28A6         	ljmp	l7004
 10256  1814  3190  28B9         	ljmp	l7018
 10257  1816  3190  28C5         	ljmp	l341
 10258  1818  3190  28F0         	ljmp	l330
 10259                           
 10260                           	psect	text38
 10261  055B                     __ptext38:	
 10262 ;; *************** function _USBStdFeatureReqHandler *****************
 10263 ;; Defined at:
 10264 ;;		line 2907 in file "../USB/usb_device.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;		None
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;  pUEP            2    8[BANK1 ] PTR unsigned char 
 10269 ;;		 -> UEP0(1), 
 10270 ;;  p               1   11[BANK1 ] PTR struct __BDT
 10271 ;;		 -> NULL(0), BDT(32), 
 10272 ;;  current_ep_d    1   10[BANK1 ] struct .
 10273 ;; Return value:  Size  Location     Type
 10274 ;;		None               void
 10275 ;; Registers used:
 10276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;Total ram usage:        6 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:    8
 10289 ;; This function calls:
 10290 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10291 ;; This function is called by:
 10292 ;;		_USBCheckStdRequest
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           
 10297                           ;psect for function _USBStdFeatureReqHandler
 10298  055B                     _USBStdFeatureReqHandler:	
 10299                           
 10300                           ;usb_device.c: 2908: BDT_ENTRY *p;
 10301                           ;usb_device.c: 2909: EP_STATUS current_ep_data;
 10302                           ;usb_device.c: 2913: unsigned char* pUEP;
 10303                           ;usb_device.c: 2951: if((SetupPkt.bFeature == 1)&&
 10304                           ;usb_device.c: 2952: (SetupPkt.Recipient == (0x00)))
 10305                           
 10306                           ;incstack = 0
 10307                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10308  055B  0020               	movlb	0	; select bank0
 10309  055C  0842               	movf	66,w	;volatile
 10310  055D  3A01               	xorlw	1
 10311  055E  1D03               	skipz
 10312  055F  2D72               	goto	l7050
 10313  0560  0840               	movf	64,w	;volatile
 10314  0561  391F               	andlw	31
 10315  0562  3800               	iorlw	0
 10316  0563  1D03               	skipz
 10317  0564  2D72               	goto	l7050
 10318                           
 10319                           ;usb_device.c: 2953: {
 10320                           ;usb_device.c: 2954: inPipes[0].info.bits.busy = 1;
 10321  0565  0022               	movlb	2	; select bank2
 10322  0566  17C9               	bsf	(_inPipes^(0+256)+2),7
 10323                           
 10324                           ;usb_device.c: 2955: if(SetupPkt.bRequest == 3)
 10325  0567  0020               	movlb	0	; select bank0
 10326  0568  0841               	movf	65,w	;volatile
 10327  0569  3A03               	xorlw	3
 10328  056A  1D03               	skipz
 10329  056B  2D70               	goto	l7048
 10330                           
 10331                           ;usb_device.c: 2956: RemoteWakeup = TRUE;
 10332  056C  0022               	movlb	2	; select bank2
 10333  056D  01B2               	clrf	_RemoteWakeup^(0+256)
 10334  056E  0AB2               	incf	_RemoteWakeup^(0+256),f
 10335  056F  2D72               	goto	l7050
 10336  0570                     l7048:	
 10337                           
 10338                           ;usb_device.c: 2957: else
 10339                           ;usb_device.c: 2958: RemoteWakeup = FALSE;
 10340  0570  0022               	movlb	2	; select bank2
 10341  0571  01B2               	clrf	_RemoteWakeup^(0+256)
 10342  0572                     l7050:	
 10343                           
 10344                           ;usb_device.c: 2959: }
 10345                           ;usb_device.c: 2962: if((SetupPkt.bFeature == 0)&&
 10346                           ;usb_device.c: 2963: (SetupPkt.Recipient == (0x02))&&
 10347                           ;usb_device.c: 2964: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 10348                           ;usb_device.c: 2965: (USBDeviceState == CONFIGURED_STATE))
 10349  0572  0020               	movlb	0	; select bank0
 10350  0573  0842               	movf	66,w
 10351  0574  1D03               	skipz
 10352  0575  0008               	return
 10353  0576  0840               	movf	64,w	;volatile
 10354  0577  391F               	andlw	31
 10355  0578  3A02               	xorlw	2
 10356  0579  1D03               	skipz
 10357  057A  0008               	return
 10358  057B  0844               	movf	68,w	;volatile
 10359  057C  390F               	andlw	15
 10360  057D  3A00               	xorlw	0
 10361  057E  1903               	skipnz
 10362  057F  0008               	return
 10363  0580  0844               	movf	68,w	;volatile
 10364  0581  390F               	andlw	15
 10365  0582  0021               	movlb	1	; select bank1
 10366  0583  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10367  0584  3002               	movlw	2
 10368  0585  0226               	subwf	??_USBStdFeatureReqHandler^(0+128),w
 10369  0586  1803               	skipnc
 10370  0587  0008               	return
 10371  0588  086E               	movf	_USBDeviceState^(0+128),w
 10372  0589  3A20               	xorlw	32
 10373  058A  1D03               	skipz
 10374  058B  0008               	return
 10375                           
 10376                           ;usb_device.c: 2966: {
 10377                           ;usb_device.c: 2969: inPipes[0].info.bits.busy = 1;
 10378  058C  0022               	movlb	2	; select bank2
 10379  058D  17C9               	bsf	(_inPipes^(0+256)+2),7
 10380                           
 10381                           ;usb_device.c: 2972: if(SetupPkt.EPDir == 0)
 10382  058E  0020               	movlb	0	; select bank0
 10383  058F  1BC4               	btfsc	68,7	;volatile
 10384  0590  2DA1               	goto	l7064
 10385                           
 10386                           ;usb_device.c: 2973: {
 10387                           ;usb_device.c: 2974: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10388  0591  0844               	movf	68,w	;volatile
 10389  0592  390F               	andlw	15
 10390  0593  3E28               	addlw	_pBDTEntryOut& (0+255)
 10391  0594  0086               	movwf	6
 10392  0595  3001               	movlw	1	; select bank2/3
 10393  0596  0087               	movwf	7
 10394  0597  0801               	movf	1,w
 10395  0598  0021               	movlb	1	; select bank1
 10396  0599  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10397  059A  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10398  059B  00AB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10399                           
 10400                           ;usb_device.c: 2975: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10401  059C  0020               	movlb	0	; select bank0
 10402  059D  0844               	movf	68,w	;volatile
 10403  059E  390F               	andlw	15
 10404  059F  3E26               	addlw	_ep_data_out& (0+255)
 10405  05A0  2DB0               	goto	L10
 10406  05A1                     l7064:	
 10407                           ;usb_device.c: 2976: }
 10408                           
 10409                           
 10410                           ;usb_device.c: 2977: else
 10411                           ;usb_device.c: 2978: {
 10412                           ;usb_device.c: 2979: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10413  05A1  0020               	movlb	0	; select bank0
 10414  05A2  0844               	movf	68,w	;volatile
 10415  05A3  390F               	andlw	15
 10416  05A4  3E68               	addlw	_pBDTEntryIn& (0+255)
 10417  05A5  0086               	movwf	6
 10418  05A6  0187               	clrf	7
 10419  05A7  0801               	movf	1,w
 10420  05A8  0021               	movlb	1	; select bank1
 10421  05A9  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10422  05AA  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10423  05AB  00AB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10424                           
 10425                           ;usb_device.c: 2980: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10426  05AC  0020               	movlb	0	; select bank0
 10427  05AD  0844               	movf	68,w	;volatile
 10428  05AE  390F               	andlw	15
 10429  05AF  3E24               	addlw	_ep_data_in& (0+255)
 10430  05B0                     L10:	
 10431  05B0  0086               	movwf	6
 10432  05B1  3001               	movlw	1	; select bank2/3
 10433  05B2  0087               	movwf	7
 10434  05B3  0801               	movf	1,w
 10435  05B4  0021               	movlb	1	; select bank1
 10436  05B5  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10437  05B6  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10438  05B7  00AA               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
 10439                           
 10440                           ;usb_device.c: 2981: }
 10441                           ;usb_device.c: 2987: if(current_ep_data.bits.ping_pong_state == 0)
 10442  05B8  182A               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
 10443  05B9  2DBF               	goto	l353
 10444                           
 10445                           ;usb_device.c: 2988: {
 10446                           ;usb_device.c: 2989: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
 10447  05BA  30FB               	movlw	251
 10448  05BB  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10449  05BC  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10450  05BD  05AB               	andwf	USBStdFeatureReqHandler@p^(0+128),f
 10451                           
 10452                           ;usb_device.c: 2990: }
 10453  05BE  2DC0               	goto	l354
 10454  05BF                     l353:	
 10455                           
 10456                           ;usb_device.c: 2991: else
 10457                           ;usb_device.c: 2992: {
 10458                           ;usb_device.c: 2993: {((BYTE_VAL*)&p)->Val |= 0x0004;};
 10459  05BF  152B               	bsf	USBStdFeatureReqHandler@p^(0+128),2
 10460  05C0                     l354:	
 10461                           
 10462                           ;usb_device.c: 2994: }
 10463                           ;usb_device.c: 2999: if(SetupPkt.EPDir == 0)
 10464  05C0  0020               	movlb	0	; select bank0
 10465  05C1  1BC4               	btfsc	68,7	;volatile
 10466  05C2  2DCE               	goto	l7072
 10467                           
 10468                           ;usb_device.c: 3000: {
 10469                           ;usb_device.c: 3001: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10470  05C3  0021               	movlb	1	; select bank1
 10471  05C4  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10472  05C5  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10473  05C6  0020               	movlb	0	; select bank0
 10474  05C7  0844               	movf	68,w	;volatile
 10475  05C8  390F               	andlw	15
 10476  05C9  3E28               	addlw	_pBDTEntryOut& (0+255)
 10477  05CA  0086               	movwf	6
 10478  05CB  3001               	movlw	1	; select bank2/3
 10479  05CC  0087               	movwf	7
 10480  05CD  2DD7               	goto	L11
 10481  05CE                     l7072:	
 10482                           ;usb_device.c: 3002: }
 10483                           
 10484                           
 10485                           ;usb_device.c: 3003: else
 10486                           ;usb_device.c: 3004: {
 10487                           ;usb_device.c: 3005: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10488  05CE  0021               	movlb	1	; select bank1
 10489  05CF  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10490  05D0  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10491  05D1  0020               	movlb	0	; select bank0
 10492  05D2  0844               	movf	68,w	;volatile
 10493  05D3  390F               	andlw	15
 10494  05D4  3E68               	addlw	_pBDTEntryIn& (0+255)
 10495  05D5  0086               	movwf	6
 10496  05D6  0187               	clrf	7
 10497  05D7                     L11:	
 10498  05D7  0021               	movlb	1	; select bank1
 10499  05D8  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10500  05D9  0081               	movwf	1
 10501                           
 10502                           ;usb_device.c: 3006: }
 10503                           ;usb_device.c: 3009: if(SetupPkt.bRequest == 3)
 10504  05DA  0020               	movlb	0	; select bank0
 10505  05DB  0841               	movf	65,w	;volatile
 10506  05DC  3A03               	xorlw	3
 10507  05DD  1D03               	skipz
 10508  05DE  2DFC               	goto	l7084
 10509                           
 10510                           ;usb_device.c: 3010: {
 10511                           ;usb_device.c: 3011: if(p->STAT.UOWN == 1)
 10512  05DF  0021               	movlb	1	; select bank1
 10513  05E0  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10514  05E1  0086               	movwf	6
 10515  05E2  0187               	clrf	7
 10516  05E3  1F81               	btfss	1,7
 10517  05E4  2DF3               	goto	l358
 10518                           
 10519                           ;usb_device.c: 3012: {
 10520                           ;usb_device.c: 3015: if(SetupPkt.EPDir == 0)
 10521  05E5  0020               	movlb	0	; select bank0
 10522  05E6  1BC4               	btfsc	68,7	;volatile
 10523  05E7  2DEC               	goto	l7082
 10524                           
 10525                           ;usb_device.c: 3016: {
 10526                           ;usb_device.c: 3017: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10527  05E8  0844               	movf	68,w	;volatile
 10528  05E9  390F               	andlw	15
 10529  05EA  3E26               	addlw	_ep_data_out& (0+255)
 10530  05EB  2DEF               	goto	L12
 10531  05EC                     l7082:	
 10532                           ;usb_device.c: 3018: }
 10533                           
 10534                           
 10535                           ;usb_device.c: 3019: else
 10536                           ;usb_device.c: 3020: {
 10537                           ;usb_device.c: 3021: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10538  05EC  0844               	movf	68,w	;volatile
 10539  05ED  390F               	andlw	15
 10540  05EE  3E24               	addlw	_ep_data_in& (0+255)
 10541  05EF                     L12:	
 10542  05EF  0086               	movwf	6
 10543  05F0  3001               	movlw	1	; select bank2/3
 10544  05F1  0087               	movwf	7
 10545  05F2  1481               	bsf	1,1
 10546  05F3                     l358:	
 10547                           
 10548                           ;usb_device.c: 3022: }
 10549                           ;usb_device.c: 3023: }
 10550                           ;usb_device.c: 3026: p->STAT.Val |= 0x80|0x04;
 10551  05F3  3084               	movlw	132
 10552  05F4  0021               	movlb	1	; select bank1
 10553  05F5  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10554  05F6  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10555  05F7  0086               	movwf	6
 10556  05F8  0187               	clrf	7
 10557  05F9  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10558  05FA  0481               	iorwf	1,f
 10559                           
 10560                           ;usb_device.c: 3027: }
 10561  05FB  0008               	return
 10562  05FC                     l7084:	
 10563                           
 10564                           ;usb_device.c: 3028: else
 10565                           ;usb_device.c: 3029: {
 10566                           ;usb_device.c: 3033: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 10567  05FC  3004               	movlw	4
 10568  05FD  0021               	movlb	1	; select bank1
 10569  05FE  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10570  05FF  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10571  0600  06AB               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 10572                           
 10573                           ;usb_device.c: 3035: if(p->STAT.UOWN == 1)
 10574  0601  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10575  0602  0086               	movwf	6
 10576  0603  0187               	clrf	7
 10577  0604  1F81               	btfss	1,7
 10578  0605  2E21               	goto	l7094
 10579                           
 10580                           ;usb_device.c: 3036: {
 10581                           ;usb_device.c: 3039: p->STAT.Val &= (~0x80);
 10582  0606  307F               	movlw	127
 10583  0607  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10584  0608  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10585  0609  0086               	movwf	6
 10586  060A  0187               	clrf	7
 10587  060B  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10588  060C  0581               	andwf	1,f
 10589                           
 10590                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
 10591  060D  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10592  060E  0086               	movwf	6
 10593  060F  0187               	clrf	7
 10594  0610  1701               	bsf	1,6
 10595                           
 10596                           ;usb_device.c: 3041: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10597  0611  3005               	movlw	5
 10598  0612  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10599  0613  3000               	movlw	0
 10600  0614  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10601  0615  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10602  0616  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10603  0617  3000               	movlw	0
 10604  0618  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10605  0619  3001               	movlw	1
 10606  061A  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10607  061B  3000               	movlw	0
 10608  061C  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10609  061D  319D  25A4  3185   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10610                           
 10611                           ;usb_device.c: 3042: }
 10612  0620  2E26               	goto	l7096
 10613  0621                     l7094:	
 10614                           
 10615                           ;usb_device.c: 3043: else
 10616                           ;usb_device.c: 3044: {
 10617                           ;usb_device.c: 3046: p->STAT.Val |= 0x40;
 10618  0621  0021               	movlb	1	; select bank1
 10619  0622  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10620  0623  0086               	movwf	6
 10621  0624  0187               	clrf	7
 10622  0625  1701               	bsf	1,6
 10623  0626                     l7096:	
 10624                           
 10625                           ;usb_device.c: 3047: }
 10626                           ;usb_device.c: 3051: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 10627  0626  3004               	movlw	4
 10628  0627  0021               	movlb	1	; select bank1
 10629  0628  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10630  0629  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10631  062A  06AB               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 10632                           
 10633                           ;usb_device.c: 3057: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10634  062B  18AA               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
 10635  062C  2E32               	goto	l366
 10636  062D  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10637  062E  0086               	movwf	6
 10638  062F  0187               	clrf	7
 10639  0630  1F81               	btfss	1,7
 10640  0631  2E58               	goto	l7108
 10641  0632                     l366:	
 10642                           
 10643                           ;usb_device.c: 3058: {
 10644                           ;usb_device.c: 3059: if(SetupPkt.EPDir == 0)
 10645  0632  0020               	movlb	0	; select bank0
 10646  0633  1BC4               	btfsc	68,7	;volatile
 10647  0634  2E39               	goto	l7104
 10648                           
 10649                           ;usb_device.c: 3060: {
 10650                           ;usb_device.c: 3061: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10651  0635  0844               	movf	68,w	;volatile
 10652  0636  390F               	andlw	15
 10653  0637  3E26               	addlw	_ep_data_out& (0+255)
 10654  0638  2E3C               	goto	L13
 10655  0639                     l7104:	
 10656                           ;usb_device.c: 3062: }
 10657                           
 10658                           
 10659                           ;usb_device.c: 3063: else
 10660                           ;usb_device.c: 3064: {
 10661                           ;usb_device.c: 3065: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10662  0639  0844               	movf	68,w	;volatile
 10663  063A  390F               	andlw	15
 10664  063B  3E24               	addlw	_ep_data_in& (0+255)
 10665  063C                     L13:	
 10666  063C  0086               	movwf	6
 10667  063D  3001               	movlw	1	; select bank2/3
 10668  063E  0087               	movwf	7
 10669  063F  1081               	bcf	1,1
 10670                           
 10671                           ;usb_device.c: 3066: }
 10672                           ;usb_device.c: 3068: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10673  0640  303B               	movlw	59
 10674  0641  0021               	movlb	1	; select bank1
 10675  0642  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10676  0643  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10677  0644  0086               	movwf	6
 10678  0645  0187               	clrf	7
 10679  0646  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10680  0647  0581               	andwf	1,f
 10681                           
 10682                           ;usb_device.c: 3071: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10683  0648  3005               	movlw	5
 10684  0649  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10685  064A  3000               	movlw	0
 10686  064B  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10687  064C  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10688  064D  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10689  064E  3000               	movlw	0
 10690  064F  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10691  0650  3001               	movlw	1
 10692  0651  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10693  0652  3000               	movlw	0
 10694  0653  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10695  0654  319D  25A4  3185   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10696                           
 10697                           ;usb_device.c: 3072: }
 10698  0657  2E60               	goto	l7110
 10699  0658                     l7108:	
 10700                           
 10701                           ;usb_device.c: 3073: else
 10702                           ;usb_device.c: 3074: {
 10703                           ;usb_device.c: 3076: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10704  0658  303B               	movlw	59
 10705  0659  0021               	movlb	1	; select bank1
 10706  065A  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10707  065B  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10708  065C  0086               	movwf	6
 10709  065D  0187               	clrf	7
 10710  065E  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10711  065F  0581               	andwf	1,f
 10712  0660                     l7110:	
 10713                           
 10714                           ;usb_device.c: 3077: }
 10715                           ;usb_device.c: 3124: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 10716  0660  0020               	movlb	0	; select bank0
 10717  0661  0844               	movf	68,w	;volatile
 10718  0662  390F               	andlw	15
 10719  0663  3E98               	addlw	152
 10720  0664  0021               	movlb	1	; select bank1
 10721  0665  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10722  0666  01A7               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
 10723  0667  300E               	movlw	14
 10724  0668  3DA7               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
 10725  0669  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10726  066A  00A8               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
 10727  066B  0827               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 10728  066C  00A9               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
 10729                           
 10730                           ;usb_device.c: 3128: *pUEP &= ~0x0001;
 10731  066D  30FE               	movlw	254
 10732  066E  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10733  066F  0828               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
 10734  0670  0086               	movwf	6
 10735  0671  0829               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 10736  0672  0087               	movwf	7
 10737  0673  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10738  0674  0581               	andwf	1,f
 10739  0675  0008               	return
 10740  0676                     __end_of_USBStdFeatureReqHandler:	
 10741                           
 10742                           	psect	text39
 10743  1F59                     __ptext39:	
 10744 ;; *************** function _USBStdGetStatusHandler *****************
 10745 ;; Defined at:
 10746 ;;		line 2283 in file "../USB/usb_device.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;  p               1    9[BANK0 ] PTR struct __BDT
 10751 ;;		 -> NULL(0), BDT(32), 
 10752 ;; Return value:  Size  Location     Type
 10753 ;;		None               void
 10754 ;; Registers used:
 10755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;Total ram usage:        2 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    4
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_USBCheckStdRequest
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           
 10776                           ;psect for function _USBStdGetStatusHandler
 10777  1F59                     _USBStdGetStatusHandler:	
 10778                           
 10779                           ;usb_device.c: 2284: CtrlTrfData[0] = 0;
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 10783  1F59  0020               	movlb	0	; select bank0
 10784  1F5A  01C8               	clrf	72	;volatile
 10785                           
 10786                           ;usb_device.c: 2285: CtrlTrfData[1] = 0;
 10787  1F5B  3000               	movlw	0
 10788  1F5C  00C9               	movwf	73	;volatile
 10789                           
 10790                           ;usb_device.c: 2287: switch(SetupPkt.Recipient)
 10791  1F5D  2F91               	goto	l6916
 10792  1F5E                     l271:	
 10793                           ;usb_device.c: 2288: {
 10794                           ;usb_device.c: 2289: case (0x00):
 10795                           
 10796                           
 10797                           ;usb_device.c: 2295: if(1 == 1)
 10798  1F5E  0022               	movlb	2	; select bank2
 10799  1F5F  17C9               	bsf	(_inPipes^(0+256)+2),7
 10800                           
 10801                           ;usb_device.c: 2296: {
 10802                           ;usb_device.c: 2297: CtrlTrfData[0]|=0x01;
 10803  1F60  0020               	movlb	0	; select bank0
 10804  1F61  1448               	bsf	72,0	;volatile
 10805                           
 10806                           ;usb_device.c: 2298: }
 10807                           ;usb_device.c: 2300: if(RemoteWakeup == TRUE)
 10808  1F62  0022               	movlb	2	; select bank2
 10809  1F63  0832               	movf	_RemoteWakeup^(0+256),w
 10810  1F64  3A01               	xorlw	1
 10811  1F65  1D03               	skipz
 10812  1F66  2F9D               	goto	l274
 10813                           
 10814                           ;usb_device.c: 2301: {
 10815                           ;usb_device.c: 2302: CtrlTrfData[0]|=0x02;
 10816  1F67  0020               	movlb	0	; select bank0
 10817  1F68  14C8               	bsf	72,1	;volatile
 10818                           
 10819                           ;usb_device.c: 2303: }
 10820                           ;usb_device.c: 2304: break;
 10821  1F69  2F9D               	goto	l274
 10822  1F6A                     l275:	
 10823                           ;usb_device.c: 2305: case (0x01):
 10824                           
 10825                           
 10826                           ;usb_device.c: 2306: inPipes[0].info.bits.busy = 1;
 10827  1F6A  0022               	movlb	2	; select bank2
 10828  1F6B  17C9               	bsf	(_inPipes^(0+256)+2),7
 10829                           
 10830                           ;usb_device.c: 2307: break;
 10831  1F6C  2F9D               	goto	l274
 10832  1F6D                     l276:	
 10833                           ;usb_device.c: 2308: case (0x02):
 10834                           
 10835                           
 10836                           ;usb_device.c: 2309: inPipes[0].info.bits.busy = 1;
 10837  1F6D  0022               	movlb	2	; select bank2
 10838  1F6E  17C9               	bsf	(_inPipes^(0+256)+2),7
 10839                           
 10840                           ;usb_device.c: 2313: {
 10841                           ;usb_device.c: 2314: BDT_ENTRY *p;
 10842                           ;usb_device.c: 2316: if(SetupPkt.EPDir == 0)
 10843  1F6F  0020               	movlb	0	; select bank0
 10844  1F70  1BC4               	btfsc	68,7	;volatile
 10845  1F71  2F79               	goto	l6906
 10846                           
 10847                           ;usb_device.c: 2317: {
 10848                           ;usb_device.c: 2318: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10849  1F72  0844               	movf	68,w	;volatile
 10850  1F73  390F               	andlw	15
 10851  1F74  3E28               	addlw	_pBDTEntryOut& (0+255)
 10852  1F75  0086               	movwf	6
 10853  1F76  3001               	movlw	1	; select bank2/3
 10854  1F77  0087               	movwf	7
 10855  1F78  2F7E               	goto	L14
 10856  1F79                     l6906:	
 10857                           ;usb_device.c: 2319: }
 10858                           
 10859                           
 10860                           ;usb_device.c: 2320: else
 10861                           ;usb_device.c: 2321: {
 10862                           ;usb_device.c: 2322: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10863  1F79  0844               	movf	68,w	;volatile
 10864  1F7A  390F               	andlw	15
 10865  1F7B  3E68               	addlw	_pBDTEntryIn& (0+255)
 10866  1F7C  0086               	movwf	6
 10867  1F7D  0187               	clrf	7
 10868  1F7E                     L14:	
 10869  1F7E  0801               	movf	1,w
 10870  1F7F  00D8               	movwf	??_USBStdGetStatusHandler
 10871  1F80  0858               	movf	??_USBStdGetStatusHandler,w
 10872  1F81  00D9               	movwf	USBStdGetStatusHandler@p
 10873                           
 10874                           ;usb_device.c: 2323: }
 10875                           ;usb_device.c: 2325: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10876  1F82  0859               	movf	USBStdGetStatusHandler@p,w
 10877  1F83  0086               	movwf	6
 10878  1F84  0187               	clrf	7
 10879  1F85  1F81               	btfss	1,7
 10880  1F86  2F9D               	goto	l274
 10881  1F87  0859               	movf	USBStdGetStatusHandler@p,w
 10882  1F88  0086               	movwf	6
 10883  1F89  0187               	clrf	7
 10884  1F8A  1D01               	btfss	1,2
 10885  1F8B  2F9D               	goto	l274
 10886                           
 10887                           ;usb_device.c: 2326: CtrlTrfData[0]=0x01;
 10888  1F8C  3001               	movlw	1
 10889  1F8D  00D8               	movwf	??_USBStdGetStatusHandler
 10890  1F8E  0858               	movf	??_USBStdGetStatusHandler,w
 10891  1F8F  00C8               	movwf	72	;volatile
 10892                           
 10893                           ;usb_device.c: 2328: }
 10894                           ;usb_device.c: 2329: }
 10895                           
 10896                           ;usb_device.c: 2327: break;
 10897  1F90  2F9D               	goto	l274
 10898  1F91                     l6916:	
 10899  1F91  0840               	movf	64,w	;volatile
 10900  1F92  391F               	andlw	31
 10901                           
 10902                           ; Switch size 1, requested type "space"
 10903                           ; Number of cases is 3, Range of values is 0 to 2
 10904                           ; switch strategies available:
 10905                           ; Name         Instructions Cycles
 10906                           ; simple_byte           10     6 (average)
 10907                           ; direct_byte           12     6 (fixed)
 10908                           ; jumptable            260     6 (fixed)
 10909                           ; rangetable             7     4 (fixed)
 10910                           ; spacedrange           11     6 (fixed)
 10911                           ; locatedrange           3     3 (fixed)
 10912                           ;	Chosen strategy is simple_byte
 10913  1F93  3A00               	xorlw	0	; case 0
 10914  1F94  1903               	skipnz
 10915  1F95  2F5E               	goto	l271
 10916  1F96  3A01               	xorlw	1	; case 1
 10917  1F97  1903               	skipnz
 10918  1F98  2F6A               	goto	l275
 10919  1F99  3A03               	xorlw	3	; case 2
 10920  1F9A  1903               	skipnz
 10921  1F9B  2F6D               	goto	l276
 10922  1F9C  2F9D               	goto	l274
 10923  1F9D                     l274:	
 10924                           
 10925                           ;usb_device.c: 2331: if(inPipes[0].info.bits.busy == 1)
 10926  1F9D  0022               	movlb	2	; select bank2
 10927  1F9E  1FC9               	btfss	(_inPipes^(0+256)+2),7
 10928  1F9F  0008               	return
 10929                           
 10930                           ;usb_device.c: 2332: {
 10931                           ;usb_device.c: 2333: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
 10932  1FA0  3048               	movlw	72
 10933  1FA1  00C7               	movwf	_inPipes^(0+256)
 10934  1FA2  3000               	movlw	0
 10935  1FA3  00C8               	movwf	(_inPipes+1)^(0+256)
 10936                           
 10937                           ;usb_device.c: 2334: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10938  1FA4  1449               	bsf	(_inPipes^(0+256)+2),0
 10939                           
 10940                           ;usb_device.c: 2335: inPipes[0].wCount.v[0] = 2;
 10941  1FA5  3002               	movlw	2
 10942  1FA6  0020               	movlb	0	; select bank0
 10943  1FA7  00D8               	movwf	??_USBStdGetStatusHandler
 10944  1FA8  0858               	movf	??_USBStdGetStatusHandler,w
 10945  1FA9  0022               	movlb	2	; select bank2
 10946  1FAA  00CA               	movwf	(_inPipes^(0+256)+3)
 10947  1FAB  0008               	return
 10948  1FAC                     __end_of_USBStdGetStatusHandler:	
 10949                           
 10950                           	psect	text40
 10951  1388                     __ptext40:	
 10952 ;; *************** function _USBStdGetDscHandler *****************
 10953 ;; Defined at:
 10954 ;;		line 2207 in file "../USB/usb_device.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;		None
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;		None
 10959 ;; Return value:  Size  Location     Type
 10960 ;;		None               void
 10961 ;; Registers used:
 10962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10971 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10972 ;;Total ram usage:        3 bytes
 10973 ;; Hardware stack levels used:    1
 10974 ;; Hardware stack levels required when called:    4
 10975 ;; This function calls:
 10976 ;;		Nothing
 10977 ;; This function is called by:
 10978 ;;		_USBCheckStdRequest
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           
 10983                           ;psect for function _USBStdGetDscHandler
 10984  1388                     _USBStdGetDscHandler:	
 10985                           
 10986                           ;usb_device.c: 2208: if(SetupPkt.bmRequestType == 0x80)
 10987                           
 10988                           ;incstack = 0
 10989                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 10990  1388  0020               	movlb	0	; select bank0
 10991  1389  0840               	movf	64,w	;volatile
 10992  138A  3A80               	xorlw	128
 10993  138B  1D03               	skipz
 10994  138C  0008               	return
 10995                           
 10996                           ;usb_device.c: 2209: {
 10997                           ;usb_device.c: 2210: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10998  138D  30C0               	movlw	192
 10999  138E  00D8               	movwf	??_USBStdGetDscHandler
 11000  138F  0858               	movf	??_USBStdGetDscHandler,w
 11001  1390  0022               	movlb	2	; select bank2
 11002  1391  00C9               	movwf	(_inPipes^(0+256)+2)
 11003                           
 11004                           ;usb_device.c: 2212: switch(SetupPkt.bDescriptorType)
 11005  1392  2BFA               	goto	l6894
 11006  1393                     l6874:	
 11007                           ;usb_device.c: 2213: {
 11008                           ;usb_device.c: 2214: case 0x01:
 11009                           
 11010                           
 11011                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
 11012  1393  308D               	movlw	low (_device_dsc| (0+32768))
 11013  1394  0022               	movlb	2	; select bank2
 11014  1395  00C7               	movwf	_inPipes^(0+256)
 11015  1396  3088               	movlw	high (_device_dsc| (0+32768))
 11016  1397  00C8               	movwf	(_inPipes+1)^(0+256)
 11017                           
 11018                           ;usb_device.c: 2220: inPipes[0].wCount.Val = sizeof(device_dsc);
 11019  1398  3012               	movlw	18
 11020  1399  00CA               	movwf	(_inPipes^(0+256)+3)
 11021  139A  3000               	movlw	0
 11022  139B  00CB               	movwf	(_inPipes^(0+256)+4)
 11023                           
 11024                           ;usb_device.c: 2221: break;
 11025  139C  0008               	return
 11026  139D                     l6876:	
 11027                           ;usb_device.c: 2222: case 0x02:
 11028                           
 11029                           
 11030                           ;usb_device.c: 2226: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11031  139D  3004               	movlw	low (_USB_CD_Ptr| (0+32768))
 11032  139E  0084               	movwf	4
 11033  139F  3088               	movlw	high (_USB_CD_Ptr| (0+32768))
 11034  13A0  0085               	movwf	5
 11035  13A1  0020               	movlb	0	; select bank0
 11036  13A2  0842               	movf	66,w	;volatile
 11037  13A3  0784               	addwf	4,f
 11038  13A4  1803               	skipnc
 11039  13A5  0A85               	incf	5,f
 11040  13A6  3F00               	moviw [0]fsr0
 11041  13A7  0022               	movlb	2	; select bank2
 11042  13A8  00C7               	movwf	_inPipes^(0+256)
 11043  13A9  3088               	movlw	(high __stringtab)| (0+128)
 11044  13AA  00C8               	movwf	(_inPipes+1)^(0+256)
 11045                           
 11046                           ;usb_device.c: 2232: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11047  13AB  0848               	movf	(_inPipes+1)^(0+256),w
 11048  13AC  0020               	movlb	0	; select bank0
 11049  13AD  00D9               	movwf	??_USBStdGetDscHandler+1
 11050  13AE  0022               	movlb	2	; select bank2
 11051  13AF  0847               	movf	_inPipes^(0+256),w
 11052  13B0  0020               	movlb	0	; select bank0
 11053  13B1  00D8               	movwf	??_USBStdGetDscHandler
 11054  13B2  3002               	movlw	2
 11055  13B3  0758               	addwf	??_USBStdGetDscHandler,w
 11056  13B4  0084               	movwf	4
 11057  13B5  0859               	movf	??_USBStdGetDscHandler+1,w
 11058  13B6  1803               	skipnc
 11059  13B7  0A59               	incf	??_USBStdGetDscHandler+1,w
 11060  13B8  0085               	movwf	5
 11061  13B9  0800               	movf	0,w	;code access
 11062  13BA  00DA               	movwf	??_USBStdGetDscHandler+2
 11063  13BB  085A               	movf	??_USBStdGetDscHandler+2,w
 11064  13BC  0022               	movlb	2	; select bank2
 11065  13BD  00CA               	movwf	(_inPipes^(0+256)+3)
 11066                           
 11067                           ;usb_device.c: 2233: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11068  13BE  0848               	movf	(_inPipes+1)^(0+256),w
 11069  13BF  0020               	movlb	0	; select bank0
 11070  13C0  00D9               	movwf	??_USBStdGetDscHandler+1
 11071  13C1  0022               	movlb	2	; select bank2
 11072  13C2  0847               	movf	_inPipes^(0+256),w
 11073  13C3  0020               	movlb	0	; select bank0
 11074  13C4  00D8               	movwf	??_USBStdGetDscHandler
 11075  13C5  3003               	movlw	3
 11076  13C6  0758               	addwf	??_USBStdGetDscHandler,w
 11077  13C7  0084               	movwf	4
 11078  13C8  0859               	movf	??_USBStdGetDscHandler+1,w
 11079  13C9  1803               	skipnc
 11080  13CA  0A59               	incf	??_USBStdGetDscHandler+1,w
 11081  13CB  0085               	movwf	5
 11082  13CC  0800               	movf	0,w	;code access
 11083  13CD  00DA               	movwf	??_USBStdGetDscHandler+2
 11084  13CE  085A               	movf	??_USBStdGetDscHandler+2,w
 11085  13CF  0022               	movlb	2	; select bank2
 11086  13D0  00CB               	movwf	(_inPipes^(0+256)+4)
 11087                           
 11088                           ;usb_device.c: 2234: break;
 11089  13D1  0008               	return
 11090  13D2                     l6882:	
 11091                           ;usb_device.c: 2235: case 0x03:
 11092                           
 11093                           
 11094                           ;usb_device.c: 2239: if(SetupPkt.bDscIndex<3)
 11095  13D2  3003               	movlw	3
 11096  13D3  0020               	movlb	0	; select bank0
 11097  13D4  0242               	subwf	66,w	;volatile
 11098  13D5  1803               	skipnc
 11099  13D6  2BF4               	goto	l6888
 11100                           
 11101                           ;usb_device.c: 2240: {
 11102                           ;usb_device.c: 2242: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11103  13D7  3001               	movlw	low (_USB_SD_Ptr| (0+32768))
 11104  13D8  0084               	movwf	4
 11105  13D9  3088               	movlw	high (_USB_SD_Ptr| (0+32768))
 11106  13DA  0085               	movwf	5
 11107  13DB  0842               	movf	66,w	;volatile
 11108  13DC  0784               	addwf	4,f
 11109  13DD  1803               	skipnc
 11110  13DE  0A85               	incf	5,f
 11111  13DF  3F00               	moviw [0]fsr0
 11112  13E0  0022               	movlb	2	; select bank2
 11113  13E1  00C7               	movwf	_inPipes^(0+256)
 11114  13E2  3088               	movlw	(high __stringtab)| (0+128)
 11115  13E3  00C8               	movwf	(_inPipes+1)^(0+256)
 11116                           
 11117                           ;usb_device.c: 2244: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11118  13E4  0847               	movf	_inPipes^(0+256),w
 11119  13E5  0084               	movwf	4
 11120  13E6  0848               	movf	(_inPipes+1)^(0+256),w
 11121  13E7  0085               	movwf	5
 11122  13E8  0800               	movf	0,w	;code access
 11123  13E9  0020               	movlb	0	; select bank0
 11124  13EA  00D8               	movwf	??_USBStdGetDscHandler
 11125  13EB  01D9               	clrf	??_USBStdGetDscHandler+1
 11126  13EC  0858               	movf	??_USBStdGetDscHandler,w
 11127  13ED  0022               	movlb	2	; select bank2
 11128  13EE  00CA               	movwf	(_inPipes^(0+256)+3)
 11129  13EF  0020               	movlb	0	; select bank0
 11130  13F0  0859               	movf	??_USBStdGetDscHandler+1,w
 11131  13F1  0022               	movlb	2	; select bank2
 11132  13F2  00CB               	movwf	((_inPipes+1)^(0+256)+3)
 11133                           
 11134                           ;usb_device.c: 2245: }
 11135  13F3  0008               	return
 11136  13F4                     l6888:	
 11137                           
 11138                           ;usb_device.c: 2255: else
 11139                           ;usb_device.c: 2256: {
 11140                           ;usb_device.c: 2257: inPipes[0].info.Val = 0;
 11141  13F4  0022               	movlb	2	; select bank2
 11142  13F5  01C9               	clrf	(_inPipes^(0+256)+2)
 11143                           
 11144                           ;usb_device.c: 2258: }
 11145                           ;usb_device.c: 2259: break;
 11146  13F6  0008               	return
 11147  13F7                     l6890:	
 11148                           ;usb_device.c: 2260: default:
 11149                           
 11150                           
 11151                           ;usb_device.c: 2261: inPipes[0].info.Val = 0;
 11152  13F7  0022               	movlb	2	; select bank2
 11153  13F8  01C9               	clrf	(_inPipes^(0+256)+2)
 11154                           
 11155                           ;usb_device.c: 2263: }
 11156                           
 11157                           ;usb_device.c: 2262: break;
 11158  13F9  0008               	return
 11159  13FA                     l6894:	
 11160  13FA  0020               	movlb	0	; select bank0
 11161  13FB  0843               	movf	67,w	;volatile
 11162                           
 11163                           ; Switch size 1, requested type "space"
 11164                           ; Number of cases is 3, Range of values is 1 to 3
 11165                           ; switch strategies available:
 11166                           ; Name         Instructions Cycles
 11167                           ; simple_byte           10     6 (average)
 11168                           ; direct_byte           15     9 (fixed)
 11169                           ; jumptable            263     9 (fixed)
 11170                           ;	Chosen strategy is simple_byte
 11171  13FC  3A01               	xorlw	1	; case 1
 11172  13FD  1903               	skipnz
 11173  13FE  2B93               	goto	l6874
 11174  13FF  3A03               	xorlw	3	; case 2
 11175  1400  1903               	skipnz
 11176  1401  2B9D               	goto	l6876
 11177  1402  3A01               	xorlw	1	; case 3
 11178  1403  1903               	skipnz
 11179  1404  2BD2               	goto	l6882
 11180  1405  2BF7               	goto	l6890
 11181  1406  0008               	return
 11182  1407                     __end_of_USBStdGetDscHandler:	
 11183                           
 11184                           	psect	text41
 11185  15A2                     __ptext41:	
 11186 ;; *************** function _USBStdSetCfgHandler *****************
 11187 ;; Defined at:
 11188 ;;		line 2132 in file "../USB/usb_device.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;		None
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  p               2    7[BANK1 ] PTR unsigned char 
 11193 ;;		 -> UEP1(1), 
 11194 ;;  i               1    9[BANK1 ] unsigned char 
 11195 ;;  i               1   10[BANK1 ] unsigned char 
 11196 ;; Return value:  Size  Location     Type
 11197 ;;		None               void
 11198 ;; Registers used:
 11199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;Total ram usage:        5 bytes
 11210 ;; Hardware stack levels used:    1
 11211 ;; Hardware stack levels required when called:    8
 11212 ;; This function calls:
 11213 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11214 ;;		_memset
 11215 ;; This function is called by:
 11216 ;;		_USBCheckStdRequest
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           
 11221                           ;psect for function _USBStdSetCfgHandler
 11222  15A2                     _USBStdSetCfgHandler:	
 11223                           
 11224                           ;usb_device.c: 2133: BYTE i;
 11225                           ;usb_device.c: 2136: inPipes[0].info.bits.busy = 1;
 11226                           
 11227                           ;incstack = 0
 11228                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11229  15A2  0022               	movlb	2	; select bank2
 11230  15A3  17C9               	bsf	(_inPipes^(0+256)+2),7
 11231                           
 11232                           ;usb_device.c: 2139: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 11233  15A4  300E               	movlw	14
 11234  15A5  0021               	movlb	1	; select bank1
 11235  15A6  00A8               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
 11236  15A7  3099               	movlw	153
 11237  15A8  00A7               	movwf	USBStdSetCfgHandler@p^(0+128)
 11238  15A9  01A9               	clrf	USBStdSetCfgHandler@i_1089^(0+128)
 11239  15AA  0829               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11240  15AB  1D03               	skipz
 11241  15AC  2DBD               	goto	l6826
 11242  15AD                     l6818:	
 11243  15AD  0827               	movf	USBStdSetCfgHandler@p^(0+128),w
 11244  15AE  0086               	movwf	6
 11245  15AF  0828               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
 11246  15B0  0087               	movwf	7
 11247  15B1  0181               	clrf	1
 11248  15B2  3001               	movlw	1
 11249  15B3  07A7               	addwf	USBStdSetCfgHandler@p^(0+128),f
 11250  15B4  3000               	movlw	0
 11251  15B5  3DA8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
 11252  15B6  3001               	movlw	1
 11253  15B7  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11254  15B8  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11255  15B9  07A9               	addwf	USBStdSetCfgHandler@i_1089^(0+128),f
 11256  15BA  0829               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11257  15BB  1903               	btfsc	3,2
 11258  15BC  2DAD               	goto	l6818
 11259  15BD                     l6826:	
 11260                           
 11261                           ;usb_device.c: 2142: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11262  15BD  3020               	movlw	32
 11263  15BE  0020               	movlb	0	; select bank0
 11264  15BF  00D8               	movwf	?_memset
 11265  15C0  3000               	movlw	0
 11266  15C1  00D9               	movwf	?_memset+1
 11267  15C2  3000               	movlw	0
 11268  15C3  00DA               	movwf	?_memset+2
 11269  15C4  3000               	movlw	0
 11270  15C5  00DB               	movwf	?_memset+3
 11271  15C6  3020               	movlw	32
 11272  15C7  00DC               	movwf	?_memset+4
 11273  15C8  3000               	movlw	0
 11274  15C9  00DD               	movwf	?_memset+5
 11275  15CA  319C  2415  3195   	fcall	_memset
 11276                           
 11277                           ;usb_device.c: 2145: UCONbits.PPBRST = 1;
 11278  15CD  003D               	movlb	29	; select bank29
 11279  15CE  170E               	bsf	14,6	;volatile
 11280                           
 11281                           ;usb_device.c: 2150: for(i = 0; i < (BYTE)(1+1u); i++)
 11282  15CF  0021               	movlb	1	; select bank1
 11283  15D0  01AA               	clrf	USBStdSetCfgHandler@i^(0+128)
 11284  15D1  3002               	movlw	2
 11285  15D2  022A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11286  15D3  1803               	btfsc	3,0
 11287  15D4  2DE9               	goto	l6842
 11288  15D5                     l6836:	
 11289                           
 11290                           ;usb_device.c: 2151: {
 11291                           ;usb_device.c: 2152: ep_data_in[i].Val = 0u;
 11292  15D5  082A               	movf	USBStdSetCfgHandler@i^(0+128),w
 11293  15D6  3E24               	addlw	_ep_data_in& (0+255)
 11294  15D7  0086               	movwf	6
 11295  15D8  3001               	movlw	1	; select bank2/3
 11296  15D9  0087               	movwf	7
 11297  15DA  0181               	clrf	1
 11298                           
 11299                           ;usb_device.c: 2153: ep_data_out[i].Val = 0u;
 11300  15DB  082A               	movf	USBStdSetCfgHandler@i^(0+128),w
 11301  15DC  3E26               	addlw	_ep_data_out& (0+255)
 11302  15DD  0086               	movwf	6
 11303  15DE  3001               	movlw	1	; select bank2/3
 11304  15DF  0087               	movwf	7
 11305  15E0  0181               	clrf	1
 11306  15E1  3001               	movlw	1
 11307  15E2  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11308  15E3  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11309  15E4  07AA               	addwf	USBStdSetCfgHandler@i^(0+128),f
 11310  15E5  3002               	movlw	2
 11311  15E6  022A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11312  15E7  1C03               	skipc
 11313  15E8  2DD5               	goto	l6836
 11314  15E9                     l6842:	
 11315                           
 11316                           ;usb_device.c: 2154: }
 11317                           ;usb_device.c: 2157: memset((void*)&USBAlternateInterface,0x00,1);
 11318  15E9  304F               	movlw	low _USBAlternateInterface
 11319  15EA  0020               	movlb	0	; select bank0
 11320  15EB  00D8               	movwf	?_memset
 11321  15EC  3001               	movlw	high _USBAlternateInterface
 11322  15ED  00D9               	movwf	?_memset+1
 11323  15EE  3000               	movlw	0
 11324  15EF  00DA               	movwf	?_memset+2
 11325  15F0  3000               	movlw	0
 11326  15F1  00DB               	movwf	?_memset+3
 11327  15F2  3001               	movlw	1
 11328  15F3  00DC               	movwf	?_memset+4
 11329  15F4  3000               	movlw	0
 11330  15F5  00DD               	movwf	?_memset+5
 11331  15F6  319C  2415  3195   	fcall	_memset
 11332                           
 11333                           ;usb_device.c: 2160: UCONbits.PPBRST = 0;
 11334  15F9  003D               	movlb	29	; select bank29
 11335  15FA  130E               	bcf	14,6	;volatile
 11336                           
 11337                           ;usb_device.c: 2162: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11338  15FB  3028               	movlw	40
 11339  15FC  0021               	movlb	1	; select bank1
 11340  15FD  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11341  15FE  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11342  15FF  0020               	movlb	0	; select bank0
 11343  1600  00E8               	movwf	_pBDTEntryIn
 11344                           
 11345                           ;usb_device.c: 2165: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11346  1601  3020               	movlw	32
 11347  1602  0021               	movlb	1	; select bank1
 11348  1603  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11349  1604  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11350  1605  0020               	movlb	0	; select bank0
 11351  1606  00ED               	movwf	_pBDTEntryEP0OutCurrent
 11352                           
 11353                           ;usb_device.c: 2166: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11354  1607  086D               	movf	_pBDTEntryEP0OutCurrent,w
 11355  1608  0021               	movlb	1	; select bank1
 11356  1609  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11357  160A  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11358  160B  0020               	movlb	0	; select bank0
 11359  160C  00EE               	movwf	_pBDTEntryEP0OutNext
 11360                           
 11361                           ;usb_device.c: 2169: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11362  160D  0842               	movf	66,w	;volatile
 11363  160E  0021               	movlb	1	; select bank1
 11364  160F  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11365  1610  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11366  1611  0022               	movlb	2	; select bank2
 11367  1612  00CE               	movwf	_USBActiveConfiguration^(0+256)
 11368                           
 11369                           ;usb_device.c: 2172: if(USBActiveConfiguration == 0)
 11370  1613  08CE               	movf	_USBActiveConfiguration^(0+256),f
 11371  1614  1D03               	skipz
 11372  1615  2E1C               	goto	l6858
 11373                           
 11374                           ;usb_device.c: 2173: {
 11375                           ;usb_device.c: 2175: USBDeviceState = ADDRESS_STATE;
 11376  1616  3010               	movlw	16
 11377  1617  0021               	movlb	1	; select bank1
 11378  1618  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11379  1619  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11380  161A  00EE               	movwf	_USBDeviceState^(0+128)
 11381                           
 11382                           ;usb_device.c: 2176: }
 11383  161B  0008               	return
 11384  161C                     l6858:	
 11385                           
 11386                           ;usb_device.c: 2177: else
 11387                           ;usb_device.c: 2178: {
 11388                           ;usb_device.c: 2180: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11389  161C  3001               	movlw	1
 11390  161D  0021               	movlb	1	; select bank1
 11391  161E  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11392  161F  3000               	movlw	0
 11393  1620  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11394  1621  304E               	movlw	low _USBActiveConfiguration
 11395  1622  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11396  1623  3001               	movlw	high _USBActiveConfiguration
 11397  1624  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 11398  1625  3001               	movlw	1
 11399  1626  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11400  1627  3000               	movlw	0
 11401  1628  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 11402  1629  319D  25A4         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11403                           
 11404                           ;usb_device.c: 2185: USBDeviceState = CONFIGURED_STATE;
 11405  162B  3020               	movlw	32
 11406  162C  0021               	movlb	1	; select bank1
 11407  162D  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11408  162E  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11409  162F  00EE               	movwf	_USBDeviceState^(0+128)
 11410  1630  0008               	return
 11411  1631                     __end_of_USBStdSetCfgHandler:	
 11412                           
 11413                           	psect	text42
 11414  1C15                     __ptext42:	
 11415 ;; *************** function _memset *****************
 11416 ;; Defined at:
 11417 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memset.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;  p1              2    8[BANK0 ] PTR void 
 11420 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11421 ;;  c               2   10[BANK0 ] int 
 11422 ;;  n               2   12[BANK0 ] unsigned int 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;  p               2   15[BANK0 ] PTR unsigned char 
 11425 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  2    wreg      PTR void 
 11428 ;; Registers used:
 11429 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11435 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;Total ram usage:        9 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    4
 11442 ;; This function calls:
 11443 ;;		Nothing
 11444 ;; This function is called by:
 11445 ;;		_USBStdSetCfgHandler
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           
 11450                           ;psect for function _memset
 11451  1C15                     _memset:	
 11452                           
 11453                           ;incstack = 0
 11454                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11455  1C15  0020               	movlb	0	; select bank0
 11456  1C16  0859               	movf	memset@p1+1,w
 11457  1C17  01E0               	clrf	memset@p+1
 11458  1C18  07E0               	addwf	memset@p+1,f
 11459  1C19  0858               	movf	memset@p1,w
 11460  1C1A  01DF               	clrf	memset@p
 11461  1C1B  07DF               	addwf	memset@p,f
 11462  1C1C                     l6868:	
 11463  1C1C  3001               	movlw	1
 11464  1C1D  02DC               	subwf	memset@n,f
 11465  1C1E  3000               	movlw	0
 11466  1C1F  3BDD               	subwfb	memset@n+1,f
 11467  1C20  30FF               	movlw	255
 11468  1C21  065D               	xorwf	memset@n+1,w
 11469  1C22  1D03               	skipz
 11470  1C23  2C26               	goto	u7625
 11471  1C24  30FF               	movlw	255
 11472  1C25  065C               	xorwf	memset@n,w
 11473  1C26                     u7625:	
 11474  1C26  1903               	btfsc	3,2
 11475  1C27  0008               	return
 11476  1C28  085A               	movf	memset@c,w
 11477  1C29  00DE               	movwf	??_memset
 11478  1C2A  085F               	movf	memset@p,w
 11479  1C2B  0086               	movwf	6
 11480  1C2C  0860               	movf	memset@p+1,w
 11481  1C2D  0087               	movwf	7
 11482  1C2E  085E               	movf	??_memset,w
 11483  1C2F  0081               	movwf	1
 11484  1C30  3001               	movlw	1
 11485  1C31  07DF               	addwf	memset@p,f
 11486  1C32  3000               	movlw	0
 11487  1C33  3DE0               	addwfc	memset@p+1,f
 11488  1C34  2C1C               	goto	l6868
 11489  1C35                     __end_of_memset:	
 11490                           ;	Return value of _memset is never used
 11491                           
 11492                           
 11493                           	psect	text43
 11494  1219                     __ptext43:	
 11495 ;; *************** function _USBCtrlEPServiceComplete *****************
 11496 ;; Defined at:
 11497 ;;		line 1786 in file "../USB/usb_device.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;		None
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;		None
 11502 ;; Return value:  Size  Location     Type
 11503 ;;		None               void
 11504 ;; Registers used:
 11505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;Total ram usage:        2 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:    6
 11518 ;; This function calls:
 11519 ;;		_USBCtrlEPAllowStatusStage
 11520 ;;		_USBCtrlEPAllowDataStage
 11521 ;; This function is called by:
 11522 ;;		_USBCtrlTrfSetupHandler
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           
 11527                           ;psect for function _USBCtrlEPServiceComplete
 11528  1219                     _USBCtrlEPServiceComplete:	
 11529                           
 11530                           ;usb_device.c: 1791: UCONbits.PKTDIS = 0;
 11531                           
 11532                           ;incstack = 0
 11533                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11534  1219  003D               	movlb	29	; select bank29
 11535  121A  120E               	bcf	14,4	;volatile
 11536                           
 11537                           ;usb_device.c: 1797: if(inPipes[0].info.bits.busy == 0)
 11538  121B  0022               	movlb	2	; select bank2
 11539  121C  1BC9               	btfsc	(_inPipes^(0+256)+2),7
 11540  121D  2A53               	goto	l208
 11541                           
 11542                           ;usb_device.c: 1798: {
 11543                           ;usb_device.c: 1799: if(outPipes[0].info.bits.busy == 1)
 11544  121E  0023               	movlb	3	; select bank3
 11545  121F  1FA2               	btfss	(_outPipes^(0+384)+2),7
 11546  1220  2A30               	goto	l6740
 11547                           
 11548                           ;usb_device.c: 1800: {
 11549                           ;usb_device.c: 1801: controlTransferState = 2;
 11550  1221  3002               	movlw	2
 11551  1222  0020               	movlb	0	; select bank0
 11552  1223  00DD               	movwf	??_USBCtrlEPServiceComplete
 11553  1224  085D               	movf	??_USBCtrlEPServiceComplete,w
 11554  1225  00EC               	movwf	_controlTransferState
 11555                           
 11556                           ;usb_device.c: 1812: if(USBDeferOUTDataStagePackets == FALSE)
 11557  1226  0022               	movlb	2	; select bank2
 11558  1227  08B9               	movf	_USBDeferOUTDataStagePackets^(0+256),f
 11559  1228  1D03               	skipz
 11560  1229  2A2C               	goto	l6736
 11561                           
 11562                           ;usb_device.c: 1813: {
 11563                           ;usb_device.c: 1814: USBCtrlEPAllowDataStage();
 11564  122A  319E  26B9         	fcall	_USBCtrlEPAllowDataStage
 11565  122C                     l6736:	
 11566                           
 11567                           ;usb_device.c: 1815: }
 11568                           ;usb_device.c: 1819: USBStatusStageEnabledFlag2 = FALSE;
 11569  122C  0022               	movlb	2	; select bank2
 11570  122D  01BD               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11571                           
 11572                           ;usb_device.c: 1820: USBStatusStageEnabledFlag1 = FALSE;
 11573  122E  01BC               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11574                           
 11575                           ;usb_device.c: 1821: }
 11576  122F  0008               	return
 11577  1230                     l6740:	
 11578                           
 11579                           ;usb_device.c: 1822: else
 11580                           ;usb_device.c: 1823: {
 11581                           ;usb_device.c: 1828: pBDTEntryEP0OutNext->CNT = 8;
 11582  1230  3008               	movlw	8
 11583  1231  0020               	movlb	0	; select bank0
 11584  1232  00DD               	movwf	??_USBCtrlEPServiceComplete
 11585  1233  0A6E               	incf	_pBDTEntryEP0OutNext,w
 11586  1234  0086               	movwf	6
 11587  1235  0187               	clrf	7
 11588  1236  085D               	movf	??_USBCtrlEPServiceComplete,w
 11589  1237  0081               	movwf	1
 11590                           
 11591                           ;usb_device.c: 1829: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 11592  1238  3040               	movlw	64
 11593  1239  00DD               	movwf	??_USBCtrlEPServiceComplete
 11594  123A  3000               	movlw	0
 11595  123B  00DE               	movwf	??_USBCtrlEPServiceComplete+1
 11596  123C  086E               	movf	_pBDTEntryEP0OutNext,w
 11597  123D  3E02               	addlw	2
 11598  123E  0086               	movwf	6
 11599  123F  0187               	clrf	7
 11600  1240  085D               	movf	??_USBCtrlEPServiceComplete,w
 11601  1241  3FC0               	movwi [0]fsr1
 11602  1242  085E               	movf	??_USBCtrlEPServiceComplete+1,w
 11603  1243  3FC1               	movwi [1]fsr1
 11604                           
 11605                           ;usb_device.c: 1830: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 11606  1244  308C               	movlw	140
 11607  1245  00DD               	movwf	??_USBCtrlEPServiceComplete
 11608  1246  086E               	movf	_pBDTEntryEP0OutNext,w
 11609  1247  0086               	movwf	6
 11610  1248  0187               	clrf	7
 11611  1249  085D               	movf	??_USBCtrlEPServiceComplete,w
 11612  124A  0081               	movwf	1
 11613                           
 11614                           ;usb_device.c: 1831: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
 11615  124B  3084               	movlw	132
 11616  124C  00DD               	movwf	??_USBCtrlEPServiceComplete
 11617  124D  0868               	movf	_pBDTEntryIn,w
 11618  124E  0086               	movwf	6
 11619  124F  0187               	clrf	7
 11620  1250  085D               	movf	??_USBCtrlEPServiceComplete,w
 11621  1251  0081               	movwf	1
 11622                           
 11623                           ;usb_device.c: 1832: }
 11624                           ;usb_device.c: 1833: }
 11625  1252  0008               	return
 11626  1253                     l208:	
 11627                           
 11628                           ;usb_device.c: 1834: else
 11629                           ;usb_device.c: 1835: {
 11630                           ;usb_device.c: 1836: if(SetupPkt.DataDir == (0x80>>7))
 11631  1253  0020               	movlb	0	; select bank0
 11632  1254  1FC0               	btfss	64,7	;volatile
 11633  1255  2A69               	goto	l6756
 11634                           
 11635                           ;usb_device.c: 1837: {
 11636                           ;usb_device.c: 1838: controlTransferState = 1;
 11637  1256  01EC               	clrf	_controlTransferState
 11638  1257  0AEC               	incf	_controlTransferState,f
 11639                           
 11640                           ;usb_device.c: 1852: if(USBDeferINDataStagePackets == FALSE)
 11641  1258  0022               	movlb	2	; select bank2
 11642  1259  08B8               	movf	_USBDeferINDataStagePackets^(0+256),f
 11643  125A  1D03               	skipz
 11644  125B  2A5F               	goto	l6748
 11645                           
 11646                           ;usb_device.c: 1853: {
 11647                           ;usb_device.c: 1854: USBCtrlEPAllowDataStage();
 11648  125C  319E  26B9  3192   	fcall	_USBCtrlEPAllowDataStage
 11649  125F                     l6748:	
 11650                           
 11651                           ;usb_device.c: 1855: }
 11652                           ;usb_device.c: 1877: USBStatusStageEnabledFlag2 = FALSE;
 11653  125F  0022               	movlb	2	; select bank2
 11654  1260  01BD               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11655                           
 11656                           ;usb_device.c: 1878: USBStatusStageEnabledFlag1 = FALSE;
 11657  1261  01BC               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11658                           
 11659                           ;usb_device.c: 1879: if(USBDeferStatusStagePacket == FALSE)
 11660  1262  0020               	movlb	0	; select bank0
 11661  1263  08EB               	movf	_USBDeferStatusStagePacket,f
 11662  1264  1D03               	skipz
 11663  1265  0008               	return
 11664                           
 11665                           ;usb_device.c: 1880: {
 11666                           ;usb_device.c: 1881: USBCtrlEPAllowStatusStage();
 11667  1266  3191  21B5         	fcall	_USBCtrlEPAllowStatusStage
 11668                           
 11669                           ;usb_device.c: 1882: }
 11670                           ;usb_device.c: 1883: }
 11671  1268  0008               	return
 11672  1269                     l6756:	
 11673                           
 11674                           ;usb_device.c: 1884: else
 11675                           ;usb_device.c: 1885: {
 11676                           ;usb_device.c: 1896: controlTransferState = 2;
 11677  1269  3002               	movlw	2
 11678  126A  0020               	movlb	0	; select bank0
 11679  126B  00DD               	movwf	??_USBCtrlEPServiceComplete
 11680  126C  085D               	movf	??_USBCtrlEPServiceComplete,w
 11681  126D  00EC               	movwf	_controlTransferState
 11682                           
 11683                           ;usb_device.c: 1899: pBDTEntryEP0OutNext->CNT = 8;
 11684  126E  3008               	movlw	8
 11685  126F  00DD               	movwf	??_USBCtrlEPServiceComplete
 11686  1270  0A6E               	incf	_pBDTEntryEP0OutNext,w
 11687  1271  0086               	movwf	6
 11688  1272  0187               	clrf	7
 11689  1273  085D               	movf	??_USBCtrlEPServiceComplete,w
 11690  1274  0081               	movwf	1
 11691                           
 11692                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 11693  1275  3040               	movlw	64
 11694  1276  00DD               	movwf	??_USBCtrlEPServiceComplete
 11695  1277  3000               	movlw	0
 11696  1278  00DE               	movwf	??_USBCtrlEPServiceComplete+1
 11697  1279  086E               	movf	_pBDTEntryEP0OutNext,w
 11698  127A  3E02               	addlw	2
 11699  127B  0086               	movwf	6
 11700  127C  0187               	clrf	7
 11701  127D  085D               	movf	??_USBCtrlEPServiceComplete,w
 11702  127E  3FC0               	movwi [0]fsr1
 11703  127F  085E               	movf	??_USBCtrlEPServiceComplete+1,w
 11704  1280  3FC1               	movwi [1]fsr1
 11705                           
 11706                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 11707  1281  3084               	movlw	132
 11708  1282  00DD               	movwf	??_USBCtrlEPServiceComplete
 11709  1283  086E               	movf	_pBDTEntryEP0OutNext,w
 11710  1284  0086               	movwf	6
 11711  1285  0187               	clrf	7
 11712  1286  085D               	movf	??_USBCtrlEPServiceComplete,w
 11713  1287  0081               	movwf	1
 11714                           
 11715                           ;usb_device.c: 1904: USBStatusStageEnabledFlag2 = FALSE;
 11716  1288  0022               	movlb	2	; select bank2
 11717  1289  01BD               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11718                           
 11719                           ;usb_device.c: 1905: USBStatusStageEnabledFlag1 = FALSE;
 11720  128A  01BC               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11721                           
 11722                           ;usb_device.c: 1906: if(USBDeferStatusStagePacket == FALSE)
 11723  128B  0020               	movlb	0	; select bank0
 11724  128C  08EB               	movf	_USBDeferStatusStagePacket,f
 11725  128D  1D03               	skipz
 11726  128E  0008               	return
 11727                           
 11728                           ;usb_device.c: 1907: {
 11729                           ;usb_device.c: 1908: USBCtrlEPAllowStatusStage();
 11730  128F  3191  21B5         	fcall	_USBCtrlEPAllowStatusStage
 11731  1291  0008               	return
 11732  1292                     __end_of_USBCtrlEPServiceComplete:	
 11733                           
 11734                           	psect	text44
 11735  1EB9                     __ptext44:	
 11736 ;; *************** function _USBCtrlEPAllowDataStage *****************
 11737 ;; Defined at:
 11738 ;;		line 1660 in file "../USB/usb_device.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;		None
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;		None               void
 11745 ;; Registers used:
 11746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;Total ram usage:        2 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:    5
 11759 ;; This function calls:
 11760 ;;		_USBCtrlTrfTxService
 11761 ;; This function is called by:
 11762 ;;		_USBCtrlEPServiceComplete
 11763 ;; This function uses a non-reentrant model
 11764 ;;
 11765                           
 11766                           
 11767                           ;psect for function _USBCtrlEPAllowDataStage
 11768  1EB9                     _USBCtrlEPAllowDataStage:	
 11769                           
 11770                           ;usb_device.c: 1661: USBDeferINDataStagePackets = FALSE;
 11771                           
 11772                           ;incstack = 0
 11773                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11774  1EB9  0022               	movlb	2	; select bank2
 11775  1EBA  01B8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 11776                           
 11777                           ;usb_device.c: 1662: USBDeferOUTDataStagePackets = FALSE;
 11778  1EBB  01B9               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 11779                           
 11780                           ;usb_device.c: 1664: if(controlTransferState == 2)
 11781  1EBC  0020               	movlb	0	; select bank0
 11782  1EBD  086C               	movf	_controlTransferState,w
 11783  1EBE  3A02               	xorlw	2
 11784  1EBF  1D03               	skipz
 11785  1EC0  2EDC               	goto	l6674
 11786                           
 11787                           ;usb_device.c: 1665: {
 11788                           ;usb_device.c: 1667: pBDTEntryEP0OutNext->CNT = 8;
 11789  1EC1  3008               	movlw	8
 11790  1EC2  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11791  1EC3  0A6E               	incf	_pBDTEntryEP0OutNext,w
 11792  1EC4  0086               	movwf	6
 11793  1EC5  0187               	clrf	7
 11794  1EC6  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11795  1EC7  0081               	movwf	1
 11796                           
 11797                           ;usb_device.c: 1668: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 11798  1EC8  3048               	movlw	72
 11799  1EC9  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11800  1ECA  3000               	movlw	0
 11801  1ECB  00DC               	movwf	??_USBCtrlEPAllowDataStage+1
 11802  1ECC  086E               	movf	_pBDTEntryEP0OutNext,w
 11803  1ECD  3E02               	addlw	2
 11804  1ECE  0086               	movwf	6
 11805  1ECF  0187               	clrf	7
 11806  1ED0  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11807  1ED1  3FC0               	movwi [0]fsr1
 11808  1ED2  085C               	movf	??_USBCtrlEPAllowDataStage+1,w
 11809  1ED3  3FC1               	movwi [1]fsr1
 11810                           
 11811                           ;usb_device.c: 1669: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 11812  1ED4  30C8               	movlw	200
 11813  1ED5  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11814  1ED6  086E               	movf	_pBDTEntryEP0OutNext,w
 11815  1ED7  0086               	movwf	6
 11816  1ED8  0187               	clrf	7
 11817  1ED9  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11818  1EDA  0081               	movwf	1
 11819                           
 11820                           ;usb_device.c: 1670: }
 11821  1EDB  0008               	return
 11822  1EDC                     l6674:	
 11823                           
 11824                           ;usb_device.c: 1671: else
 11825                           ;usb_device.c: 1672: {
 11826                           ;usb_device.c: 1675: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11827  1EDC  0022               	movlb	2	; select bank2
 11828  1EDD  084B               	movf	((_inPipes+1)^(0+256)+3),w
 11829  1EDE  0020               	movlb	0	; select bank0
 11830  1EDF  0247               	subwf	71,w	;volatile
 11831  1EE0  1D03               	skipz
 11832  1EE1  2EE6               	goto	u7375
 11833  1EE2  0022               	movlb	2	; select bank2
 11834  1EE3  084A               	movf	(_inPipes^(0+256)+3),w
 11835  1EE4  0020               	movlb	0	; select bank0
 11836  1EE5  0246               	subwf	70,w	;volatile
 11837  1EE6                     u7375:	
 11838  1EE6  1803               	skipnc
 11839  1EE7  2EF1               	goto	l6678
 11840                           
 11841                           ;usb_device.c: 1676: {
 11842                           ;usb_device.c: 1677: inPipes[0].wCount.Val = SetupPkt.wLength;
 11843  1EE8  0847               	movf	71,w	;volatile
 11844  1EE9  0022               	movlb	2	; select bank2
 11845  1EEA  01CB               	clrf	((_inPipes+1)^(0+256)+3)
 11846  1EEB  07CB               	addwf	((_inPipes+1)^(0+256)+3),f
 11847  1EEC  0020               	movlb	0	; select bank0
 11848  1EED  0846               	movf	70,w	;volatile
 11849  1EEE  0022               	movlb	2	; select bank2
 11850  1EEF  01CA               	clrf	(_inPipes^(0+256)+3)
 11851  1EF0  07CA               	addwf	(_inPipes^(0+256)+3),f
 11852  1EF1                     l6678:	
 11853                           
 11854                           ;usb_device.c: 1678: }
 11855                           ;usb_device.c: 1679: USBCtrlTrfTxService();
 11856  1EF1  3195  2514  319E   	fcall	_USBCtrlTrfTxService
 11857                           
 11858                           ;usb_device.c: 1684: pBDTEntryIn[0]->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 11859  1EF4  3048               	movlw	72
 11860  1EF5  0020               	movlb	0	; select bank0
 11861  1EF6  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11862  1EF7  3000               	movlw	0
 11863  1EF8  00DC               	movwf	??_USBCtrlEPAllowDataStage+1
 11864  1EF9  0868               	movf	_pBDTEntryIn,w
 11865  1EFA  3E02               	addlw	2
 11866  1EFB  0086               	movwf	6
 11867  1EFC  0187               	clrf	7
 11868  1EFD  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11869  1EFE  3FC0               	movwi [0]fsr1
 11870  1EFF  085C               	movf	??_USBCtrlEPAllowDataStage+1,w
 11871  1F00  3FC1               	movwi [1]fsr1
 11872                           
 11873                           ;usb_device.c: 1685: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 11874  1F01  30C8               	movlw	200
 11875  1F02  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11876  1F03  0868               	movf	_pBDTEntryIn,w
 11877  1F04  0086               	movwf	6
 11878  1F05  0187               	clrf	7
 11879  1F06  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11880  1F07  0081               	movwf	1
 11881  1F08  0008               	return
 11882  1F09                     __end_of_USBCtrlEPAllowDataStage:	
 11883                           
 11884                           	psect	text45
 11885  1514                     __ptext45:	
 11886 ;; *************** function _USBCtrlTrfTxService *****************
 11887 ;; Defined at:
 11888 ;;		line 1938 in file "../USB/usb_device.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;		None
 11891 ;; Auto vars:     Size  Location     Type
 11892 ;;  byteToSend      1   10[BANK0 ] unsigned char 
 11893 ;; Return value:  Size  Location     Type
 11894 ;;		None               void
 11895 ;; Registers used:
 11896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11897 ;; Tracked objects:
 11898 ;;		On entry : 0/0
 11899 ;;		On exit  : 0/0
 11900 ;;		Unchanged: 0/0
 11901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;Total ram usage:        3 bytes
 11907 ;; Hardware stack levels used:    1
 11908 ;; Hardware stack levels required when called:    4
 11909 ;; This function calls:
 11910 ;;		Nothing
 11911 ;; This function is called by:
 11912 ;;		_USBCtrlEPAllowDataStage
 11913 ;;		_USBCtrlTrfInHandler
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           
 11918                           ;psect for function _USBCtrlTrfTxService
 11919  1514                     _USBCtrlTrfTxService:	
 11920                           
 11921                           ;usb_device.c: 1939: BYTE byteToSend;
 11922                           ;usb_device.c: 1943: byteToSend = 8;
 11923                           
 11924                           ;incstack = 0
 11925                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 11926  1514  3008               	movlw	8
 11927  1515  0020               	movlb	0	; select bank0
 11928  1516  00D8               	movwf	??_USBCtrlTrfTxService
 11929  1517  0858               	movf	??_USBCtrlTrfTxService,w
 11930  1518  00DA               	movwf	USBCtrlTrfTxService@byteToSend
 11931                           
 11932                           ;usb_device.c: 1944: if(inPipes[0].wCount.Val < (BYTE)8)
 11933  1519  3000               	movlw	0
 11934  151A  0022               	movlb	2	; select bank2
 11935  151B  024B               	subwf	((_inPipes+1)^(0+256)+3),w
 11936  151C  3008               	movlw	8
 11937  151D  1903               	skipnz
 11938  151E  024A               	subwf	(_inPipes^(0+256)+3),w
 11939  151F  1803               	skipnc
 11940  1520  2D37               	goto	l6696
 11941                           
 11942                           ;usb_device.c: 1945: {
 11943                           ;usb_device.c: 1946: byteToSend = inPipes[0].wCount.Val;
 11944  1521  084A               	movf	(_inPipes^(0+256)+3),w
 11945  1522  0020               	movlb	0	; select bank0
 11946  1523  00D8               	movwf	??_USBCtrlTrfTxService
 11947  1524  0858               	movf	??_USBCtrlTrfTxService,w
 11948  1525  00DA               	movwf	USBCtrlTrfTxService@byteToSend
 11949                           
 11950                           ;usb_device.c: 1953: if(shortPacketStatus == 0)
 11951  1526  0022               	movlb	2	; select bank2
 11952  1527  08C6               	movf	_shortPacketStatus^(0+256),f
 11953  1528  1D03               	skipz
 11954  1529  2D2D               	goto	l6692
 11955                           
 11956                           ;usb_device.c: 1954: {
 11957                           ;usb_device.c: 1955: shortPacketStatus = 1;
 11958  152A  01C6               	clrf	_shortPacketStatus^(0+256)
 11959  152B  0AC6               	incf	_shortPacketStatus^(0+256),f
 11960                           
 11961                           ;usb_device.c: 1956: }
 11962  152C  2D37               	goto	l6696
 11963  152D                     l6692:	
 11964                           
 11965                           ;usb_device.c: 1957: else if(shortPacketStatus == 1)
 11966  152D  0846               	movf	_shortPacketStatus^(0+256),w
 11967  152E  3A01               	xorlw	1
 11968  152F  1D03               	skipz
 11969  1530  2D37               	goto	l6696
 11970                           
 11971                           ;usb_device.c: 1958: {
 11972                           ;usb_device.c: 1959: shortPacketStatus = 2;
 11973  1531  3002               	movlw	2
 11974  1532  0020               	movlb	0	; select bank0
 11975  1533  00D8               	movwf	??_USBCtrlTrfTxService
 11976  1534  0858               	movf	??_USBCtrlTrfTxService,w
 11977  1535  0022               	movlb	2	; select bank2
 11978  1536  00C6               	movwf	_shortPacketStatus^(0+256)
 11979  1537                     l6696:	
 11980                           
 11981                           ;usb_device.c: 1960: }
 11982                           ;usb_device.c: 1961: }
 11983                           ;usb_device.c: 1965: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
 11984  1537  3003               	movlw	3
 11985  1538  3E47               	addlw	_inPipes& (0+255)
 11986  1539  0086               	movwf	6
 11987  153A  3001               	movlw	1	; select bank2/3
 11988  153B  0087               	movwf	7
 11989  153C  0020               	movlb	0	; select bank0
 11990  153D  085A               	movf	USBCtrlTrfTxService@byteToSend,w
 11991  153E  00D8               	movwf	??_USBCtrlTrfTxService
 11992  153F  01D9               	clrf	??_USBCtrlTrfTxService+1
 11993  1540  09D8               	comf	??_USBCtrlTrfTxService,f
 11994  1541  09D9               	comf	??_USBCtrlTrfTxService+1,f
 11995  1542  0AD8               	incf	??_USBCtrlTrfTxService,f
 11996  1543  1903               	skipnz
 11997  1544  0AD9               	incf	??_USBCtrlTrfTxService+1,f
 11998  1545  3F40               	moviw [0]fsr1
 11999  1546  0758               	addwf	??_USBCtrlTrfTxService,w
 12000  1547  0022               	movlb	2	; select bank2
 12001  1548  00CA               	movwf	(_inPipes^(0+256)+3)
 12002  1549  3F41               	moviw [1]fsr1
 12003  154A  0020               	movlb	0	; select bank0
 12004  154B  3D59               	addwfc	??_USBCtrlTrfTxService+1,w
 12005  154C  0022               	movlb	2	; select bank2
 12006  154D  00CB               	movwf	(_inPipes^(0+256)+4)
 12007                           
 12008                           ;usb_device.c: 1970: pBDTEntryIn[0]->CNT = byteToSend;
 12009  154E  0020               	movlb	0	; select bank0
 12010  154F  085A               	movf	USBCtrlTrfTxService@byteToSend,w
 12011  1550  00D8               	movwf	??_USBCtrlTrfTxService
 12012  1551  0A68               	incf	_pBDTEntryIn,w
 12013  1552  0086               	movwf	6
 12014  1553  0187               	clrf	7
 12015  1554  0858               	movf	??_USBCtrlTrfTxService,w
 12016  1555  0081               	movwf	1
 12017                           
 12018                           ;usb_device.c: 1974: pDst = ( BYTE*)CtrlTrfData;
 12019  1556  3048               	movlw	72
 12020  1557  00D8               	movwf	??_USBCtrlTrfTxService
 12021  1558  0858               	movf	??_USBCtrlTrfTxService,w
 12022  1559  0022               	movlb	2	; select bank2
 12023  155A  00C4               	movwf	_pDst^(0+256)
 12024                           
 12025                           ;usb_device.c: 1975: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12026  155B  1C49               	btfss	(_inPipes^(0+256)+2),0
 12027  155C  2D7B               	goto	l6714
 12028  155D  2D9D               	goto	l6724
 12029  155E                     l6706:	
 12030                           ;usb_device.c: 1976: {
 12031                           ;usb_device.c: 1977: while(byteToSend)
 12032                           
 12033                           
 12034                           ;usb_device.c: 1978: {
 12035                           ;usb_device.c: 1979: *pDst++ = *inPipes[0].pSrc.bRom++;
 12036  155E  0022               	movlb	2	; select bank2
 12037  155F  0847               	movf	_inPipes^(0+256),w
 12038  1560  0084               	movwf	4
 12039  1561  0848               	movf	(_inPipes+1)^(0+256),w
 12040  1562  0085               	movwf	5
 12041  1563  0800               	movf	0,w	;code access
 12042  1564  0020               	movlb	0	; select bank0
 12043  1565  00D8               	movwf	??_USBCtrlTrfTxService
 12044  1566  0022               	movlb	2	; select bank2
 12045  1567  0844               	movf	_pDst^(0+256),w
 12046  1568  0086               	movwf	6
 12047  1569  0187               	clrf	7
 12048  156A  0020               	movlb	0	; select bank0
 12049  156B  0858               	movf	??_USBCtrlTrfTxService,w
 12050  156C  0081               	movwf	1
 12051  156D  3001               	movlw	1
 12052  156E  0022               	movlb	2	; select bank2
 12053  156F  07C7               	addwf	_inPipes^(0+256),f
 12054  1570  3000               	movlw	0
 12055  1571  3DC8               	addwfc	(_inPipes+1)^(0+256),f
 12056  1572  3001               	movlw	1
 12057  1573  0020               	movlb	0	; select bank0
 12058  1574  00D8               	movwf	??_USBCtrlTrfTxService
 12059  1575  0858               	movf	??_USBCtrlTrfTxService,w
 12060  1576  0022               	movlb	2	; select bank2
 12061  1577  07C4               	addwf	_pDst^(0+256),f
 12062                           
 12063                           ;usb_device.c: 1980: byteToSend--;
 12064  1578  3001               	movlw	1
 12065  1579  0020               	movlb	0	; select bank0
 12066  157A  02DA               	subwf	USBCtrlTrfTxService@byteToSend,f
 12067  157B                     l6714:	
 12068  157B  0020               	movlb	0	; select bank0
 12069  157C  08DA               	movf	USBCtrlTrfTxService@byteToSend,f
 12070  157D  1903               	btfsc	3,2
 12071  157E  0008               	return
 12072  157F  2D5E               	goto	l6706
 12073  1580                     l6716:	
 12074                           ;usb_device.c: 1983: else
 12075                           ;usb_device.c: 1984: {
 12076                           ;usb_device.c: 1985: while(byteToSend)
 12077                           
 12078                           ;usb_device.c: 1981: }
 12079                           ;usb_device.c: 1982: }
 12080                           
 12081                           
 12082                           ;usb_device.c: 1986: {
 12083                           ;usb_device.c: 1987: *pDst++ = *inPipes[0].pSrc.bRam++;
 12084  1580  0022               	movlb	2	; select bank2
 12085  1581  0847               	movf	_inPipes^(0+256),w
 12086  1582  0084               	movwf	4
 12087  1583  0848               	movf	(_inPipes+1)^(0+256),w
 12088  1584  0085               	movwf	5
 12089  1585  0800               	movf	0,w	;code access
 12090  1586  0020               	movlb	0	; select bank0
 12091  1587  00D8               	movwf	??_USBCtrlTrfTxService
 12092  1588  0022               	movlb	2	; select bank2
 12093  1589  0844               	movf	_pDst^(0+256),w
 12094  158A  0086               	movwf	6
 12095  158B  0187               	clrf	7
 12096  158C  0020               	movlb	0	; select bank0
 12097  158D  0858               	movf	??_USBCtrlTrfTxService,w
 12098  158E  0081               	movwf	1
 12099  158F  3001               	movlw	1
 12100  1590  0022               	movlb	2	; select bank2
 12101  1591  07C7               	addwf	_inPipes^(0+256),f
 12102  1592  3000               	movlw	0
 12103  1593  3DC8               	addwfc	(_inPipes+1)^(0+256),f
 12104  1594  3001               	movlw	1
 12105  1595  0020               	movlb	0	; select bank0
 12106  1596  00D8               	movwf	??_USBCtrlTrfTxService
 12107  1597  0858               	movf	??_USBCtrlTrfTxService,w
 12108  1598  0022               	movlb	2	; select bank2
 12109  1599  07C4               	addwf	_pDst^(0+256),f
 12110                           
 12111                           ;usb_device.c: 1988: byteToSend--;
 12112  159A  3001               	movlw	1
 12113  159B  0020               	movlb	0	; select bank0
 12114  159C  02DA               	subwf	USBCtrlTrfTxService@byteToSend,f
 12115  159D                     l6724:	
 12116  159D  0020               	movlb	0	; select bank0
 12117  159E  08DA               	movf	USBCtrlTrfTxService@byteToSend,f
 12118  159F  1903               	btfsc	3,2
 12119  15A0  0008               	return
 12120  15A1  2D80               	goto	l6716
 12121  15A2                     __end_of_USBCtrlTrfTxService:	
 12122                           
 12123                           	psect	text46
 12124  11B5                     __ptext46:	
 12125 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12126 ;; Defined at:
 12127 ;;		line 1590 in file "../USB/usb_device.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;		None
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;		None
 12132 ;; Return value:  Size  Location     Type
 12133 ;;		None               void
 12134 ;; Registers used:
 12135 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12136 ;; Tracked objects:
 12137 ;;		On entry : 0/0
 12138 ;;		On exit  : 0/0
 12139 ;;		Unchanged: 0/0
 12140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;Total ram usage:        2 bytes
 12146 ;; Hardware stack levels used:    1
 12147 ;; Hardware stack levels required when called:    4
 12148 ;; This function calls:
 12149 ;;		Nothing
 12150 ;; This function is called by:
 12151 ;;		_USBDeviceTasks
 12152 ;;		_USBCtrlEPServiceComplete
 12153 ;;		_USBCtrlTrfRxService
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           
 12158                           ;psect for function _USBCtrlEPAllowStatusStage
 12159  11B5                     _USBCtrlEPAllowStatusStage:	
 12160                           
 12161                           ;usb_device.c: 1596: if(USBStatusStageEnabledFlag1 == FALSE)
 12162                           
 12163                           ;incstack = 0
 12164                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 12165  11B5  0022               	movlb	2	; select bank2
 12166  11B6  08BC               	movf	_USBStatusStageEnabledFlag1^(0+256),f
 12167  11B7  1D03               	skipz
 12168  11B8  0008               	return
 12169                           
 12170                           ;usb_device.c: 1597: {
 12171                           ;usb_device.c: 1598: USBStatusStageEnabledFlag1 = TRUE;
 12172  11B9  3001               	movlw	1
 12173  11BA  0020               	movlb	0	; select bank0
 12174  11BB  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12175  11BC  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12176  11BD  0022               	movlb	2	; select bank2
 12177  11BE  00BC               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12178                           
 12179                           ;usb_device.c: 1599: if(USBStatusStageEnabledFlag2 == FALSE)
 12180  11BF  08BD               	movf	_USBStatusStageEnabledFlag2^(0+256),f
 12181  11C0  1D03               	skipz
 12182  11C1  0008               	return
 12183                           
 12184                           ;usb_device.c: 1600: {
 12185                           ;usb_device.c: 1601: USBStatusStageEnabledFlag2 = TRUE;
 12186  11C2  3001               	movlw	1
 12187  11C3  0020               	movlb	0	; select bank0
 12188  11C4  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12189  11C5  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12190  11C6  0022               	movlb	2	; select bank2
 12191  11C7  00BD               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12192                           
 12193                           ;usb_device.c: 1605: if(controlTransferState == 2)
 12194  11C8  0020               	movlb	0	; select bank0
 12195  11C9  086C               	movf	_controlTransferState,w
 12196  11CA  3A02               	xorlw	2
 12197  11CB  1D03               	skipz
 12198  11CC  29D9               	goto	l6560
 12199                           
 12200                           ;usb_device.c: 1606: {
 12201                           ;usb_device.c: 1607: pBDTEntryIn[0]->CNT = 0;
 12202  11CD  0A68               	incf	_pBDTEntryIn,w
 12203  11CE  0086               	movwf	6
 12204  11CF  0187               	clrf	7
 12205  11D0  0181               	clrf	1
 12206                           
 12207                           ;usb_device.c: 1608: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12208  11D1  30C8               	movlw	200
 12209  11D2  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12210  11D3  0868               	movf	_pBDTEntryIn,w
 12211  11D4  0086               	movwf	6
 12212  11D5  0187               	clrf	7
 12213  11D6  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12214  11D7  0081               	movwf	1
 12215                           
 12216                           ;usb_device.c: 1609: }
 12217  11D8  0008               	return
 12218  11D9                     l6560:	
 12219                           
 12220                           ;usb_device.c: 1610: else if(controlTransferState == 1)
 12221  11D9  086C               	movf	_controlTransferState,w
 12222  11DA  3A01               	xorlw	1
 12223  11DB  1D03               	skipz
 12224  11DC  0008               	return
 12225                           
 12226                           ;usb_device.c: 1611: {
 12227                           ;usb_device.c: 1612: BothEP0OutUOWNsSet = FALSE;
 12228  11DD  0022               	movlb	2	; select bank2
 12229  11DE  01AC               	clrf	_BothEP0OutUOWNsSet^(0+256)
 12230                           
 12231                           ;usb_device.c: 1617: pBDTEntryEP0OutCurrent->CNT = 8;
 12232  11DF  3008               	movlw	8
 12233  11E0  0020               	movlb	0	; select bank0
 12234  11E1  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12235  11E2  0A6D               	incf	_pBDTEntryEP0OutCurrent,w
 12236  11E3  0086               	movwf	6
 12237  11E4  0187               	clrf	7
 12238  11E5  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12239  11E6  0081               	movwf	1
 12240                           
 12241                           ;usb_device.c: 1618: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12242  11E7  3040               	movlw	64
 12243  11E8  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12244  11E9  3000               	movlw	0
 12245  11EA  00D9               	movwf	??_USBCtrlEPAllowStatusStage+1
 12246  11EB  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12247  11EC  3E02               	addlw	2
 12248  11ED  0086               	movwf	6
 12249  11EE  0187               	clrf	7
 12250  11EF  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12251  11F0  3FC0               	movwi [0]fsr1
 12252  11F1  0859               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12253  11F2  3FC1               	movwi [1]fsr1
 12254                           
 12255                           ;usb_device.c: 1619: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
 12256  11F3  3084               	movlw	132
 12257  11F4  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12258  11F5  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12259  11F6  0086               	movwf	6
 12260  11F7  0187               	clrf	7
 12261  11F8  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12262  11F9  0081               	movwf	1
 12263                           
 12264                           ;usb_device.c: 1620: BothEP0OutUOWNsSet = TRUE;
 12265  11FA  0022               	movlb	2	; select bank2
 12266  11FB  01AC               	clrf	_BothEP0OutUOWNsSet^(0+256)
 12267  11FC  0AAC               	incf	_BothEP0OutUOWNsSet^(0+256),f
 12268                           
 12269                           ;usb_device.c: 1624: pBDTEntryEP0OutNext->CNT = 8;
 12270  11FD  3008               	movlw	8
 12271  11FE  0020               	movlb	0	; select bank0
 12272  11FF  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12273  1200  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12274  1201  0086               	movwf	6
 12275  1202  0187               	clrf	7
 12276  1203  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12277  1204  0081               	movwf	1
 12278                           
 12279                           ;usb_device.c: 1625: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12280  1205  3040               	movlw	64
 12281  1206  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12282  1207  3000               	movlw	0
 12283  1208  00D9               	movwf	??_USBCtrlEPAllowStatusStage+1
 12284  1209  086E               	movf	_pBDTEntryEP0OutNext,w
 12285  120A  3E02               	addlw	2
 12286  120B  0086               	movwf	6
 12287  120C  0187               	clrf	7
 12288  120D  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12289  120E  3FC0               	movwi [0]fsr1
 12290  120F  0859               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12291  1210  3FC1               	movwi [1]fsr1
 12292                           
 12293                           ;usb_device.c: 1626: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12294  1211  3080               	movlw	128
 12295  1212  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12296  1213  086E               	movf	_pBDTEntryEP0OutNext,w
 12297  1214  0086               	movwf	6
 12298  1215  0187               	clrf	7
 12299  1216  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12300  1217  0081               	movwf	1
 12301  1218  0008               	return
 12302  1219                     __end_of_USBCtrlEPAllowStatusStage:	
 12303                           
 12304                           	psect	text47
 12305  1C76                     __ptext47:	
 12306 ;; *************** function _USBStallHandler *****************
 12307 ;; Defined at:
 12308 ;;		line 2356 in file "../USB/usb_device.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;		None
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;		None
 12313 ;; Return value:  Size  Location     Type
 12314 ;;		None               void
 12315 ;; Registers used:
 12316 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12317 ;; Tracked objects:
 12318 ;;		On entry : 0/0
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;Total ram usage:        1 bytes
 12327 ;; Hardware stack levels used:    1
 12328 ;; Hardware stack levels required when called:    4
 12329 ;; This function calls:
 12330 ;;		Nothing
 12331 ;; This function is called by:
 12332 ;;		_USBDeviceTasks
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           
 12337                           ;psect for function _USBStallHandler
 12338  1C76                     _USBStallHandler:	
 12339                           
 12340                           ;usb_device.c: 2368: if(UEP0bits.EPSTALL == 1)
 12341                           
 12342                           ;incstack = 0
 12343                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12344  1C76  003D               	movlb	29	; select bank29
 12345  1C77  1C18               	btfss	24,0	;volatile
 12346  1C78  2C91               	goto	l4476
 12347                           
 12348                           ;usb_device.c: 2369: {
 12349                           ;usb_device.c: 2371: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12350  1C79  0020               	movlb	0	; select bank0
 12351  1C7A  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12352  1C7B  0086               	movwf	6
 12353  1C7C  0187               	clrf	7
 12354  1C7D  0801               	movf	1,w
 12355  1C7E  3A80               	xorlw	128
 12356  1C7F  1D03               	skipz
 12357  1C80  2C8F               	goto	l4474
 12358  1C81  0868               	movf	_pBDTEntryIn,w
 12359  1C82  0086               	movwf	6
 12360  1C83  0187               	clrf	7
 12361  1C84  0801               	movf	1,w
 12362  1C85  3A84               	xorlw	132
 12363  1C86  1D03               	skipz
 12364  1C87  2C8F               	goto	l4474
 12365                           
 12366                           ;usb_device.c: 2372: {
 12367                           ;usb_device.c: 2374: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 12368  1C88  308C               	movlw	140
 12369  1C89  00D8               	movwf	??_USBStallHandler
 12370  1C8A  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12371  1C8B  0086               	movwf	6
 12372  1C8C  0187               	clrf	7
 12373  1C8D  0858               	movf	??_USBStallHandler,w
 12374  1C8E  0081               	movwf	1
 12375  1C8F                     l4474:	
 12376                           
 12377                           ;usb_device.c: 2375: }
 12378                           ;usb_device.c: 2376: UEP0bits.EPSTALL = 0;
 12379  1C8F  003D               	movlb	29	; select bank29
 12380  1C90  1018               	bcf	24,0	;volatile
 12381  1C91                     l4476:	
 12382                           
 12383                           ;usb_device.c: 2377: }
 12384                           ;usb_device.c: 2379: (UIR &= 0xDF);
 12385  1C91  30DF               	movlw	223
 12386  1C92  0020               	movlb	0	; select bank0
 12387  1C93  00D8               	movwf	??_USBStallHandler
 12388  1C94  0858               	movf	??_USBStallHandler,w
 12389  1C95  003D               	movlb	29	; select bank29
 12390  1C96  0590               	andwf	16,f	;volatile
 12391  1C97  0008               	return
 12392  1C98                     __end_of_USBStallHandler:	
 12393                           
 12394                           	psect	text48
 12395  1BA2                     __ptext48:	
 12396 ;; *************** function _USBSuspend *****************
 12397 ;; Defined at:
 12398 ;;		line 2399 in file "../USB/usb_device.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;		None
 12401 ;; Auto vars:     Size  Location     Type
 12402 ;;		None
 12403 ;; Return value:  Size  Location     Type
 12404 ;;		None               void
 12405 ;; Registers used:
 12406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;Total ram usage:        1 bytes
 12417 ;; Hardware stack levels used:    1
 12418 ;; Hardware stack levels required when called:    8
 12419 ;; This function calls:
 12420 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12421 ;; This function is called by:
 12422 ;;		_USBDeviceTasks
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           
 12427                           ;psect for function _USBSuspend
 12428  1BA2                     _USBSuspend:	
 12429                           
 12430                           ;usb_device.c: 2423: UIEbits.ACTVIE = 1;
 12431                           
 12432                           ;incstack = 0
 12433                           ; Regs used in _USBSuspend: [allreg]
 12434  1BA2  003D               	movlb	29	; select bank29
 12435  1BA3  1512               	bsf	18,2	;volatile
 12436                           
 12437                           ;usb_device.c: 2424: (UIR &= 0xEF);
 12438  1BA4  30EF               	movlw	239
 12439  1BA5  0021               	movlb	1	; select bank1
 12440  1BA6  00A6               	movwf	??_USBSuspend^(0+128)
 12441  1BA7  0826               	movf	??_USBSuspend^(0+128),w
 12442  1BA8  003D               	movlb	29	; select bank29
 12443  1BA9  0590               	andwf	16,f	;volatile
 12444                           
 12445                           ;usb_device.c: 2427: UCONbits.SUSPND = 1;
 12446  1BAA  148E               	bsf	14,1	;volatile
 12447                           
 12448                           ;usb_device.c: 2430: USBBusIsSuspended = TRUE;
 12449  1BAB  0022               	movlb	2	; select bank2
 12450  1BAC  01B7               	clrf	_USBBusIsSuspended^(0+256)
 12451  1BAD  0AB7               	incf	_USBBusIsSuspended^(0+256),f
 12452                           
 12453                           ;usb_device.c: 2437: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12454  1BAE  3075               	movlw	117
 12455  1BAF  0021               	movlb	1	; select bank1
 12456  1BB0  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12457  1BB1  3000               	movlw	0
 12458  1BB2  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12459  1BB3  3000               	movlw	0
 12460  1BB4  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12461  1BB5  3000               	movlw	0
 12462  1BB6  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 12463  1BB7  3000               	movlw	0
 12464  1BB8  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12465  1BB9  3000               	movlw	0
 12466  1BBA  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 12467  1BBB  319D  25A4         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12468  1BBD  0008               	return
 12469  1BBE                     __end_of_USBSuspend:	
 12470                           
 12471                           	psect	text49
 12472  1B6B                     __ptext49:	
 12473 ;; *************** function _USBWakeFromSuspend *****************
 12474 ;; Defined at:
 12475 ;;		line 2456 in file "../USB/usb_device.c"
 12476 ;; Parameters:    Size  Location     Type
 12477 ;;		None
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;		None
 12480 ;; Return value:  Size  Location     Type
 12481 ;;		None               void
 12482 ;; Registers used:
 12483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;Total ram usage:        1 bytes
 12494 ;; Hardware stack levels used:    1
 12495 ;; Hardware stack levels required when called:    8
 12496 ;; This function calls:
 12497 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12498 ;; This function is called by:
 12499 ;;		_USBDeviceTasks
 12500 ;; This function uses a non-reentrant model
 12501 ;;
 12502                           
 12503                           
 12504                           ;psect for function _USBWakeFromSuspend
 12505  1B6B                     _USBWakeFromSuspend:	
 12506                           
 12507                           ;usb_device.c: 2457: USBBusIsSuspended = FALSE;
 12508                           
 12509                           ;incstack = 0
 12510                           ; Regs used in _USBWakeFromSuspend: [allreg]
 12511  1B6B  0022               	movlb	2	; select bank2
 12512  1B6C  01B7               	clrf	_USBBusIsSuspended^(0+256)
 12513                           
 12514                           ;usb_device.c: 2463: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12515  1B6D  3074               	movlw	116
 12516  1B6E  0021               	movlb	1	; select bank1
 12517  1B6F  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12518  1B70  3000               	movlw	0
 12519  1B71  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12520  1B72  3000               	movlw	0
 12521  1B73  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12522  1B74  3000               	movlw	0
 12523  1B75  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 12524  1B76  3000               	movlw	0
 12525  1B77  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12526  1B78  3000               	movlw	0
 12527  1B79  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 12528  1B7A  319D  25A4         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12529                           
 12530                           ;usb_device.c: 2470: UCONbits.SUSPND = 0;
 12531  1B7C  003D               	movlb	29	; select bank29
 12532  1B7D  108E               	bcf	14,1	;volatile
 12533                           
 12534                           ;usb_device.c: 2475: UIEbits.ACTVIE = 0;
 12535  1B7E  1112               	bcf	18,2	;volatile
 12536                           
 12537                           ;usb_device.c: 2495: {
 12538                           ;usb_device.c: 2496: (UIR &= 0xFB);
 12539  1B7F  30FB               	movlw	251
 12540  1B80  0021               	movlb	1	; select bank1
 12541  1B81  00A6               	movwf	??_USBWakeFromSuspend^(0+128)
 12542  1B82  0826               	movf	??_USBWakeFromSuspend^(0+128),w
 12543  1B83  003D               	movlb	29	; select bank29
 12544  1B84  0590               	andwf	16,f	;volatile
 12545  1B85  0008               	return
 12546  1B86                     __end_of_USBWakeFromSuspend:	
 12547                           
 12548                           	psect	text50
 12549  1DA4                     __ptext50:	
 12550 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 12551 ;; Defined at:
 12552 ;;		line 630 in file "main.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;  event           2    0[BANK1 ] int 
 12555 ;;  pdata           2    2[BANK1 ] PTR void 
 12556 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(32), 
 12557 ;;  size            2    4[BANK1 ] unsigned short 
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;		None
 12560 ;; Return value:  Size  Location     Type
 12561 ;;                  1    wreg      enum E5
 12562 ;; Registers used:
 12563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12564 ;; Tracked objects:
 12565 ;;		On entry : 0/0
 12566 ;;		On exit  : 0/0
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12569 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12572 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12573 ;;Total ram usage:        6 bytes
 12574 ;; Hardware stack levels used:    1
 12575 ;; Hardware stack levels required when called:    7
 12576 ;; This function calls:
 12577 ;;		_USBCBSuspend
 12578 ;;		_USBCBWakeFromSuspend
 12579 ;;		_USBCB_SOF_Handler
 12580 ;;		_USBCBErrorHandler
 12581 ;;		_USBCBCheckOtherReq
 12582 ;;		_USBCBStdSetDscHandler
 12583 ;;		_USBCBInitEP
 12584 ;; This function is called by:
 12585 ;;		_USBDeviceTasks
 12586 ;;		_USBStdSetCfgHandler
 12587 ;;		_USBSuspend
 12588 ;;		_USBWakeFromSuspend
 12589 ;;		_USBCtrlTrfSetupHandler
 12590 ;;		_USBCheckStdRequest
 12591 ;;		_USBStdFeatureReqHandler
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           
 12596                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
 12597  1DA4                     _USER_USB_CALLBACK_EVENT_HANDLER:	
 12598                           
 12599                           ;main.c: 631: switch( event )
 12600                           
 12601                           ;incstack = 0
 12602                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12603  1DA4  2DBA               	goto	l6538
 12604  1DA5                     l6522:	
 12605                           ;main.c: 636: case EVENT_SOF:
 12606                           
 12607                           ;main.c: 635: break;
 12608                           
 12609                           ;main.c: 632: {
 12610                           ;main.c: 633: case EVENT_TRANSFER:
 12611                           
 12612                           
 12613                           ;main.c: 637: USBCB_SOF_Handler();
 12614  1DA5  3190  2004         	fcall	_USBCB_SOF_Handler
 12615                           
 12616                           ;main.c: 638: break;
 12617  1DA7  0008               	return
 12618  1DA8                     l6524:	
 12619                           ;main.c: 639: case EVENT_SUSPEND:
 12620                           
 12621                           
 12622                           ;main.c: 640: USBCBSuspend();
 12623  1DA8  3190  2002         	fcall	_USBCBSuspend
 12624                           
 12625                           ;main.c: 641: break;
 12626  1DAA  0008               	return
 12627  1DAB                     l6526:	
 12628                           ;main.c: 642: case EVENT_RESUME:
 12629                           
 12630                           
 12631                           ;main.c: 643: USBCBWakeFromSuspend();
 12632  1DAB  3190  2003         	fcall	_USBCBWakeFromSuspend
 12633                           
 12634                           ;main.c: 644: break;
 12635  1DAD  0008               	return
 12636  1DAE                     l6528:	
 12637                           ;main.c: 645: case EVENT_CONFIGURED:
 12638                           
 12639                           
 12640                           ;main.c: 646: USBCBInitEP();
 12641  1DAE  319B  2386         	fcall	_USBCBInitEP
 12642                           
 12643                           ;main.c: 647: break;
 12644  1DB0  0008               	return
 12645  1DB1                     l6530:	
 12646                           ;main.c: 648: case EVENT_SET_DESCRIPTOR:
 12647                           
 12648                           
 12649                           ;main.c: 649: USBCBStdSetDscHandler();
 12650  1DB1  3180  2003         	fcall	_USBCBStdSetDscHandler
 12651                           
 12652                           ;main.c: 650: break;
 12653  1DB3  0008               	return
 12654  1DB4                     l6532:	
 12655                           ;main.c: 651: case EVENT_EP0_REQUEST:
 12656                           
 12657                           
 12658                           ;main.c: 652: USBCBCheckOtherReq();
 12659  1DB4  3187  27FD         	fcall	_USBCBCheckOtherReq
 12660                           
 12661                           ;main.c: 653: break;
 12662  1DB6  0008               	return
 12663  1DB7                     l6534:	
 12664                           ;main.c: 654: case EVENT_BUS_ERROR:
 12665                           
 12666                           
 12667                           ;main.c: 655: USBCBErrorHandler();
 12668  1DB7  3190  2005         	fcall	_USBCBErrorHandler
 12669                           
 12670                           ;main.c: 669: }
 12671                           
 12672                           ;main.c: 668: break;
 12673                           
 12674                           ;main.c: 667: default:
 12675                           
 12676                           ;main.c: 666: break;
 12677                           
 12678                           ;main.c: 657: case EVENT_TRANSFER_TERMINATED:
 12679                           
 12680                           ;main.c: 656: break;
 12681  1DB9  0008               	return
 12682  1DBA                     l6538:	
 12683                           
 12684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12685                           ; Switch size 1, requested type "space"
 12686                           ; Number of cases is 2, Range of values is 0 to 127
 12687                           ; switch strategies available:
 12688                           ; Name         Instructions Cycles
 12689                           ; simple_byte            7     4 (average)
 12690                           ; direct_byte          262     6 (fixed)
 12691                           ; jumptable            260     6 (fixed)
 12692                           ; rangetable           132     6 (fixed)
 12693                           ; spacedrange          261     8 (fixed)
 12694                           ; locatedrange         128     3 (fixed)
 12695                           ;	Chosen strategy is simple_byte
 12696  1DBA  0021               	movlb	1	; select bank1
 12697  1DBB  0821               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
 12698  1DBC  3A00               	xorlw	0	; case 0
 12699  1DBD  1903               	skipnz
 12700  1DBE  2DC3               	goto	l7754
 12701  1DBF  3A7F               	xorlw	127	; case 127
 12702  1DC0  1903               	skipnz
 12703  1DC1  2DDD               	goto	l7756
 12704  1DC2  2DE2               	goto	l905
 12705  1DC3                     l7754:	
 12706                           
 12707                           ; Switch size 1, requested type "space"
 12708                           ; Number of cases is 8, Range of values is 1 to 117
 12709                           ; switch strategies available:
 12710                           ; Name         Instructions Cycles
 12711                           ; simple_byte           25    13 (average)
 12712                           ; direct_byte          243     9 (fixed)
 12713                           ; jumptable            263     9 (fixed)
 12714                           ;	Chosen strategy is simple_byte
 12715  1DC3  0820               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 12716  1DC4  3A01               	xorlw	1	; case 1
 12717  1DC5  1903               	skipnz
 12718  1DC6  2DAE               	goto	l6528
 12719  1DC7  3A03               	xorlw	3	; case 2
 12720  1DC8  1903               	skipnz
 12721  1DC9  2DB1               	goto	l6530
 12722  1DCA  3A01               	xorlw	1	; case 3
 12723  1DCB  1903               	skipnz
 12724  1DCC  2DB4               	goto	l6532
 12725  1DCD  3A06               	xorlw	6	; case 5
 12726  1DCE  1903               	skipnz
 12727  1DCF  2DE2               	goto	l905
 12728  1DD0  3A77               	xorlw	119	; case 114
 12729  1DD1  1903               	skipnz
 12730  1DD2  2DE2               	goto	l905
 12731  1DD3  3A01               	xorlw	1	; case 115
 12732  1DD4  1903               	skipnz
 12733  1DD5  2DA5               	goto	l6522
 12734  1DD6  3A07               	xorlw	7	; case 116
 12735  1DD7  1903               	skipnz
 12736  1DD8  2DAB               	goto	l6526
 12737  1DD9  3A01               	xorlw	1	; case 117
 12738  1DDA  1903               	skipnz
 12739  1DDB  2DA8               	goto	l6524
 12740  1DDC  2DE2               	goto	l905
 12741  1DDD                     l7756:	
 12742                           
 12743                           ; Switch size 1, requested type "space"
 12744                           ; Number of cases is 1, Range of values is 255 to 255
 12745                           ; switch strategies available:
 12746                           ; Name         Instructions Cycles
 12747                           ; simple_byte            4     3 (average)
 12748                           ; direct_byte            7     5 (fixed)
 12749                           ; jumptable            263     9 (fixed)
 12750                           ;	Chosen strategy is simple_byte
 12751  1DDD  0820               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 12752  1DDE  3AFF               	xorlw	255	; case 255
 12753  1DDF  1903               	skipnz
 12754  1DE0  2DB7               	goto	l6534
 12755  1DE1  2DE2               	goto	l905
 12756  1DE2                     l905:	
 12757                           ;main.c: 670: return TRUE;
 12758                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 12759                           
 12760  1DE2  0008               	return
 12761  1DE3                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
 12762                           
 12763                           	psect	text51
 12764  1B86                     __ptext51:	
 12765 ;; *************** function _USBCBInitEP *****************
 12766 ;; Defined at:
 12767 ;;		line 460 in file "main.c"
 12768 ;; Parameters:    Size  Location     Type
 12769 ;;		None
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;		None
 12772 ;; Return value:  Size  Location     Type
 12773 ;;		None               void
 12774 ;; Registers used:
 12775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12776 ;; Tracked objects:
 12777 ;;		On entry : 0/0
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12785 ;;Total ram usage:        3 bytes
 12786 ;; Hardware stack levels used:    1
 12787 ;; Hardware stack levels required when called:    6
 12788 ;; This function calls:
 12789 ;;		_USBEnableEndpoint
 12790 ;;		_USBTransferOnePacket
 12791 ;; This function is called by:
 12792 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796                           
 12797                           ;psect for function _USBCBInitEP
 12798  1B86                     _USBCBInitEP:	
 12799                           
 12800                           ;main.c: 462: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
 12801                           
 12802                           ;incstack = 0
 12803                           ; Regs used in _USBCBInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12804  1B86  301E               	movlw	30
 12805  1B87  0020               	movlb	0	; select bank0
 12806  1B88  00E5               	movwf	??_USBCBInitEP
 12807  1B89  0865               	movf	??_USBCBInitEP,w
 12808  1B8A  00DF               	movwf	?_USBEnableEndpoint
 12809  1B8B  3001               	movlw	1
 12810  1B8C  319C  24BA  319B   	fcall	_USBEnableEndpoint
 12811                           
 12812                           ;main.c: 464: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
 12813  1B8F  0020               	movlb	0	; select bank0
 12814  1B90  01DC               	clrf	?_USBTransferOnePacket
 12815  1B91  30A0               	movlw	160
 12816  1B92  00E5               	movwf	??_USBCBInitEP
 12817  1B93  0865               	movf	??_USBCBInitEP,w
 12818  1B94  00DD               	movwf	?_USBTransferOnePacket+1
 12819  1B95  3040               	movlw	64
 12820  1B96  00E6               	movwf	??_USBCBInitEP+1
 12821  1B97  0866               	movf	??_USBCBInitEP+1,w
 12822  1B98  00DE               	movwf	?_USBTransferOnePacket+2
 12823  1B99  3001               	movlw	1
 12824  1B9A  319E  266B         	fcall	_USBTransferOnePacket
 12825  1B9C  0020               	movlb	0	; select bank0
 12826  1B9D  00E7               	movwf	??_USBCBInitEP+2
 12827  1B9E  0867               	movf	??_USBCBInitEP+2,w
 12828  1B9F  0022               	movlb	2	; select bank2
 12829  1BA0  00BB               	movwf	_USBGenericOutHandle^(0+256)
 12830  1BA1  0008               	return
 12831  1BA2                     __end_of_USBCBInitEP:	
 12832                           
 12833                           	psect	text52
 12834  1E6B                     __ptext52:	
 12835 ;; *************** function _USBTransferOnePacket *****************
 12836 ;; Defined at:
 12837 ;;		line 1173 in file "../USB/usb_device.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;  ep              1    wreg     unsigned char 
 12840 ;;  dir             1   12[BANK0 ] unsigned char 
 12841 ;;  data            1   13[BANK0 ] PTR unsigned char 
 12842 ;;		 -> INPacket(64), OUTPacket(64), 
 12843 ;;  len             1   14[BANK0 ] unsigned char 
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;  ep              1   17[BANK0 ] unsigned char 
 12846 ;;  handle          1   18[BANK0 ] PTR volatile struct __BD
 12847 ;;		 -> NULL(0), BDT(32), 
 12848 ;; Return value:  Size  Location     Type
 12849 ;;                  1    wreg      PTR void 
 12850 ;; Registers used:
 12851 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12852 ;; Tracked objects:
 12853 ;;		On entry : 0/0
 12854 ;;		On exit  : 0/0
 12855 ;;		Unchanged: 0/0
 12856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12857 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;Total ram usage:        7 bytes
 12862 ;; Hardware stack levels used:    1
 12863 ;; Hardware stack levels required when called:    4
 12864 ;; This function calls:
 12865 ;;		Nothing
 12866 ;; This function is called by:
 12867 ;;		_ProcessIO
 12868 ;;		_USBCBInitEP
 12869 ;; This function uses a non-reentrant model
 12870 ;;
 12871                           
 12872                           
 12873                           ;psect for function _USBTransferOnePacket
 12874  1E6B                     _USBTransferOnePacket:	
 12875                           
 12876                           ;incstack = 0
 12877                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 12878                           ;USBTransferOnePacket@ep stored from wreg
 12879  1E6B  0020               	movlb	0	; select bank0
 12880  1E6C  00E1               	movwf	USBTransferOnePacket@ep
 12881                           
 12882                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
 12883                           ;usb_device.c: 1177: if(dir != 0)
 12884  1E6D  085C               	movf	USBTransferOnePacket@dir,w
 12885  1E6E  1903               	btfsc	3,2
 12886  1E6F  2E75               	goto	l6644
 12887                           
 12888                           ;usb_device.c: 1178: {
 12889                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
 12890  1E70  0861               	movf	USBTransferOnePacket@ep,w
 12891  1E71  3E68               	addlw	_pBDTEntryIn& (0+255)
 12892  1E72  0086               	movwf	6
 12893  1E73  0187               	clrf	7
 12894  1E74  2E7A               	goto	L15
 12895  1E75                     l6644:	
 12896                           ;usb_device.c: 1181: }
 12897                           
 12898                           
 12899                           ;usb_device.c: 1182: else
 12900                           ;usb_device.c: 1183: {
 12901                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
 12902  1E75  0861               	movf	USBTransferOnePacket@ep,w
 12903  1E76  3E28               	addlw	_pBDTEntryOut& (0+255)
 12904  1E77  0086               	movwf	6
 12905  1E78  3001               	movlw	1	; select bank2/3
 12906  1E79  0087               	movwf	7
 12907  1E7A                     L15:	
 12908  1E7A  0801               	movf	1,w
 12909  1E7B  00DF               	movwf	??_USBTransferOnePacket
 12910  1E7C  085F               	movf	??_USBTransferOnePacket,w
 12911  1E7D  00E2               	movwf	USBTransferOnePacket@handle
 12912                           
 12913                           ;usb_device.c: 1186: }
 12914                           ;usb_device.c: 1190: if(handle == 0)
 12915  1E7E  08E2               	movf	USBTransferOnePacket@handle,f
 12916  1E7F  1D03               	skipz
 12917  1E80  2E83               	goto	l6652
 12918                           
 12919                           ;usb_device.c: 1191: {
 12920                           ;usb_device.c: 1192: return 0;
 12921  1E81  3000               	movlw	0
 12922  1E82  0008               	return
 12923  1E83                     l6652:	
 12924                           
 12925                           ;usb_device.c: 1193: }
 12926                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
 12927  1E83  085D               	movf	USBTransferOnePacket@data,w
 12928  1E84  00DF               	movwf	??_USBTransferOnePacket
 12929  1E85  3002               	movlw	2
 12930  1E86  00E0               	movwf	??_USBTransferOnePacket+1
 12931  1E87  0862               	movf	USBTransferOnePacket@handle,w
 12932  1E88  3E02               	addlw	2
 12933  1E89  0086               	movwf	6
 12934  1E8A  0187               	clrf	7
 12935  1E8B  085F               	movf	??_USBTransferOnePacket,w
 12936  1E8C  3FC0               	movwi [0]fsr1
 12937  1E8D  0860               	movf	??_USBTransferOnePacket+1,w
 12938  1E8E  3FC1               	movwi [1]fsr1
 12939                           
 12940                           ;usb_device.c: 1207: handle->CNT = len;
 12941  1E8F  085E               	movf	USBTransferOnePacket@len,w
 12942  1E90  00DF               	movwf	??_USBTransferOnePacket
 12943  1E91  0A62               	incf	USBTransferOnePacket@handle,w
 12944  1E92  0086               	movwf	6
 12945  1E93  0187               	clrf	7
 12946  1E94  085F               	movf	??_USBTransferOnePacket,w
 12947  1E95  0081               	movwf	1
 12948                           
 12949                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
 12950  1E96  3040               	movlw	64
 12951  1E97  00DF               	movwf	??_USBTransferOnePacket
 12952  1E98  0862               	movf	USBTransferOnePacket@handle,w
 12953  1E99  0086               	movwf	6
 12954  1E9A  0187               	clrf	7
 12955  1E9B  085F               	movf	??_USBTransferOnePacket,w
 12956  1E9C  0581               	andwf	1,f
 12957                           
 12958                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
 12959  1E9D  3088               	movlw	136
 12960  1E9E  00DF               	movwf	??_USBTransferOnePacket
 12961  1E9F  0862               	movf	USBTransferOnePacket@handle,w
 12962  1EA0  0086               	movwf	6
 12963  1EA1  0187               	clrf	7
 12964  1EA2  085F               	movf	??_USBTransferOnePacket,w
 12965  1EA3  0481               	iorwf	1,f
 12966                           
 12967                           ;usb_device.c: 1212: if(dir != 0)
 12968  1EA4  085C               	movf	USBTransferOnePacket@dir,w
 12969  1EA5  1903               	btfsc	3,2
 12970  1EA6  2EAE               	goto	l6662
 12971                           
 12972                           ;usb_device.c: 1213: {
 12973                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
 12974  1EA7  3004               	movlw	4
 12975  1EA8  00DF               	movwf	??_USBTransferOnePacket
 12976  1EA9  0861               	movf	USBTransferOnePacket@ep,w
 12977  1EAA  3E68               	addlw	_pBDTEntryIn& (0+255)
 12978  1EAB  0086               	movwf	6
 12979  1EAC  0187               	clrf	7
 12980  1EAD  2EB5               	goto	L16
 12981  1EAE                     l6662:	
 12982                           ;usb_device.c: 1216: }
 12983                           
 12984                           
 12985                           ;usb_device.c: 1217: else
 12986                           ;usb_device.c: 1218: {
 12987                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
 12988  1EAE  3004               	movlw	4
 12989  1EAF  00DF               	movwf	??_USBTransferOnePacket
 12990  1EB0  0861               	movf	USBTransferOnePacket@ep,w
 12991  1EB1  3E28               	addlw	_pBDTEntryOut& (0+255)
 12992  1EB2  0086               	movwf	6
 12993  1EB3  3001               	movlw	1	; select bank2/3
 12994  1EB4  0087               	movwf	7
 12995  1EB5                     L16:	
 12996  1EB5  085F               	movf	??_USBTransferOnePacket,w
 12997  1EB6  0681               	xorwf	1,f
 12998                           
 12999                           ;usb_device.c: 1221: }
 13000                           ;usb_device.c: 1222: return (void*)handle;
 13001  1EB7  0862               	movf	USBTransferOnePacket@handle,w
 13002  1EB8  0008               	return
 13003  1EB9                     __end_of_USBTransferOnePacket:	
 13004                           
 13005                           	psect	text53
 13006  1CBA                     __ptext53:	
 13007 ;; *************** function _USBEnableEndpoint *****************
 13008 ;; Defined at:
 13009 ;;		line 1056 in file "../USB/usb_device.c"
 13010 ;; Parameters:    Size  Location     Type
 13011 ;;  ep              1    wreg     unsigned char 
 13012 ;;  options         1   15[BANK0 ] unsigned char 
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;  ep              1   20[BANK0 ] unsigned char 
 13015 ;;  p               2   18[BANK0 ] PTR unsigned char 
 13016 ;;		 -> UEP0(1), 
 13017 ;; Return value:  Size  Location     Type
 13018 ;;		None               void
 13019 ;; Registers used:
 13020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13026 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;Total ram usage:        6 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    5
 13033 ;; This function calls:
 13034 ;;		_USBConfigureEndpoint
 13035 ;; This function is called by:
 13036 ;;		_USBCBInitEP
 13037 ;; This function uses a non-reentrant model
 13038 ;;
 13039                           
 13040                           
 13041                           ;psect for function _USBEnableEndpoint
 13042  1CBA                     _USBEnableEndpoint:	
 13043                           
 13044                           ;incstack = 0
 13045                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13046                           ;USBEnableEndpoint@ep stored from wreg
 13047  1CBA  0020               	movlb	0	; select bank0
 13048  1CBB  00E4               	movwf	USBEnableEndpoint@ep
 13049                           
 13050                           ;usb_device.c: 1057: unsigned char* p;
 13051                           ;usb_device.c: 1061: if(options & 0x04)
 13052  1CBC  1D5F               	btfss	USBEnableEndpoint@options,2
 13053  1CBD  2CC3               	goto	l6616
 13054                           
 13055                           ;usb_device.c: 1062: {
 13056                           ;usb_device.c: 1063: USBConfigureEndpoint(ep, 0);
 13057  1CBE  01D8               	clrf	?_USBConfigureEndpoint
 13058  1CBF  0864               	movf	USBEnableEndpoint@ep,w
 13059  1CC0  319D  25E3  319C   	fcall	_USBConfigureEndpoint
 13060  1CC3                     l6616:	
 13061                           
 13062                           ;usb_device.c: 1064: }
 13063                           ;usb_device.c: 1065: if(options & 0x02)
 13064  1CC3  0020               	movlb	0	; select bank0
 13065  1CC4  1CDF               	btfss	USBEnableEndpoint@options,1
 13066  1CC5  2CCB               	goto	l6620
 13067                           
 13068                           ;usb_device.c: 1066: {
 13069                           ;usb_device.c: 1067: USBConfigureEndpoint(ep, 1);
 13070  1CC6  01D8               	clrf	?_USBConfigureEndpoint
 13071  1CC7  0AD8               	incf	?_USBConfigureEndpoint,f
 13072  1CC8  0864               	movf	USBEnableEndpoint@ep,w
 13073  1CC9  319D  25E3         	fcall	_USBConfigureEndpoint
 13074  1CCB                     l6620:	
 13075                           
 13076                           ;usb_device.c: 1068: }
 13077                           ;usb_device.c: 1076: p = (unsigned char*)(&UEP0+ep);
 13078  1CCB  0020               	movlb	0	; select bank0
 13079  1CCC  0864               	movf	USBEnableEndpoint@ep,w
 13080  1CCD  3E98               	addlw	152
 13081  1CCE  00E0               	movwf	??_USBEnableEndpoint
 13082  1CCF  01E1               	clrf	??_USBEnableEndpoint+1
 13083  1CD0  300E               	movlw	14
 13084  1CD1  3DE1               	addwfc	??_USBEnableEndpoint+1,f
 13085  1CD2  0860               	movf	??_USBEnableEndpoint,w
 13086  1CD3  00E2               	movwf	USBEnableEndpoint@p
 13087  1CD4  0861               	movf	??_USBEnableEndpoint+1,w
 13088  1CD5  00E3               	movwf	USBEnableEndpoint@p+1
 13089                           
 13090                           ;usb_device.c: 1078: *p = options;
 13091  1CD6  085F               	movf	USBEnableEndpoint@options,w
 13092  1CD7  00E0               	movwf	??_USBEnableEndpoint
 13093  1CD8  0862               	movf	USBEnableEndpoint@p,w
 13094  1CD9  0086               	movwf	6
 13095  1CDA  0863               	movf	USBEnableEndpoint@p+1,w
 13096  1CDB  0087               	movwf	7
 13097  1CDC  0860               	movf	??_USBEnableEndpoint,w
 13098  1CDD  0081               	movwf	1
 13099  1CDE  0008               	return
 13100  1CDF                     __end_of_USBEnableEndpoint:	
 13101                           
 13102                           	psect	text54
 13103  1DE3                     __ptext54:	
 13104 ;; *************** function _USBConfigureEndpoint *****************
 13105 ;; Defined at:
 13106 ;;		line 1713 in file "../USB/usb_device.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;  EPNum           1    wreg     unsigned char 
 13109 ;;  direction       1    8[BANK0 ] unsigned char 
 13110 ;; Auto vars:     Size  Location     Type
 13111 ;;  EPNum           1   13[BANK0 ] unsigned char 
 13112 ;;  handle          1   14[BANK0 ] PTR volatile struct __BD
 13113 ;;		 -> BDT(32), 
 13114 ;; Return value:  Size  Location     Type
 13115 ;;		None               void
 13116 ;; Registers used:
 13117 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13123 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13124 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13125 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13126 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;Total ram usage:        7 bytes
 13128 ;; Hardware stack levels used:    1
 13129 ;; Hardware stack levels required when called:    4
 13130 ;; This function calls:
 13131 ;;		Nothing
 13132 ;; This function is called by:
 13133 ;;		_USBEnableEndpoint
 13134 ;; This function uses a non-reentrant model
 13135 ;;
 13136                           
 13137                           
 13138                           ;psect for function _USBConfigureEndpoint
 13139  1DE3                     _USBConfigureEndpoint:	
 13140                           
 13141                           ;incstack = 0
 13142                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13143                           ;USBConfigureEndpoint@EPNum stored from wreg
 13144  1DE3  0020               	movlb	0	; select bank0
 13145  1DE4  00DD               	movwf	USBConfigureEndpoint@EPNum
 13146                           
 13147                           ;usb_device.c: 1714: volatile BDT_ENTRY* handle;
 13148                           ;usb_device.c: 1718: handle = (volatile BDT_ENTRY*)&BDT[0];
 13149  1DE5  3020               	movlw	32
 13150  1DE6  00D9               	movwf	??_USBConfigureEndpoint
 13151  1DE7  0859               	movf	??_USBConfigureEndpoint,w
 13152  1DE8  00DE               	movwf	USBConfigureEndpoint@handle
 13153                           
 13154                           ;usb_device.c: 1719: handle += (4*EPNum+2*direction+0u);
 13155  1DE9  0858               	movf	USBConfigureEndpoint@direction,w
 13156  1DEA  00D9               	movwf	??_USBConfigureEndpoint
 13157  1DEB  3001               	movlw	1
 13158  1DEC                     u7295:	
 13159  1DEC  35D9               	lslf	??_USBConfigureEndpoint,f
 13160  1DED  0B89               	decfsz	9,f
 13161  1DEE  2DEC               	goto	u7295
 13162  1DEF  085D               	movf	USBConfigureEndpoint@EPNum,w
 13163  1DF0  00DA               	movwf	??_USBConfigureEndpoint+1
 13164  1DF1  3001               	movlw	1
 13165  1DF2                     u7305:	
 13166  1DF2  35DA               	lslf	??_USBConfigureEndpoint+1,f
 13167  1DF3  3EFF               	addlw	-1
 13168  1DF4  1D03               	skipz
 13169  1DF5  2DF2               	goto	u7305
 13170  1DF6  355A               	lslf	??_USBConfigureEndpoint+1,w
 13171  1DF7  0759               	addwf	??_USBConfigureEndpoint,w
 13172  1DF8  00DB               	movwf	??_USBConfigureEndpoint+2
 13173  1DF9  3001               	movlw	1
 13174  1DFA                     u7315:	
 13175  1DFA  35DB               	lslf	??_USBConfigureEndpoint+2,f
 13176  1DFB  3EFF               	addlw	-1
 13177  1DFC  1D03               	skipz
 13178  1DFD  2DFA               	goto	u7315
 13179  1DFE  355B               	lslf	??_USBConfigureEndpoint+2,w
 13180  1DFF  00DC               	movwf	??_USBConfigureEndpoint+3
 13181  1E00  085C               	movf	??_USBConfigureEndpoint+3,w
 13182  1E01  07DE               	addwf	USBConfigureEndpoint@handle,f
 13183                           
 13184                           ;usb_device.c: 1721: handle->STAT.UOWN = 0;
 13185  1E02  085E               	movf	USBConfigureEndpoint@handle,w
 13186  1E03  0086               	movwf	6
 13187  1E04  0187               	clrf	7
 13188  1E05  1381               	bcf	1,7
 13189                           
 13190                           ;usb_device.c: 1726: if(direction == 0)
 13191  1E06  08D8               	movf	USBConfigureEndpoint@direction,f
 13192  1E07  1D03               	skipz
 13193  1E08  2E11               	goto	l6634
 13194                           
 13195                           ;usb_device.c: 1727: {
 13196                           ;usb_device.c: 1728: pBDTEntryOut[EPNum] = handle;
 13197  1E09  085E               	movf	USBConfigureEndpoint@handle,w
 13198  1E0A  00D9               	movwf	??_USBConfigureEndpoint
 13199  1E0B  085D               	movf	USBConfigureEndpoint@EPNum,w
 13200  1E0C  3E28               	addlw	_pBDTEntryOut& (0+255)
 13201  1E0D  0086               	movwf	6
 13202  1E0E  3001               	movlw	1	; select bank2/3
 13203  1E0F  0087               	movwf	7
 13204  1E10  2E17               	goto	L17
 13205  1E11                     l6634:	
 13206                           ;usb_device.c: 1729: }
 13207                           
 13208                           
 13209                           ;usb_device.c: 1730: else
 13210                           ;usb_device.c: 1731: {
 13211                           ;usb_device.c: 1732: pBDTEntryIn[EPNum] = handle;
 13212  1E11  085E               	movf	USBConfigureEndpoint@handle,w
 13213  1E12  00D9               	movwf	??_USBConfigureEndpoint
 13214  1E13  085D               	movf	USBConfigureEndpoint@EPNum,w
 13215  1E14  3E68               	addlw	_pBDTEntryIn& (0+255)
 13216  1E15  0086               	movwf	6
 13217  1E16  0187               	clrf	7
 13218  1E17                     L17:	
 13219  1E17  0859               	movf	??_USBConfigureEndpoint,w
 13220  1E18  0081               	movwf	1
 13221                           
 13222                           ;usb_device.c: 1733: }
 13223                           ;usb_device.c: 1736: handle->STAT.DTS = 0;
 13224  1E19  085E               	movf	USBConfigureEndpoint@handle,w
 13225  1E1A  0086               	movwf	6
 13226  1E1B  0187               	clrf	7
 13227  1E1C  1301               	bcf	1,6
 13228                           
 13229                           ;usb_device.c: 1737: (handle+1)->STAT.DTS = 1;
 13230  1E1D  085E               	movf	USBConfigureEndpoint@handle,w
 13231  1E1E  3E04               	addlw	4
 13232  1E1F  0086               	movwf	6
 13233  1E20  0187               	clrf	7
 13234  1E21  1701               	bsf	1,6
 13235  1E22  0008               	return
 13236  1E23                     __end_of_USBConfigureEndpoint:	
 13237                           
 13238                           	psect	text55
 13239  0003                     __ptext55:	
 13240 ;; *************** function _USBCBStdSetDscHandler *****************
 13241 ;; Defined at:
 13242 ;;		line 434 in file "main.c"
 13243 ;; Parameters:    Size  Location     Type
 13244 ;;		None
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;		None
 13247 ;; Return value:  Size  Location     Type
 13248 ;;		None               void
 13249 ;; Registers used:
 13250 ;;		None
 13251 ;; Tracked objects:
 13252 ;;		On entry : 0/0
 13253 ;;		On exit  : 0/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13260 ;;Total ram usage:        0 bytes
 13261 ;; Hardware stack levels used:    1
 13262 ;; Hardware stack levels required when called:    4
 13263 ;; This function calls:
 13264 ;;		Nothing
 13265 ;; This function is called by:
 13266 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13267 ;; This function uses a non-reentrant model
 13268 ;;
 13269                           
 13270                           
 13271                           ;psect for function _USBCBStdSetDscHandler
 13272  0003                     _USBCBStdSetDscHandler:	
 13273                           
 13274                           ;incstack = 0
 13275                           ; Regs used in _USBCBStdSetDscHandler: []
 13276  0003  0008               	return
 13277  0004                     __end_of_USBCBStdSetDscHandler:	
 13278                           
 13279                           	psect	text56
 13280  07FD                     __ptext56:	
 13281 ;; *************** function _USBCBCheckOtherReq *****************
 13282 ;; Defined at:
 13283 ;;		line 409 in file "main.c"
 13284 ;; Parameters:    Size  Location     Type
 13285 ;;		None
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;		None
 13288 ;; Return value:  Size  Location     Type
 13289 ;;		None               void
 13290 ;; Registers used:
 13291 ;;		status,2, status,0, pclath, cstack
 13292 ;; Tracked objects:
 13293 ;;		On entry : 0/0
 13294 ;;		On exit  : 0/0
 13295 ;;		Unchanged: 0/0
 13296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13301 ;;Total ram usage:        0 bytes
 13302 ;; Hardware stack levels used:    1
 13303 ;; Hardware stack levels required when called:    5
 13304 ;; This function calls:
 13305 ;;		_USBCheckVendorRequest
 13306 ;; This function is called by:
 13307 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13308 ;; This function uses a non-reentrant model
 13309 ;;
 13310                           
 13311                           
 13312                           ;psect for function _USBCBCheckOtherReq
 13313  07FD                     _USBCBCheckOtherReq:	
 13314                           
 13315                           ;main.c: 410: USBCheckVendorRequest();
 13316                           
 13317                           ;incstack = 0
 13318                           ; Regs used in _USBCBCheckOtherReq: [status,2+status,0+pclath+cstack]
 13319  07FD  3180  2002         	fcall	_USBCheckVendorRequest
 13320  07FF  0008               	return
 13321  0800                     __end_of_USBCBCheckOtherReq:	
 13322                           
 13323                           	psect	text57
 13324  0002                     __ptext57:	
 13325 ;; *************** function _USBCheckVendorRequest *****************
 13326 ;; Defined at:
 13327 ;;		line 248 in file "../USB/usb_function_generic.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;		None
 13330 ;; Auto vars:     Size  Location     Type
 13331 ;;		None
 13332 ;; Return value:  Size  Location     Type
 13333 ;;		None               void
 13334 ;; Registers used:
 13335 ;;		None
 13336 ;; Tracked objects:
 13337 ;;		On entry : 0/0
 13338 ;;		On exit  : 0/0
 13339 ;;		Unchanged: 0/0
 13340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;Total ram usage:        0 bytes
 13346 ;; Hardware stack levels used:    1
 13347 ;; Hardware stack levels required when called:    4
 13348 ;; This function calls:
 13349 ;;		Nothing
 13350 ;; This function is called by:
 13351 ;;		_USBCBCheckOtherReq
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           
 13356                           ;psect for function _USBCheckVendorRequest
 13357  0002                     _USBCheckVendorRequest:	
 13358                           
 13359                           ;incstack = 0
 13360                           ; Regs used in _USBCheckVendorRequest: []
 13361  0002  0008               	return
 13362  0003                     __end_of_USBCheckVendorRequest:	
 13363                           
 13364                           	psect	text58
 13365  1005                     __ptext58:	
 13366 ;; *************** function _USBCBErrorHandler *****************
 13367 ;; Defined at:
 13368 ;;		line 358 in file "main.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;		None
 13371 ;; Auto vars:     Size  Location     Type
 13372 ;;		None
 13373 ;; Return value:  Size  Location     Type
 13374 ;;		None               void
 13375 ;; Registers used:
 13376 ;;		None
 13377 ;; Tracked objects:
 13378 ;;		On entry : 0/0
 13379 ;;		On exit  : 0/0
 13380 ;;		Unchanged: 0/0
 13381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13386 ;;Total ram usage:        0 bytes
 13387 ;; Hardware stack levels used:    1
 13388 ;; Hardware stack levels required when called:    4
 13389 ;; This function calls:
 13390 ;;		Nothing
 13391 ;; This function is called by:
 13392 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13393 ;; This function uses a non-reentrant model
 13394 ;;
 13395                           
 13396                           
 13397                           ;psect for function _USBCBErrorHandler
 13398  1005                     _USBCBErrorHandler:	
 13399                           
 13400                           ;incstack = 0
 13401                           ; Regs used in _USBCBErrorHandler: []
 13402  1005  0008               	return
 13403  1006                     __end_of_USBCBErrorHandler:	
 13404                           
 13405                           	psect	text59
 13406  1004                     __ptext59:	
 13407 ;; *************** function _USBCB_SOF_Handler *****************
 13408 ;; Defined at:
 13409 ;;		line 335 in file "main.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;		None
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;		None
 13414 ;; Return value:  Size  Location     Type
 13415 ;;		None               void
 13416 ;; Registers used:
 13417 ;;		None
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;Total ram usage:        0 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; Hardware stack levels required when called:    4
 13430 ;; This function calls:
 13431 ;;		Nothing
 13432 ;; This function is called by:
 13433 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           
 13438                           ;psect for function _USBCB_SOF_Handler
 13439  1004                     _USBCB_SOF_Handler:	
 13440                           
 13441                           ;incstack = 0
 13442                           ; Regs used in _USBCB_SOF_Handler: []
 13443  1004  0008               	return
 13444  1005                     __end_of_USBCB_SOF_Handler:	
 13445                           
 13446                           	psect	text60
 13447  1003                     __ptext60:	
 13448 ;; *************** function _USBCBWakeFromSuspend *****************
 13449 ;; Defined at:
 13450 ;;		line 305 in file "main.c"
 13451 ;; Parameters:    Size  Location     Type
 13452 ;;		None
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;		None               void
 13457 ;; Registers used:
 13458 ;;		None
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;Total ram usage:        0 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    4
 13471 ;; This function calls:
 13472 ;;		Nothing
 13473 ;; This function is called by:
 13474 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13475 ;;		_USBCBSendResume
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           
 13480                           ;psect for function _USBCBWakeFromSuspend
 13481  1003                     _USBCBWakeFromSuspend:	
 13482                           
 13483                           ;incstack = 0
 13484                           ; Regs used in _USBCBWakeFromSuspend: []
 13485  1003  0008               	return
 13486  1004                     __end_of_USBCBWakeFromSuspend:	
 13487                           
 13488                           	psect	text61
 13489  1002                     __ptext61:	
 13490 ;; *************** function _USBCBSuspend *****************
 13491 ;; Defined at:
 13492 ;;		line 264 in file "main.c"
 13493 ;; Parameters:    Size  Location     Type
 13494 ;;		None
 13495 ;; Auto vars:     Size  Location     Type
 13496 ;;		None
 13497 ;; Return value:  Size  Location     Type
 13498 ;;		None               void
 13499 ;; Registers used:
 13500 ;;		None
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13510 ;;Total ram usage:        0 bytes
 13511 ;; Hardware stack levels used:    1
 13512 ;; Hardware stack levels required when called:    4
 13513 ;; This function calls:
 13514 ;;		Nothing
 13515 ;; This function is called by:
 13516 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13517 ;; This function uses a non-reentrant model
 13518 ;;
 13519                           
 13520                           
 13521                           ;psect for function _USBCBSuspend
 13522  1002                     _USBCBSuspend:	
 13523                           
 13524                           ;incstack = 0
 13525                           ; Regs used in _USBCBSuspend: []
 13526  1002  0008               	return
 13527  1003                     __end_of_USBCBSuspend:	
 13528                           
 13529                           	psect	text62
 13530  090A                     __ptext62:	
 13531 ;; *************** function _USBDeviceInit *****************
 13532 ;; Defined at:
 13533 ;;		line 467 in file "../USB/usb_device.c"
 13534 ;; Parameters:    Size  Location     Type
 13535 ;;		None
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;  p               2   10[BANK0 ] PTR unsigned char 
 13538 ;;		 -> UEP1(1), 
 13539 ;;  i               1   12[BANK0 ] unsigned char 
 13540 ;;  i               1   13[BANK0 ] unsigned char 
 13541 ;; Return value:  Size  Location     Type
 13542 ;;		None               void
 13543 ;; Registers used:
 13544 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 0/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13551 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13553 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13554 ;;Total ram usage:        6 bytes
 13555 ;; Hardware stack levels used:    1
 13556 ;; Hardware stack levels required when called:    4
 13557 ;; This function calls:
 13558 ;;		Nothing
 13559 ;; This function is called by:
 13560 ;;		_USBDeviceTasks
 13561 ;;		_InitializeSystem
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           
 13566                           ;psect for function _USBDeviceInit
 13567  090A                     _USBDeviceInit:	
 13568                           
 13569                           ;usb_device.c: 468: BYTE i;
 13570                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
 13571                           
 13572                           ;incstack = 0
 13573                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 13574  090A  0021               	movlb	1	; select bank1
 13575  090B  1112               	bcf	18,2	;volatile
 13576                           
 13577                           ;usb_device.c: 473: UEIR = 0;;
 13578  090C  003D               	movlb	29	; select bank29
 13579  090D  0193               	clrf	19	;volatile
 13580                           
 13581                           ;usb_device.c: 476: UIR = 0;;
 13582  090E  0190               	clrf	16	;volatile
 13583                           
 13584                           ;usb_device.c: 479: UEP0 = 0;
 13585  090F  0198               	clrf	24	;volatile
 13586                           
 13587                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 13588  0910  300E               	movlw	14
 13589  0911  0020               	movlb	0	; select bank0
 13590  0912  00DB               	movwf	USBDeviceInit@p+1
 13591  0913  3099               	movlw	153
 13592  0914  00DA               	movwf	USBDeviceInit@p
 13593  0915  01DC               	clrf	USBDeviceInit@i_718
 13594  0916  085C               	movf	USBDeviceInit@i_718,w
 13595  0917  1D03               	skipz
 13596  0918  2929               	goto	l6324
 13597  0919                     l6316:	
 13598  0919  085A               	movf	USBDeviceInit@p,w
 13599  091A  0086               	movwf	6
 13600  091B  085B               	movf	USBDeviceInit@p+1,w
 13601  091C  0087               	movwf	7
 13602  091D  0181               	clrf	1
 13603  091E  3001               	movlw	1
 13604  091F  07DA               	addwf	USBDeviceInit@p,f
 13605  0920  3000               	movlw	0
 13606  0921  3DDB               	addwfc	USBDeviceInit@p+1,f
 13607  0922  3001               	movlw	1
 13608  0923  00D8               	movwf	??_USBDeviceInit
 13609  0924  0858               	movf	??_USBDeviceInit,w
 13610  0925  07DC               	addwf	USBDeviceInit@i_718,f
 13611  0926  085C               	movf	USBDeviceInit@i_718,w
 13612  0927  1903               	btfsc	3,2
 13613  0928  2919               	goto	l6316
 13614  0929                     l6324:	
 13615                           
 13616                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13617  0929  3016               	movlw	22
 13618  092A  003D               	movlb	29	; select bank29
 13619  092B  0091               	movwf	17	;volatile
 13620  092C  309F               	movlw	159
 13621  092D  0097               	movwf	23	;volatile
 13622  092E  307B               	movlw	123
 13623  092F  0092               	movwf	18	;volatile
 13624                           
 13625                           ;usb_device.c: 486: ;
 13626                           ;usb_device.c: 489: ;
 13627                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13628  0930  0020               	movlb	0	; select bank0
 13629  0931  01DD               	clrf	USBDeviceInit@i
 13630  0932  3008               	movlw	8
 13631  0933  025D               	subwf	USBDeviceInit@i,w
 13632  0934  1803               	btfsc	3,0
 13633  0935  294F               	goto	l128
 13634  0936                     l6332:	
 13635                           
 13636                           ;usb_device.c: 493: {
 13637                           ;usb_device.c: 494: BDT[i].Val = 0x00;
 13638  0936  085D               	movf	USBDeviceInit@i,w
 13639  0937  00D8               	movwf	??_USBDeviceInit
 13640  0938  3001               	movlw	1
 13641  0939                     u6865:	
 13642  0939  35D8               	lslf	??_USBDeviceInit,f
 13643  093A  3EFF               	addlw	-1
 13644  093B  1D03               	skipz
 13645  093C  2939               	goto	u6865
 13646  093D  3558               	lslf	??_USBDeviceInit,w
 13647  093E  3E20               	addlw	32
 13648  093F  0086               	movwf	6
 13649  0940  0187               	clrf	7
 13650  0941  3000               	movlw	0
 13651  0942  3FC0               	movwi [0]fsr1
 13652  0943  3000               	movlw	0
 13653  0944  3FC1               	movwi [1]fsr1
 13654  0945  3FC2               	movwi [2]fsr1
 13655  0946  3FC3               	movwi [3]fsr1
 13656  0947  3001               	movlw	1
 13657  0948  00D8               	movwf	??_USBDeviceInit
 13658  0949  0858               	movf	??_USBDeviceInit,w
 13659  094A  07DD               	addwf	USBDeviceInit@i,f
 13660  094B  3008               	movlw	8
 13661  094C  025D               	subwf	USBDeviceInit@i,w
 13662  094D  1C03               	skipc
 13663  094E  2936               	goto	l6332
 13664  094F                     l128:	
 13665                           
 13666                           ;usb_device.c: 495: }
 13667                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
 13668  094F  003D               	movlb	29	; select bank29
 13669  0950  170E               	bsf	14,6	;volatile
 13670                           
 13671                           ;usb_device.c: 501: UADDR = 0x00;
 13672  0951  0196               	clrf	22	;volatile
 13673                           
 13674                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
 13675  0952  120E               	bcf	14,4	;volatile
 13676                           
 13677                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
 13678  0953  130E               	bcf	14,6	;volatile
 13679  0954                     l6352:	
 13680                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
 13681                           
 13682  0954  003D               	movlb	29	; select bank29
 13683  0955  1D90               	btfss	16,3	;volatile
 13684  0956  2964               	goto	l6354
 13685                           
 13686                           ;usb_device.c: 511: {
 13687                           ;usb_device.c: 512: (UIR &= 0xF7);
 13688  0957  30F7               	movlw	247
 13689  0958  0020               	movlb	0	; select bank0
 13690  0959  00D8               	movwf	??_USBDeviceInit
 13691  095A  0858               	movf	??_USBDeviceInit,w
 13692  095B  003D               	movlb	29	; select bank29
 13693  095C  0590               	andwf	16,f	;volatile
 13694                           
 13695                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
 13696  095D  0022               	movlb	2	; select bank2
 13697  095E  01C9               	clrf	(_inPipes^(0+256)+2)
 13698                           
 13699                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
 13700  095F  0023               	movlb	3	; select bank3
 13701  0960  01A2               	clrf	(_outPipes^(0+384)+2)
 13702                           
 13703                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
 13704  0961  01A3               	clrf	(_outPipes^(0+384)+3)
 13705  0962  01A4               	clrf	((_outPipes+1)^(0+384)+3)
 13706  0963  2954               	goto	l6352
 13707  0964                     l6354:	
 13708                           
 13709                           ;usb_device.c: 517: }
 13710                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
 13711  0964  3001               	movlw	1
 13712  0965  0020               	movlb	0	; select bank0
 13713  0966  00D8               	movwf	??_USBDeviceInit
 13714  0967  0858               	movf	??_USBDeviceInit,w
 13715  0968  0022               	movlb	2	; select bank2
 13716  0969  00BC               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 13717                           
 13718                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
 13719  096A  3001               	movlw	1
 13720  096B  0020               	movlb	0	; select bank0
 13721  096C  00D8               	movwf	??_USBDeviceInit
 13722  096D  0858               	movf	??_USBDeviceInit,w
 13723  096E  0022               	movlb	2	; select bank2
 13724  096F  00BD               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 13725                           
 13726                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
 13727  0970  01B8               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 13728                           
 13729                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
 13730  0971  01B9               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 13731                           
 13732                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
 13733  0972  01B7               	clrf	_USBBusIsSuspended^(0+256)
 13734                           
 13735                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(1+1u); i++)
 13736  0973  0020               	movlb	0	; select bank0
 13737  0974  01DD               	clrf	USBDeviceInit@i
 13738  0975  3002               	movlw	2
 13739  0976  025D               	subwf	USBDeviceInit@i,w
 13740  0977  1803               	btfsc	3,0
 13741  0978  2998               	goto	l6372
 13742  0979                     l6366:	
 13743                           
 13744                           ;usb_device.c: 531: {
 13745                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
 13746  0979  085D               	movf	USBDeviceInit@i,w
 13747  097A  3E68               	addlw	_pBDTEntryIn& (0+255)
 13748  097B  0086               	movwf	6
 13749  097C  0187               	clrf	7
 13750  097D  0181               	clrf	1
 13751                           
 13752                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
 13753  097E  085D               	movf	USBDeviceInit@i,w
 13754  097F  3E28               	addlw	_pBDTEntryOut& (0+255)
 13755  0980  0086               	movwf	6
 13756  0981  3001               	movlw	1	; select bank2/3
 13757  0982  0087               	movwf	7
 13758  0983  0181               	clrf	1
 13759                           
 13760                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
 13761  0984  085D               	movf	USBDeviceInit@i,w
 13762  0985  3E24               	addlw	_ep_data_in& (0+255)
 13763  0986  0086               	movwf	6
 13764  0987  3001               	movlw	1	; select bank2/3
 13765  0988  0087               	movwf	7
 13766  0989  0181               	clrf	1
 13767                           
 13768                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
 13769  098A  085D               	movf	USBDeviceInit@i,w
 13770  098B  3E26               	addlw	_ep_data_out& (0+255)
 13771  098C  0086               	movwf	6
 13772  098D  3001               	movlw	1	; select bank2/3
 13773  098E  0087               	movwf	7
 13774  098F  0181               	clrf	1
 13775  0990  3001               	movlw	1
 13776  0991  00D8               	movwf	??_USBDeviceInit
 13777  0992  0858               	movf	??_USBDeviceInit,w
 13778  0993  07DD               	addwf	USBDeviceInit@i,f
 13779  0994  3002               	movlw	2
 13780  0995  025D               	subwf	USBDeviceInit@i,w
 13781  0996  1C03               	skipc
 13782  0997  2979               	goto	l6366
 13783  0998                     l6372:	
 13784                           
 13785                           ;usb_device.c: 536: }
 13786                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13787  0998  3028               	movlw	40
 13788  0999  00D8               	movwf	??_USBDeviceInit
 13789  099A  0858               	movf	??_USBDeviceInit,w
 13790  099B  00E8               	movwf	_pBDTEntryIn
 13791                           
 13792                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
 13793  099C  3016               	movlw	22
 13794  099D  003D               	movlb	29	; select bank29
 13795  099E  0098               	movwf	24	;volatile
 13796                           
 13797                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 13798  099F  3040               	movlw	64
 13799  09A0  0020               	movlb	0	; select bank0
 13800  09A1  00D8               	movwf	??_USBDeviceInit
 13801  09A2  3000               	movlw	0
 13802  09A3  00D9               	movwf	??_USBDeviceInit+1
 13803  09A4  0858               	movf	??_USBDeviceInit,w
 13804  09A5  00A2               	movwf	34	;volatile
 13805  09A6  0859               	movf	??_USBDeviceInit+1,w
 13806  09A7  00A3               	movwf	35	;volatile
 13807                           
 13808                           ;usb_device.c: 544: BDT[0].CNT = 8;
 13809  09A8  3008               	movlw	8
 13810  09A9  00A1               	movwf	33	;volatile
 13811                           
 13812                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
 13813  09AA  3084               	movlw	132
 13814  09AB  00D8               	movwf	??_USBDeviceInit
 13815  09AC  0858               	movf	??_USBDeviceInit,w
 13816  09AD  00A0               	movwf	32	;volatile
 13817                           
 13818                           ;usb_device.c: 548: USBActiveConfiguration = 0;
 13819  09AE  0022               	movlb	2	; select bank2
 13820  09AF  01CE               	clrf	_USBActiveConfiguration^(0+256)
 13821                           
 13822                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
 13823  09B0  0021               	movlb	1	; select bank1
 13824  09B1  01EE               	clrf	_USBDeviceState^(0+128)
 13825  09B2  0008               	return
 13826  09B3                     __end_of_USBDeviceInit:	
 13827                           
 13828                           	psect	text63
 13829  0EFC                     __ptext63:	
 13830 ;; *************** function ___ftadd *****************
 13831 ;; Defined at:
 13832 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
 13833 ;; Parameters:    Size  Location     Type
 13834 ;;  f1              3   19[BANK1 ] float 
 13835 ;;  f2              3   22[BANK1 ] float 
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;  exp1            1   31[BANK1 ] unsigned char 
 13838 ;;  exp2            1   30[BANK1 ] unsigned char 
 13839 ;;  sign            1   29[BANK1 ] unsigned char 
 13840 ;; Return value:  Size  Location     Type
 13841 ;;                  3   19[BANK1 ] float 
 13842 ;; Registers used:
 13843 ;;		wreg, status,2, status,0, pclath, cstack
 13844 ;; Tracked objects:
 13845 ;;		On entry : 0/0
 13846 ;;		On exit  : 0/0
 13847 ;;		Unchanged: 0/0
 13848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13849 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13850 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13851 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13852 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13853 ;;Total ram usage:       13 bytes
 13854 ;; Hardware stack levels used:    1
 13855 ;; Hardware stack levels required when called:    5
 13856 ;; This function calls:
 13857 ;;		___ftpack
 13858 ;; This function is called by:
 13859 ;;		_UpdateFanLevel
 13860 ;;		_SetAsicClock
 13861 ;; This function uses a non-reentrant model
 13862 ;;
 13863                           
 13864                           
 13865                           ;psect for function ___ftadd
 13866  0EFC                     ___ftadd:	
 13867                           
 13868                           ;incstack = 0
 13869                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13870  0EFC  0021               	movlb	1	; select bank1
 13871  0EFD  0833               	movf	___ftadd@f1^(0+128),w
 13872  0EFE  00B9               	movwf	??___ftadd^(0+128)
 13873  0EFF  0834               	movf	(___ftadd@f1+1)^(0+128),w
 13874  0F00  00BA               	movwf	(??___ftadd^(0+128)+1)
 13875  0F01  0835               	movf	(___ftadd@f1+2)^(0+128),w
 13876  0F02  00BB               	movwf	(??___ftadd^(0+128)+2)
 13877  0F03  1003               	clrc
 13878  0F04  0D3A               	rlf	(??___ftadd^(0+128)+1),w
 13879  0F05  0D3B               	rlf	(??___ftadd^(0+128)+2),w
 13880  0F06  00BC               	movwf	(??___ftadd+3)^(0+128)
 13881  0F07  083C               	movf	(??___ftadd+3)^(0+128),w
 13882  0F08  00BF               	movwf	___ftadd@exp1^(0+128)
 13883  0F09  0836               	movf	___ftadd@f2^(0+128),w
 13884  0F0A  00B9               	movwf	??___ftadd^(0+128)
 13885  0F0B  0837               	movf	(___ftadd@f2+1)^(0+128),w
 13886  0F0C  00BA               	movwf	(??___ftadd^(0+128)+1)
 13887  0F0D  0838               	movf	(___ftadd@f2+2)^(0+128),w
 13888  0F0E  00BB               	movwf	(??___ftadd^(0+128)+2)
 13889  0F0F  1003               	clrc
 13890  0F10  0D3A               	rlf	(??___ftadd^(0+128)+1),w
 13891  0F11  0D3B               	rlf	(??___ftadd^(0+128)+2),w
 13892  0F12  00BC               	movwf	(??___ftadd+3)^(0+128)
 13893  0F13  083C               	movf	(??___ftadd+3)^(0+128),w
 13894  0F14  00BE               	movwf	___ftadd@exp2^(0+128)
 13895  0F15  083F               	movf	___ftadd@exp1^(0+128),w
 13896  0F16  1903               	btfsc	3,2
 13897  0F17  2F24               	goto	l5866
 13898  0F18  083E               	movf	___ftadd@exp2^(0+128),w
 13899  0F19  023F               	subwf	___ftadd@exp1^(0+128),w
 13900  0F1A  1803               	skipnc
 13901  0F1B  2F2B               	goto	l5870
 13902  0F1C  033F               	decf	___ftadd@exp1^(0+128),w
 13903  0F1D  3AFF               	xorlw	255
 13904  0F1E  073E               	addwf	___ftadd@exp2^(0+128),w
 13905  0F1F  00B9               	movwf	??___ftadd^(0+128)
 13906  0F20  3019               	movlw	25
 13907  0F21  0239               	subwf	??___ftadd^(0+128),w
 13908  0F22  1C03               	skipc
 13909  0F23  2F2B               	goto	l5870
 13910  0F24                     l5866:	
 13911  0F24  0836               	movf	___ftadd@f2^(0+128),w
 13912  0F25  00B3               	movwf	?___ftadd^(0+128)
 13913  0F26  0837               	movf	(___ftadd@f2+1)^(0+128),w
 13914  0F27  00B4               	movwf	(?___ftadd+1)^(0+128)
 13915  0F28  0838               	movf	(___ftadd@f2+2)^(0+128),w
 13916  0F29  00B5               	movwf	(?___ftadd+2)^(0+128)
 13917  0F2A  0008               	return
 13918  0F2B                     l5870:	
 13919  0F2B  083E               	movf	___ftadd@exp2^(0+128),w
 13920  0F2C  1903               	btfsc	3,2
 13921  0F2D  0008               	return
 13922  0F2E  083F               	movf	___ftadd@exp1^(0+128),w
 13923  0F2F  023E               	subwf	___ftadd@exp2^(0+128),w
 13924  0F30  1803               	skipnc
 13925  0F31  2F3A               	goto	l5876
 13926  0F32  033E               	decf	___ftadd@exp2^(0+128),w
 13927  0F33  3AFF               	xorlw	255
 13928  0F34  073F               	addwf	___ftadd@exp1^(0+128),w
 13929  0F35  00B9               	movwf	??___ftadd^(0+128)
 13930  0F36  3019               	movlw	25
 13931  0F37  0239               	subwf	??___ftadd^(0+128),w
 13932  0F38  1803               	btfsc	3,0
 13933  0F39  0008               	return
 13934  0F3A                     l5876:	
 13935  0F3A  3006               	movlw	6
 13936  0F3B  00B9               	movwf	??___ftadd^(0+128)
 13937  0F3C  0839               	movf	??___ftadd^(0+128),w
 13938  0F3D  00BD               	movwf	___ftadd@sign^(0+128)
 13939  0F3E  1BB5               	btfsc	(___ftadd@f1+2)^(0+128),7
 13940  0F3F  17BD               	bsf	___ftadd@sign^(0+128),7
 13941  0F40  1BB8               	btfsc	(___ftadd@f2+2)^(0+128),7
 13942  0F41  173D               	bsf	___ftadd@sign^(0+128),6
 13943  0F42  17B4               	bsf	(___ftadd@f1^(0+128)+1),7
 13944  0F43  30FF               	movlw	255
 13945  0F44  05B3               	andwf	___ftadd@f1^(0+128),f
 13946  0F45  30FF               	movlw	255
 13947  0F46  05B4               	andwf	(___ftadd@f1+1)^(0+128),f
 13948  0F47  3000               	movlw	0
 13949  0F48  05B5               	andwf	(___ftadd@f1+2)^(0+128),f
 13950  0F49  17B7               	bsf	(___ftadd@f2^(0+128)+1),7
 13951  0F4A  30FF               	movlw	255
 13952  0F4B  05B6               	andwf	___ftadd@f2^(0+128),f
 13953  0F4C  30FF               	movlw	255
 13954  0F4D  05B7               	andwf	(___ftadd@f2+1)^(0+128),f
 13955  0F4E  3000               	movlw	0
 13956  0F4F  05B8               	andwf	(___ftadd@f2+2)^(0+128),f
 13957  0F50  083E               	movf	___ftadd@exp2^(0+128),w
 13958  0F51  023F               	subwf	___ftadd@exp1^(0+128),w
 13959  0F52  1803               	skipnc
 13960  0F53  2F76               	goto	l5898
 13961  0F54                     l5888:	
 13962  0F54  3001               	movlw	1
 13963  0F55                     u6065:	
 13964  0F55  35B6               	lslf	___ftadd@f2^(0+128),f
 13965  0F56  0DB7               	rlf	(___ftadd@f2+1)^(0+128),f
 13966  0F57  0DB8               	rlf	(___ftadd@f2+2)^(0+128),f
 13967  0F58  0B89               	decfsz	9,f
 13968  0F59  2F55               	goto	u6065
 13969  0F5A  3001               	movlw	1
 13970  0F5B  02BE               	subwf	___ftadd@exp2^(0+128),f
 13971  0F5C  083E               	movf	___ftadd@exp2^(0+128),w
 13972  0F5D  063F               	xorwf	___ftadd@exp1^(0+128),w
 13973  0F5E  1903               	skipnz
 13974  0F5F  2F71               	goto	l5896
 13975  0F60  3001               	movlw	1
 13976  0F61  02BD               	subwf	___ftadd@sign^(0+128),f
 13977  0F62  083D               	movf	___ftadd@sign^(0+128),w
 13978  0F63  3907               	andlw	7
 13979  0F64  1903               	btfsc	3,2
 13980  0F65  2F71               	goto	l5896
 13981  0F66  2F54               	goto	l5888
 13982  0F67                     l5894:	
 13983  0F67  3001               	movlw	1
 13984  0F68                     u6095:	
 13985  0F68  36B5               	lsrf	(___ftadd@f1+2)^(0+128),f
 13986  0F69  0CB4               	rrf	(___ftadd@f1+1)^(0+128),f
 13987  0F6A  0CB3               	rrf	___ftadd@f1^(0+128),f
 13988  0F6B  0B89               	decfsz	9,f
 13989  0F6C  2F68               	goto	u6095
 13990  0F6D  3001               	movlw	1
 13991  0F6E  00B9               	movwf	??___ftadd^(0+128)
 13992  0F6F  0839               	movf	??___ftadd^(0+128),w
 13993  0F70  07BF               	addwf	___ftadd@exp1^(0+128),f
 13994  0F71                     l5896:	
 13995  0F71  083F               	movf	___ftadd@exp1^(0+128),w
 13996  0F72  063E               	xorwf	___ftadd@exp2^(0+128),w
 13997  0F73  1903               	btfsc	3,2
 13998  0F74  2F9B               	goto	l1081
 13999  0F75  2F67               	goto	l5894
 14000  0F76                     l5898:	
 14001  0F76  083F               	movf	___ftadd@exp1^(0+128),w
 14002  0F77  023E               	subwf	___ftadd@exp2^(0+128),w
 14003  0F78  1803               	skipnc
 14004  0F79  2F9B               	goto	l1081
 14005  0F7A                     l5900:	
 14006  0F7A  3001               	movlw	1
 14007  0F7B                     u6125:	
 14008  0F7B  35B3               	lslf	___ftadd@f1^(0+128),f
 14009  0F7C  0DB4               	rlf	(___ftadd@f1+1)^(0+128),f
 14010  0F7D  0DB5               	rlf	(___ftadd@f1+2)^(0+128),f
 14011  0F7E  0B89               	decfsz	9,f
 14012  0F7F  2F7B               	goto	u6125
 14013  0F80  3001               	movlw	1
 14014  0F81  02BF               	subwf	___ftadd@exp1^(0+128),f
 14015  0F82  083E               	movf	___ftadd@exp2^(0+128),w
 14016  0F83  063F               	xorwf	___ftadd@exp1^(0+128),w
 14017  0F84  1903               	skipnz
 14018  0F85  2F97               	goto	l5908
 14019  0F86  3001               	movlw	1
 14020  0F87  02BD               	subwf	___ftadd@sign^(0+128),f
 14021  0F88  083D               	movf	___ftadd@sign^(0+128),w
 14022  0F89  3907               	andlw	7
 14023  0F8A  1903               	btfsc	3,2
 14024  0F8B  2F97               	goto	l5908
 14025  0F8C  2F7A               	goto	l5900
 14026  0F8D                     l5906:	
 14027  0F8D  3001               	movlw	1
 14028  0F8E                     u6155:	
 14029  0F8E  36B8               	lsrf	(___ftadd@f2+2)^(0+128),f
 14030  0F8F  0CB7               	rrf	(___ftadd@f2+1)^(0+128),f
 14031  0F90  0CB6               	rrf	___ftadd@f2^(0+128),f
 14032  0F91  0B89               	decfsz	9,f
 14033  0F92  2F8E               	goto	u6155
 14034  0F93  3001               	movlw	1
 14035  0F94  00B9               	movwf	??___ftadd^(0+128)
 14036  0F95  0839               	movf	??___ftadd^(0+128),w
 14037  0F96  07BE               	addwf	___ftadd@exp2^(0+128),f
 14038  0F97                     l5908:	
 14039  0F97  083F               	movf	___ftadd@exp1^(0+128),w
 14040  0F98  063E               	xorwf	___ftadd@exp2^(0+128),w
 14041  0F99  1D03               	skipz
 14042  0F9A  2F8D               	goto	l5906
 14043  0F9B                     l1081:	
 14044  0F9B  1FBD               	btfss	___ftadd@sign^(0+128),7
 14045  0F9C  2FAD               	goto	l5912
 14046  0F9D  30FF               	movlw	255
 14047  0F9E  06B3               	xorwf	___ftadd@f1^(0+128),f
 14048  0F9F  30FF               	movlw	255
 14049  0FA0  06B4               	xorwf	(___ftadd@f1+1)^(0+128),f
 14050  0FA1  30FF               	movlw	255
 14051  0FA2  06B5               	xorwf	(___ftadd@f1+2)^(0+128),f
 14052  0FA3  3001               	movlw	1
 14053  0FA4  07B3               	addwf	___ftadd@f1^(0+128),f
 14054  0FA5  3000               	movlw	0
 14055  0FA6  1803               	skipnc
 14056  0FA7  3001               	movlw	1
 14057  0FA8  07B4               	addwf	(___ftadd@f1+1)^(0+128),f
 14058  0FA9  3000               	movlw	0
 14059  0FAA  1803               	skipnc
 14060  0FAB  3001               	movlw	1
 14061  0FAC  07B5               	addwf	(___ftadd@f1+2)^(0+128),f
 14062  0FAD                     l5912:	
 14063  0FAD  1F3D               	btfss	___ftadd@sign^(0+128),6
 14064  0FAE  2FBF               	goto	l5916
 14065  0FAF  30FF               	movlw	255
 14066  0FB0  06B6               	xorwf	___ftadd@f2^(0+128),f
 14067  0FB1  30FF               	movlw	255
 14068  0FB2  06B7               	xorwf	(___ftadd@f2+1)^(0+128),f
 14069  0FB3  30FF               	movlw	255
 14070  0FB4  06B8               	xorwf	(___ftadd@f2+2)^(0+128),f
 14071  0FB5  3001               	movlw	1
 14072  0FB6  07B6               	addwf	___ftadd@f2^(0+128),f
 14073  0FB7  3000               	movlw	0
 14074  0FB8  1803               	skipnc
 14075  0FB9  3001               	movlw	1
 14076  0FBA  07B7               	addwf	(___ftadd@f2+1)^(0+128),f
 14077  0FBB  3000               	movlw	0
 14078  0FBC  1803               	skipnc
 14079  0FBD  3001               	movlw	1
 14080  0FBE  07B8               	addwf	(___ftadd@f2+2)^(0+128),f
 14081  0FBF                     l5916:	
 14082  0FBF  01BD               	clrf	___ftadd@sign^(0+128)
 14083  0FC0  0833               	movf	___ftadd@f1^(0+128),w
 14084  0FC1  07B6               	addwf	___ftadd@f2^(0+128),f
 14085  0FC2  0834               	movf	(___ftadd@f1+1)^(0+128),w
 14086  0FC3  3DB7               	addwfc	(___ftadd@f2+1)^(0+128),f
 14087  0FC4  0835               	movf	(___ftadd@f1+2)^(0+128),w
 14088  0FC5  3DB8               	addwfc	(___ftadd@f2+2)^(0+128),f
 14089  0FC6  1FB8               	btfss	(___ftadd@f2+2)^(0+128),7
 14090  0FC7  2FDA               	goto	l5926
 14091  0FC8  30FF               	movlw	255
 14092  0FC9  06B6               	xorwf	___ftadd@f2^(0+128),f
 14093  0FCA  30FF               	movlw	255
 14094  0FCB  06B7               	xorwf	(___ftadd@f2+1)^(0+128),f
 14095  0FCC  30FF               	movlw	255
 14096  0FCD  06B8               	xorwf	(___ftadd@f2+2)^(0+128),f
 14097  0FCE  3001               	movlw	1
 14098  0FCF  07B6               	addwf	___ftadd@f2^(0+128),f
 14099  0FD0  3000               	movlw	0
 14100  0FD1  1803               	skipnc
 14101  0FD2  3001               	movlw	1
 14102  0FD3  07B7               	addwf	(___ftadd@f2+1)^(0+128),f
 14103  0FD4  3000               	movlw	0
 14104  0FD5  1803               	skipnc
 14105  0FD6  3001               	movlw	1
 14106  0FD7  07B8               	addwf	(___ftadd@f2+2)^(0+128),f
 14107  0FD8  01BD               	clrf	___ftadd@sign^(0+128)
 14108  0FD9  0ABD               	incf	___ftadd@sign^(0+128),f
 14109  0FDA                     l5926:	
 14110  0FDA  0836               	movf	___ftadd@f2^(0+128),w
 14111  0FDB  0020               	movlb	0	; select bank0
 14112  0FDC  00D8               	movwf	?___ftpack
 14113  0FDD  0021               	movlb	1	; select bank1
 14114  0FDE  0837               	movf	(___ftadd@f2+1)^(0+128),w
 14115  0FDF  0020               	movlb	0	; select bank0
 14116  0FE0  00D9               	movwf	?___ftpack+1
 14117  0FE1  0021               	movlb	1	; select bank1
 14118  0FE2  0838               	movf	(___ftadd@f2+2)^(0+128),w
 14119  0FE3  0020               	movlb	0	; select bank0
 14120  0FE4  00DA               	movwf	?___ftpack+2
 14121  0FE5  0021               	movlb	1	; select bank1
 14122  0FE6  083F               	movf	___ftadd@exp1^(0+128),w
 14123  0FE7  00B9               	movwf	??___ftadd^(0+128)
 14124  0FE8  0839               	movf	??___ftadd^(0+128),w
 14125  0FE9  0020               	movlb	0	; select bank0
 14126  0FEA  00DB               	movwf	?___ftpack+3
 14127  0FEB  0021               	movlb	1	; select bank1
 14128  0FEC  083D               	movf	___ftadd@sign^(0+128),w
 14129  0FED  00BA               	movwf	(??___ftadd+1)^(0+128)
 14130  0FEE  083A               	movf	(??___ftadd+1)^(0+128),w
 14131  0FEF  0020               	movlb	0	; select bank0
 14132  0FF0  00DC               	movwf	?___ftpack+4
 14133  0FF1  3190  20F1         	fcall	___ftpack
 14134  0FF3  0020               	movlb	0	; select bank0
 14135  0FF4  0858               	movf	?___ftpack,w
 14136  0FF5  0021               	movlb	1	; select bank1
 14137  0FF6  00B3               	movwf	?___ftadd^(0+128)
 14138  0FF7  0020               	movlb	0	; select bank0
 14139  0FF8  0859               	movf	?___ftpack+1,w
 14140  0FF9  0021               	movlb	1	; select bank1
 14141  0FFA  00B4               	movwf	(?___ftadd+1)^(0+128)
 14142  0FFB  0020               	movlb	0	; select bank0
 14143  0FFC  085A               	movf	?___ftpack+2,w
 14144  0FFD  0021               	movlb	1	; select bank1
 14145  0FFE  00B5               	movwf	(?___ftadd+2)^(0+128)
 14146  0FFF  0008               	return
 14147  1000                     __end_of___ftadd:	
 14148                           
 14149                           	psect	text64
 14150  10F1                     __ptext64:	
 14151 ;; *************** function ___ftpack *****************
 14152 ;; Defined at:
 14153 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
 14154 ;; Parameters:    Size  Location     Type
 14155 ;;  arg             3    8[BANK0 ] unsigned um
 14156 ;;  exp             1   11[BANK0 ] unsigned char 
 14157 ;;  sign            1   12[BANK0 ] unsigned char 
 14158 ;; Auto vars:     Size  Location     Type
 14159 ;;		None
 14160 ;; Return value:  Size  Location     Type
 14161 ;;                  3    8[BANK0 ] float 
 14162 ;; Registers used:
 14163 ;;		wreg, status,2, status,0
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/0
 14166 ;;		On exit  : 0/0
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14169 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;Total ram usage:        8 bytes
 14174 ;; Hardware stack levels used:    1
 14175 ;; Hardware stack levels required when called:    4
 14176 ;; This function calls:
 14177 ;;		Nothing
 14178 ;; This function is called by:
 14179 ;;		___awtoft
 14180 ;;		___ftadd
 14181 ;;		___ftdiv
 14182 ;;		___ftmul
 14183 ;;		___lltoft
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           
 14188                           ;psect for function ___ftpack
 14189  10F1                     ___ftpack:	
 14190                           
 14191                           ;incstack = 0
 14192                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14193  10F1  0020               	movlb	0	; select bank0
 14194  10F2  085B               	movf	___ftpack@exp,w
 14195  10F3  1903               	btfsc	3,2
 14196  10F4  28FA               	goto	l5722
 14197  10F5  085A               	movf	___ftpack@arg+2,w
 14198  10F6  0459               	iorwf	___ftpack@arg+1,w
 14199  10F7  0458               	iorwf	___ftpack@arg,w
 14200  10F8  1D03               	skipz
 14201  10F9  290B               	goto	l5728
 14202  10FA                     l5722:	
 14203  10FA  3000               	movlw	0
 14204  10FB  00D8               	movwf	?___ftpack
 14205  10FC  3000               	movlw	0
 14206  10FD  00D9               	movwf	?___ftpack+1
 14207  10FE  3000               	movlw	0
 14208  10FF  00DA               	movwf	?___ftpack+2
 14209  1100  0008               	return
 14210  1101                     l5726:	
 14211  1101  3001               	movlw	1
 14212  1102  00DD               	movwf	??___ftpack
 14213  1103  085D               	movf	??___ftpack,w
 14214  1104  07DB               	addwf	___ftpack@exp,f
 14215  1105  3001               	movlw	1
 14216  1106                     u5665:	
 14217  1106  36DA               	lsrf	___ftpack@arg+2,f
 14218  1107  0CD9               	rrf	___ftpack@arg+1,f
 14219  1108  0CD8               	rrf	___ftpack@arg,f
 14220  1109  0B89               	decfsz	9,f
 14221  110A  2906               	goto	u5665
 14222  110B                     l5728:	
 14223  110B  30FE               	movlw	254
 14224  110C  055A               	andwf	___ftpack@arg+2,w
 14225  110D  1903               	btfsc	3,2
 14226  110E  2924               	goto	l1052
 14227  110F  2901               	goto	l5726
 14228  1110                     l5730:	
 14229  1110  3001               	movlw	1
 14230  1111  00DD               	movwf	??___ftpack
 14231  1112  085D               	movf	??___ftpack,w
 14232  1113  07DB               	addwf	___ftpack@exp,f
 14233  1114  3001               	movlw	1
 14234  1115  07D8               	addwf	___ftpack@arg,f
 14235  1116  3000               	movlw	0
 14236  1117  1803               	skipnc
 14237  1118  3001               	movlw	1
 14238  1119  07D9               	addwf	___ftpack@arg+1,f
 14239  111A  3000               	movlw	0
 14240  111B  1803               	skipnc
 14241  111C  3001               	movlw	1
 14242  111D  07DA               	addwf	___ftpack@arg+2,f
 14243  111E  3001               	movlw	1
 14244  111F                     u5685:	
 14245  111F  36DA               	lsrf	___ftpack@arg+2,f
 14246  1120  0CD9               	rrf	___ftpack@arg+1,f
 14247  1121  0CD8               	rrf	___ftpack@arg,f
 14248  1122  0B89               	decfsz	9,f
 14249  1123  291F               	goto	u5685
 14250  1124                     l1052:	
 14251  1124  30FF               	movlw	255
 14252  1125  055A               	andwf	___ftpack@arg+2,w
 14253  1126  1903               	btfsc	3,2
 14254  1127  2931               	goto	l5738
 14255  1128  2910               	goto	l5730
 14256  1129                     l5736:	
 14257  1129  3001               	movlw	1
 14258  112A  02DB               	subwf	___ftpack@exp,f
 14259  112B  3001               	movlw	1
 14260  112C                     u5705:	
 14261  112C  35D8               	lslf	___ftpack@arg,f
 14262  112D  0DD9               	rlf	___ftpack@arg+1,f
 14263  112E  0DDA               	rlf	___ftpack@arg+2,f
 14264  112F  0B89               	decfsz	9,f
 14265  1130  292C               	goto	u5705
 14266  1131                     l5738:	
 14267  1131  1FD9               	btfss	___ftpack@arg+1,7
 14268  1132  2929               	goto	l5736
 14269  1133  185B               	btfsc	___ftpack@exp,0
 14270  1134  293B               	goto	l1058
 14271  1135  30FF               	movlw	255
 14272  1136  05D8               	andwf	___ftpack@arg,f
 14273  1137  307F               	movlw	127
 14274  1138  05D9               	andwf	___ftpack@arg+1,f
 14275  1139  30FF               	movlw	255
 14276  113A  05DA               	andwf	___ftpack@arg+2,f
 14277  113B                     l1058:	
 14278  113B  1003               	clrc
 14279  113C  0CDB               	rrf	___ftpack@exp,f
 14280  113D  085B               	movf	___ftpack@exp,w
 14281  113E  00DD               	movwf	??___ftpack
 14282  113F  01DE               	clrf	??___ftpack+1
 14283  1140  01DF               	clrf	??___ftpack+2
 14284  1141  3010               	movlw	16
 14285  1142                     u5735:	
 14286  1142  35DD               	lslf	??___ftpack,f
 14287  1143  0DDE               	rlf	??___ftpack+1,f
 14288  1144  0DDF               	rlf	??___ftpack+2,f
 14289  1145  0B89               	decfsz	9,f
 14290  1146  2942               	goto	u5735
 14291  1147  085D               	movf	??___ftpack,w
 14292  1148  04D8               	iorwf	___ftpack@arg,f
 14293  1149  085E               	movf	??___ftpack+1,w
 14294  114A  04D9               	iorwf	___ftpack@arg+1,f
 14295  114B  085F               	movf	??___ftpack+2,w
 14296  114C  04DA               	iorwf	___ftpack@arg+2,f
 14297  114D  085C               	movf	___ftpack@sign,w
 14298  114E  1903               	btfsc	3,2
 14299  114F  0008               	return
 14300  1150  17DA               	bsf	___ftpack@arg+2,7
 14301  1151  0008               	return
 14302  1152                     __end_of___ftpack:	
 14303                           
 14304                           	psect	intentry
 14305  0004                     __pintentry:	
 14306 ;; *************** function _ISRCode *****************
 14307 ;; Defined at:
 14308 ;;		line 70 in file "main.c"
 14309 ;; Parameters:    Size  Location     Type
 14310 ;;		None
 14311 ;; Auto vars:     Size  Location     Type
 14312 ;;		None
 14313 ;; Return value:  Size  Location     Type
 14314 ;;		None               void
 14315 ;; Registers used:
 14316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;Total ram usage:        1 bytes
 14327 ;; Hardware stack levels used:    1
 14328 ;; Hardware stack levels required when called:    3
 14329 ;; This function calls:
 14330 ;;		_ResultRx
 14331 ;; This function is called by:
 14332 ;;		Interrupt level 1
 14333 ;; This function uses a non-reentrant model
 14334 ;;
 14335                           
 14336  0004                     _ISRCode:	
 14337                           
 14338                           ;incstack = 0
 14339                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14340  0004  3180               	pagesel	$
 14341  0005  0020               	movlb	0	; select bank0
 14342  0006  087F               	movf	127,w
 14343  0007  00FD               	movwf	??_ISRCode
 14344                           
 14345                           ;main.c: 72: if(IOCBF)
 14346  0008  0027               	movlb	7	; select bank7
 14347  0009  0816               	movf	22,w	;volatile
 14348  000A  1903               	btfsc	3,2
 14349  000B  280E               	goto	i1l821
 14350                           
 14351                           ;main.c: 73: ResultRx();
 14352  000C  3188  20AF         	fcall	_ResultRx
 14353  000E                     i1l821:	
 14354  000E  087D               	movf	??_ISRCode,w
 14355  000F  0020               	movlb	0	; select bank0
 14356  0010  00FF               	movwf	127
 14357  0011  0009               	retfie
 14358  0012                     __end_of_ISRCode:	
 14359                           
 14360                           	psect	text66
 14361  08AF                     __ptext66:	
 14362 ;; *************** function _ResultRx *****************
 14363 ;; Defined at:
 14364 ;;		line 161 in file "klondike.c"
 14365 ;; Parameters:    Size  Location     Type
 14366 ;;		None
 14367 ;; Auto vars:     Size  Location     Type
 14368 ;;		None
 14369 ;; Return value:  Size  Location     Type
 14370 ;;		None               void
 14371 ;; Registers used:
 14372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14373 ;; Tracked objects:
 14374 ;;		On entry : 0/0
 14375 ;;		On exit  : 0/0
 14376 ;;		Unchanged: 0/0
 14377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;Total ram usage:        1 bytes
 14383 ;; Hardware stack levels used:    1
 14384 ;; Hardware stack levels required when called:    2
 14385 ;; This function calls:
 14386 ;;		i1_SendCmdReply
 14387 ;; This function is called by:
 14388 ;;		_ISRCode
 14389 ;; This function uses a non-reentrant model
 14390 ;;
 14391                           
 14392                           
 14393                           ;psect for function _ResultRx
 14394  08AF                     _ResultRx:	
 14395                           
 14396                           ;klondike.c: 162: TimeOut = 0;
 14397                           
 14398                           ;incstack = 0
 14399                           ; Regs used in _ResultRx: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14400  08AF  0022               	movlb	2	; select bank2
 14401  08B0  01B6               	clrf	_TimeOut^(0+256)
 14402  08B1                     i1l7672:	
 14403                           ;klondike.c: 164: while(ResultQC < 4) {
 14404                           
 14405  08B1  3004               	movlw	4
 14406  08B2  0022               	movlb	2	; select bank2
 14407  08B3  0233               	subwf	_ResultQC^(0+256),w
 14408  08B4  1803               	btfsc	3,0
 14409  08B5  28E5               	goto	i1l7674
 14410                           
 14411                           ;klondike.c: 165: if(RCIF) {
 14412  08B6  0020               	movlb	0	; select bank0
 14413  08B7  1E91               	btfss	17,5	;volatile
 14414  08B8  28CA               	goto	i1l7664
 14415                           
 14416                           ;klondike.c: 166: ResultQue[2+ResultQC++] = RCREG;
 14417  08B9  0023               	movlb	3	; select bank3
 14418  08BA  0819               	movf	25,w	;volatile
 14419  08BB  00FC               	movwf	??_ResultRx
 14420  08BC  0022               	movlb	2	; select bank2
 14421  08BD  0833               	movf	_ResultQC^(0+256),w
 14422  08BE  3E02               	addlw	2
 14423  08BF  3EC8               	addlw	_ResultQue& (0+255)
 14424  08C0  0086               	movwf	6
 14425  08C1  3001               	movlw	1	; select bank3/4
 14426  08C2  0087               	movwf	7
 14427  08C3  087C               	movf	??_ResultRx,w
 14428  08C4  0081               	movwf	1
 14429  08C5  3001               	movlw	1
 14430  08C6  00FC               	movwf	??_ResultRx
 14431  08C7  087C               	movf	??_ResultRx,w
 14432  08C8  07B3               	addwf	_ResultQC^(0+256),f
 14433                           
 14434                           ;klondike.c: 167: TimeOut = 0;
 14435  08C9  01B6               	clrf	_TimeOut^(0+256)
 14436  08CA                     i1l7664:	
 14437                           
 14438                           ;klondike.c: 168: }
 14439                           ;klondike.c: 169: if(TimeOut++ > 32) {
 14440  08CA  3001               	movlw	1
 14441  08CB  00FC               	movwf	??_ResultRx
 14442  08CC  087C               	movf	??_ResultRx,w
 14443  08CD  0022               	movlb	2	; select bank2
 14444  08CE  07B6               	addwf	_TimeOut^(0+256),f
 14445  08CF  3022               	movlw	34
 14446  08D0  0236               	subwf	_TimeOut^(0+256),w
 14447  08D1  1C03               	skipc
 14448  08D2  28D8               	goto	i1l710
 14449                           
 14450                           ;klondike.c: 170: Status.Noise++;
 14451  08D3  3001               	movlw	1
 14452  08D4  00FC               	movwf	??_ResultRx
 14453  08D5  087C               	movf	??_ResultRx,w
 14454  08D6  07DE               	addwf	(_Status^(0+256)+12),f	;volatile
 14455                           
 14456                           ;klondike.c: 171: goto outrx;
 14457  08D7  2902               	goto	i1l7680
 14458  08D8                     i1l710:	
 14459                           
 14460                           ;klondike.c: 172: }
 14461                           ;klondike.c: 173: if(RCSTAbits.OERR) {
 14462  08D8  0023               	movlb	3	; select bank3
 14463  08D9  1C9D               	btfss	29,1	;volatile
 14464  08DA  28B1               	goto	i1l7672
 14465                           
 14466                           ;klondike.c: 174: if(Status.State == 'W') {
 14467  08DB  0022               	movlb	2	; select bank2
 14468  08DC  0852               	movf	_Status^(0+256),w	;volatile
 14469  08DD  3A57               	xorlw	87
 14470  08DE  1D03               	skipz
 14471  08DF  2902               	goto	i1l7680
 14472                           
 14473                           ;klondike.c: 175: Status.ErrorCount++;
 14474  08E0  3001               	movlw	1
 14475  08E1  00FC               	movwf	??_ResultRx
 14476  08E2  087C               	movf	??_ResultRx,w
 14477  08E3  07D9               	addwf	(_Status^(0+256)+7),f	;volatile
 14478                           
 14479                           ;klondike.c: 176: }
 14480                           ;klondike.c: 177: goto outrx;
 14481  08E4  2902               	goto	i1l7680
 14482  08E5                     i1l7674:	
 14483                           
 14484                           ;klondike.c: 178: }
 14485                           ;klondike.c: 179: }
 14486                           ;klondike.c: 181: if(Status.State == 'W') {
 14487  08E5  0852               	movf	_Status^(0+256),w	;volatile
 14488  08E6  3A57               	xorlw	87
 14489  08E7  1D03               	skipz
 14490  08E8  2902               	goto	i1l7680
 14491                           
 14492                           ;klondike.c: 182: ResultQue[0] = '=';
 14493  08E9  303D               	movlw	61
 14494  08EA  00FC               	movwf	??_ResultRx
 14495  08EB  087C               	movf	??_ResultRx,w
 14496  08EC  0023               	movlb	3	; select bank3
 14497  08ED  00C8               	movwf	_ResultQue^(0+384)	;volatile
 14498                           
 14499                           ;klondike.c: 183: ResultQue[1] = Status.WorkID;
 14500  08EE  0022               	movlb	2	; select bank2
 14501  08EF  0856               	movf	(_Status^(0+256)+4),w	;volatile
 14502  08F0  00FC               	movwf	??_ResultRx
 14503  08F1  087C               	movf	??_ResultRx,w
 14504  08F2  0023               	movlb	3	; select bank3
 14505  08F3  00C9               	movwf	(_ResultQue^(0+384)+1)	;volatile
 14506                           
 14507                           ;klondike.c: 184: SendCmdReply(&ResultQue, &ResultQue+1, sizeof(ResultQue)-1);
 14508  08F4  30C8               	movlw	low _ResultQue
 14509  08F5  00F6               	movwf	?i1_SendCmdReply
 14510  08F6  3001               	movlw	high _ResultQue
 14511  08F7  00F7               	movwf	?i1_SendCmdReply+1
 14512  08F8  30C9               	movlw	low (_ResultQue+1)
 14513  08F9  00F8               	movwf	?i1_SendCmdReply+2
 14514  08FA  3001               	movlw	high (_ResultQue+1)
 14515  08FB  00F9               	movwf	?i1_SendCmdReply+3
 14516  08FC  3005               	movlw	5
 14517  08FD  00FC               	movwf	??_ResultRx
 14518  08FE  087C               	movf	??_ResultRx,w
 14519  08FF  00FA               	movwf	?i1_SendCmdReply+4
 14520  0900  3196  2631         	fcall	i1_SendCmdReply
 14521  0902                     i1l7680:	
 14522                           ;klondike.c: 185: }
 14523                           ;klondike.c: 187: outrx:
 14524                           
 14525                           
 14526                           ;klondike.c: 188: { RCSTAbits.SPEN = 0; RCSTAbits.SPEN = 1; };
 14527  0902  0023               	movlb	3	; select bank3
 14528  0903  139D               	bcf	29,7	;volatile
 14529  0904  179D               	bsf	29,7	;volatile
 14530                           
 14531                           ;klondike.c: 189: ResultQC = 0;
 14532  0905  0022               	movlb	2	; select bank2
 14533  0906  01B3               	clrf	_ResultQC^(0+256)
 14534                           
 14535                           ;klondike.c: 190: IOCBF = 0;
 14536  0907  0027               	movlb	7	; select bank7
 14537  0908  0196               	clrf	22	;volatile
 14538  0909  0008               	return
 14539  090A                     __end_of_ResultRx:	
 14540                           
 14541                           	psect	text67
 14542  1631                     __ptext67:	
 14543 ;; *************** function i1_SendCmdReply *****************
 14544 ;; Defined at:
 14545 ;;		line 208 in file "main.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;  SendCmdReply    2    6[COMMON] PTR unsigned char 
 14548 ;;		 -> ResultQue(6), OUTPacket(64), 
 14549 ;;  SendCmdReply    2    8[COMMON] PTR unsigned char 
 14550 ;;		 -> ResultQue(6), Cfg(6), ID(12), Status(13), 
 14551 ;;  SendCmdReply    1   10[COMMON] unsigned char 
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;  SendCmdReply    1   11[COMMON] unsigned char 
 14554 ;; Return value:  Size  Location     Type
 14555 ;;		None               void
 14556 ;; Registers used:
 14557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14558 ;; Tracked objects:
 14559 ;;		On entry : 0/0
 14560 ;;		On exit  : 0/0
 14561 ;;		Unchanged: 0/0
 14562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14563 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14565 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14567 ;;Total ram usage:       14 bytes
 14568 ;; Hardware stack levels used:    1
 14569 ;; Hardware stack levels required when called:    1
 14570 ;; This function calls:
 14571 ;;		i1___wmul
 14572 ;;		i1___bmul
 14573 ;; This function is called by:
 14574 ;;		_ResultRx
 14575 ;; This function uses a non-reentrant model
 14576 ;;
 14577                           
 14578                           
 14579                           ;psect for function i1_SendCmdReply
 14580  1631                     i1_SendCmdReply:	
 14581                           
 14582                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
 14583                           
 14584                           ;incstack = 0
 14585                           ; Regs used in i1_SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14586  1631  087A               	movf	i1SendCmdReply@count,w
 14587  1632  0020               	movlb	0	; select bank0
 14588  1633  00D0               	movwf	??i1_SendCmdReply
 14589  1634  01D1               	clrf	??i1_SendCmdReply+1
 14590  1635  0022               	movlb	2	; select bank2
 14591  1636  0850               	movf	_WQI^(0+256),w
 14592  1637  0020               	movlb	0	; select bank0
 14593  1638  00D2               	movwf	??i1_SendCmdReply+2
 14594  1639  01D3               	clrf	??i1_SendCmdReply+3
 14595  163A  0852               	movf	??i1_SendCmdReply+2,w
 14596  163B  00F0               	movwf	?i1___wmul
 14597  163C  0853               	movf	??i1_SendCmdReply+3,w
 14598  163D  00F1               	movwf	?i1___wmul+1
 14599  163E  300F               	movlw	15
 14600  163F  00F2               	movwf	?i1___wmul+2
 14601  1640  3000               	movlw	0
 14602  1641  00F3               	movwf	?i1___wmul+3
 14603  1642  319B  23DA  3196   	fcall	i1___wmul
 14604  1645  0020               	movlb	0	; select bank0
 14605  1646  0850               	movf	??i1_SendCmdReply,w
 14606  1647  0770               	addwf	?i1___wmul,w
 14607  1648  00D4               	movwf	??i1_SendCmdReply+4
 14608  1649  0851               	movf	??i1_SendCmdReply+1,w
 14609  164A  3D71               	addwfc	?i1___wmul+1,w
 14610  164B  00D5               	movwf	??i1_SendCmdReply+5
 14611  164C  0854               	movf	??i1_SendCmdReply+4,w
 14612  164D  3E02               	addlw	2
 14613  164E  00D6               	movwf	??i1_SendCmdReply+6
 14614  164F  3000               	movlw	0
 14615  1650  3D55               	addwfc	??i1_SendCmdReply+5,w
 14616  1651  00D7               	movwf	??i1_SendCmdReply+7
 14617  1652  0857               	movf	??i1_SendCmdReply+7,w
 14618  1653  3A80               	xorlw	128
 14619  1654  00FF               	movwf	127
 14620  1655  3080               	movlw	128
 14621  1656  027F               	subwf	127,w
 14622  1657  1D03               	skipz
 14623  1658  2E5B               	goto	u865_25
 14624  1659  3040               	movlw	64
 14625  165A  0256               	subwf	??i1_SendCmdReply+6,w
 14626  165B                     u865_25:	
 14627  165B  1803               	skipnc
 14628  165C  0008               	return
 14629                           
 14630                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
 14631  165D  0876               	movf	i1SendCmdReply@cmd,w
 14632  165E  0086               	movwf	6
 14633  165F  0877               	movf	i1SendCmdReply@cmd+1,w
 14634  1660  0087               	movwf	7
 14635  1661  0801               	movf	1,w
 14636  1662  0020               	movlb	0	; select bank0
 14637  1663  00D0               	movwf	??i1_SendCmdReply
 14638  1664  300F               	movlw	15
 14639  1665  00D1               	movwf	??i1_SendCmdReply+1
 14640  1666  0851               	movf	??i1_SendCmdReply+1,w
 14641  1667  00F0               	movwf	?i1___bmul
 14642  1668  0022               	movlb	2	; select bank2
 14643  1669  0850               	movf	_WQI^(0+256),w
 14644  166A  319A  22CB  3196   	fcall	i1___bmul
 14645  166D  3E20               	addlw	32
 14646  166E  0086               	movwf	6
 14647  166F  3002               	movlw	2	; select bank4/5
 14648  1670  0087               	movwf	7
 14649  1671  0020               	movlb	0	; select bank0
 14650  1672  0850               	movf	??i1_SendCmdReply,w
 14651  1673  0081               	movwf	1
 14652                           
 14653                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
 14654  1674  0022               	movlb	2	; select bank2
 14655  1675  0834               	movf	_SlaveAddress^(0+256),w
 14656  1676  0020               	movlb	0	; select bank0
 14657  1677  00D0               	movwf	??i1_SendCmdReply
 14658  1678  300F               	movlw	15
 14659  1679  00D1               	movwf	??i1_SendCmdReply+1
 14660  167A  0851               	movf	??i1_SendCmdReply+1,w
 14661  167B  00F0               	movwf	?i1___bmul
 14662  167C  0022               	movlb	2	; select bank2
 14663  167D  0850               	movf	_WQI^(0+256),w
 14664  167E  319A  22CB  3196   	fcall	i1___bmul
 14665  1681  0020               	movlb	0	; select bank0
 14666  1682  00D2               	movwf	??i1_SendCmdReply+2
 14667  1683  0A52               	incf	??i1_SendCmdReply+2,w
 14668  1684  3E20               	addlw	32
 14669  1685  0086               	movwf	6
 14670  1686  3002               	movlw	2	; select bank4/5
 14671  1687  0087               	movwf	7
 14672  1688  0850               	movf	??i1_SendCmdReply,w
 14673  1689  0081               	movwf	1
 14674                           
 14675                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
 14676  168A  01FB               	clrf	i1SendCmdReply@n
 14677  168B                     i1l7652:	
 14678  168B  087A               	movf	i1SendCmdReply@count,w
 14679  168C  027B               	subwf	i1SendCmdReply@n,w
 14680  168D  1803               	btfsc	3,0
 14681  168E  2EBB               	goto	i1l7654
 14682                           
 14683                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
 14684  168F  0879               	movf	i1SendCmdReply@data+1,w
 14685  1690  00D1               	movwf	??i1_SendCmdReply+1
 14686  1691  0878               	movf	i1SendCmdReply@data,w
 14687  1692  00D0               	movwf	??i1_SendCmdReply
 14688  1693  087B               	movf	i1SendCmdReply@n,w
 14689  1694  0750               	addwf	??i1_SendCmdReply,w
 14690  1695  0084               	movwf	4
 14691  1696  0851               	movf	??i1_SendCmdReply+1,w
 14692  1697  1803               	skipnc
 14693  1698  0A51               	incf	??i1_SendCmdReply+1,w
 14694  1699  0085               	movwf	5
 14695  169A  0800               	movf	0,w	;code access
 14696  169B  00D2               	movwf	??i1_SendCmdReply+2
 14697  169C  0022               	movlb	2	; select bank2
 14698  169D  0850               	movf	_WQI^(0+256),w
 14699  169E  0020               	movlb	0	; select bank0
 14700  169F  00D3               	movwf	??i1_SendCmdReply+3
 14701  16A0  01D4               	clrf	??i1_SendCmdReply+4
 14702  16A1  0853               	movf	??i1_SendCmdReply+3,w
 14703  16A2  00F0               	movwf	?i1___wmul
 14704  16A3  0854               	movf	??i1_SendCmdReply+4,w
 14705  16A4  00F1               	movwf	?i1___wmul+1
 14706  16A5  300F               	movlw	15
 14707  16A6  00F2               	movwf	?i1___wmul+2
 14708  16A7  3000               	movlw	0
 14709  16A8  00F3               	movwf	?i1___wmul+3
 14710  16A9  319B  23DA  3196   	fcall	i1___wmul
 14711  16AC  0870               	movf	?i1___wmul,w
 14712  16AD  077B               	addwf	i1SendCmdReply@n,w
 14713  16AE  3E02               	addlw	2
 14714  16AF  3E20               	addlw	32
 14715  16B0  0086               	movwf	6
 14716  16B1  3002               	movlw	2	; select bank4/5
 14717  16B2  0087               	movwf	7
 14718  16B3  0020               	movlb	0	; select bank0
 14719  16B4  0852               	movf	??i1_SendCmdReply+2,w
 14720  16B5  0081               	movwf	1
 14721  16B6  3001               	movlw	1
 14722  16B7  00D0               	movwf	??i1_SendCmdReply
 14723  16B8  0850               	movf	??i1_SendCmdReply,w
 14724  16B9  07FB               	addwf	i1SendCmdReply@n,f
 14725  16BA  2E8B               	goto	i1l7652
 14726  16BB                     i1l7654:	
 14727                           
 14728                           ;main.c: 214: WQI = (WQI+1) & 3;
 14729  16BB  0022               	movlb	2	; select bank2
 14730  16BC  0A50               	incf	_WQI^(0+256),w
 14731  16BD  3903               	andlw	3
 14732  16BE  0020               	movlb	0	; select bank0
 14733  16BF  00D0               	movwf	??i1_SendCmdReply
 14734  16C0  0850               	movf	??i1_SendCmdReply,w
 14735  16C1  0022               	movlb	2	; select bank2
 14736  16C2  00D0               	movwf	_WQI^(0+256)
 14737  16C3  0008               	return
 14738  16C4                     __end_ofi1_SendCmdReply:	
 14739                           
 14740                           	psect	text68
 14741  1ACB                     __ptext68:	
 14742 ;; *************** function i1___bmul *****************
 14743 ;; Defined at:
 14744 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\bmul.c"
 14745 ;; Parameters:    Size  Location     Type
 14746 ;;  __bmul          1    wreg     unsigned char 
 14747 ;;  __bmul          1    0[COMMON] unsigned char 
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;  __bmul          1    2[COMMON] unsigned char 
 14750 ;;  __bmul          1    3[COMMON] unsigned char 
 14751 ;; Return value:  Size  Location     Type
 14752 ;;                  1    wreg      unsigned char 
 14753 ;; Registers used:
 14754 ;;		wreg, status,2, status,0
 14755 ;; Tracked objects:
 14756 ;;		On entry : 0/0
 14757 ;;		On exit  : 0/0
 14758 ;;		Unchanged: 0/0
 14759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14760 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14764 ;;Total ram usage:        4 bytes
 14765 ;; Hardware stack levels used:    1
 14766 ;; This function calls:
 14767 ;;		Nothing
 14768 ;; This function is called by:
 14769 ;;		i1_SendCmdReply
 14770 ;; This function uses a non-reentrant model
 14771 ;;
 14772                           
 14773                           
 14774                           ;psect for function i1___bmul
 14775  1ACB                     i1___bmul:	
 14776                           
 14777                           ;incstack = 0
 14778                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 14779                           ;i1___bmul@multiplier stored from wreg
 14780  1ACB  00F2               	movwf	i1___bmul@multiplier
 14781  1ACC  01F3               	clrf	i1___bmul@product
 14782  1ACD                     i1l6150:	
 14783  1ACD  1C72               	btfss	i1___bmul@multiplier,0
 14784  1ACE  2AD3               	goto	i1l6154
 14785  1ACF  0870               	movf	i1___bmul@multiplicand,w
 14786  1AD0  00F1               	movwf	??i1___bmul
 14787  1AD1  0871               	movf	??i1___bmul,w
 14788  1AD2  07F3               	addwf	i1___bmul@product,f
 14789  1AD3                     i1l6154:	
 14790  1AD3  1003               	clrc
 14791  1AD4  0DF0               	rlf	i1___bmul@multiplicand,f
 14792  1AD5  1003               	clrc
 14793  1AD6  0CF2               	rrf	i1___bmul@multiplier,f
 14794  1AD7  08F2               	movf	i1___bmul@multiplier,f
 14795  1AD8  1D03               	skipz
 14796  1AD9  2ACD               	goto	i1l6150
 14797  1ADA  0873               	movf	i1___bmul@product,w
 14798  1ADB  0008               	return
 14799  1ADC                     __end_ofi1___bmul:	
 14800                           
 14801                           	psect	text69
 14802  1BDA                     __ptext69:	
 14803 ;; *************** function i1___wmul *****************
 14804 ;; Defined at:
 14805 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;  __wmul          2    0[COMMON] unsigned int 
 14808 ;;  __wmul          2    2[COMMON] unsigned int 
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;  __wmul          2    4[COMMON] unsigned int 
 14811 ;; Return value:  Size  Location     Type
 14812 ;;                  2    0[COMMON] unsigned int 
 14813 ;; Registers used:
 14814 ;;		wreg, status,2, status,0
 14815 ;; Tracked objects:
 14816 ;;		On entry : 0/0
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14823 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14824 ;;Total ram usage:        6 bytes
 14825 ;; Hardware stack levels used:    1
 14826 ;; This function calls:
 14827 ;;		Nothing
 14828 ;; This function is called by:
 14829 ;;		i1_SendCmdReply
 14830 ;; This function uses a non-reentrant model
 14831 ;;
 14832                           
 14833                           
 14834                           ;psect for function i1___wmul
 14835  1BDA                     i1___wmul:	
 14836                           
 14837                           ;incstack = 0
 14838                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 14839  1BDA  01F4               	clrf	i1___wmul@product
 14840  1BDB  01F5               	clrf	i1___wmul@product+1
 14841  1BDC                     i1l7632:	
 14842  1BDC  1C70               	btfss	i1___wmul@multiplier,0
 14843  1BDD  2BE2               	goto	i1l1264
 14844  1BDE  0872               	movf	i1___wmul@multiplicand,w
 14845  1BDF  07F4               	addwf	i1___wmul@product,f
 14846  1BE0  0873               	movf	i1___wmul@multiplicand+1,w
 14847  1BE1  3DF5               	addwfc	i1___wmul@product+1,f
 14848  1BE2                     i1l1264:	
 14849  1BE2  3001               	movlw	1
 14850  1BE3                     u862_25:	
 14851  1BE3  35F2               	lslf	i1___wmul@multiplicand,f
 14852  1BE4  0DF3               	rlf	i1___wmul@multiplicand+1,f
 14853  1BE5  0B89               	decfsz	9,f
 14854  1BE6  2BE3               	goto	u862_25
 14855  1BE7  3001               	movlw	1
 14856  1BE8                     u863_25:	
 14857  1BE8  36F1               	lsrf	i1___wmul@multiplier+1,f
 14858  1BE9  0CF0               	rrf	i1___wmul@multiplier,f
 14859  1BEA  0B89               	decfsz	9,f
 14860  1BEB  2BE8               	goto	u863_25
 14861  1BEC  0871               	movf	i1___wmul@multiplier+1,w
 14862  1BED  0470               	iorwf	i1___wmul@multiplier,w
 14863  1BEE  1D03               	skipz
 14864  1BEF  2BDC               	goto	i1l7632
 14865  1BF0  0875               	movf	i1___wmul@product+1,w
 14866  1BF1  01F1               	clrf	?i1___wmul+1
 14867  1BF2  07F1               	addwf	?i1___wmul+1,f
 14868  1BF3  0874               	movf	i1___wmul@product,w
 14869  1BF4  01F0               	clrf	?i1___wmul
 14870  1BF5  07F0               	addwf	?i1___wmul,f
 14871  1BF6  0008               	return
 14872  1BF7                     __end_ofi1___wmul:	
 14873  007E                     btemp	set	126	;btemp
 14874  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    174
    Data        63
    BSS         154
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     24      32
    BANK1            80     78      80
    BANK2            80     11      77
    BANK3            80      0      65
    BANK4            16      0      16
    BANK5            16      0       0
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8             8      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 4
		 -> SetAsicClock@CLOCK_F_VALUE(BANK1[4]), 

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?___lltoft	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___ftneg	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___awmod	int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_rotate	unsigned long  size(1) Largest target is 0

    ?_memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK2[1]), NULL(NULL[0]), BDT(BANK0[32]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    SendCmdReply@data	PTR unsigned char  size(2) Largest target is 13
		 -> ResultQue(BANK3[6]), Cfg(BANK3[6]), ID(CODE[12]), Status(BANK2[13]), 

    SendCmdReply@cmd	PTR unsigned char  size(2) Largest target is 64
		 -> ResultQue(BANK3[6]), OUTPacket(BANK5[64]), 

    USBGenericInHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBGenericOutHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    ProcessCmd@cmd	PTR unsigned char  size(1) Largest target is 64
		 -> OUTPacket(BANK5[64]), 

    I2CInBuf	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    AsicPreCalc@work	PTR struct _worktask size(2) Largest target is 360
		 -> WorkQue(BIGRAM[360]), 

    SendAsicData@work	PTR struct _worktask size(2) Largest target is 360
		 -> WorkQue(BIGRAM[360]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 32
		 -> configDescriptor1(CODE[32]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> INPacket(BANK4[64]), OUTPacket(BANK5[64]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    S118$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S108$wRam	PTR unsigned short  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(1) Largest target is 0

    S108$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S66$wRom	PTR const unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S66$wRam	PTR unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S66$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S66$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_ResultRx
    _ResultRx->i1_SendCmdReply
    i1_SendCmdReply->i1___wmul

Critical Paths under _main in BANK0

    _SendCmdReply->___wmul
    _AsicPreCalc->_rotate
    _SendAsicData->___wmul
    _UserInit->_DetectAsics
    _SetAsicClock->___lltoft
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _DetectAsics->___awdiv
    _UpdateFanLevel->___awtoft
    ___fttol->___awtoft
    ___fttol->___lltoft
    ___ftneg->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCBInitEP
    _USBCBInitEP->_USBEnableEndpoint
    _USBTransferOnePacket->___bmul
    _USBEnableEndpoint->_USBConfigureEndpoint
    ___ftadd->___awtoft
    ___ftadd->___lltoft

Critical Paths under _ISRCode in BANK0

    _ResultRx->i1_SendCmdReply

Critical Paths under _main in BANK1

    _ProcessIO->_ProcessCmd
    _ProcessCmd->_AsicPushWork
    _ProcessCmd->_SetAsicClock
    _AsicPushWork->_AsicPreCalc
    _InitWorkTick->_SetAsicClock
    _SetAsicClock->___fttol
    ___ftdiv->___ftadd
    _WorkTick->_UpdateFanLevel
    _UpdateFanLevel->___fttol
    ___fttol->___ftdiv
    ___ftneg->___ftmul
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    ___ftadd->___ftneg

Critical Paths under _ISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_ProcessIO
    _ProcessIO->_ProcessCmd

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23022
                     _USBDeviceTasks
                       _AsicPushWork
                           _WorkTick
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            8     8      0    6095
                                              3 BANK2      8     8      0
               _USBTransferOnePacket
                         _ProcessCmd
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _ProcessCmd                                           7     7      0    5445
                                             74 BANK1      4     4      0
                                              0 BANK2      3     3      0
                       _AsicPushWork
                       _SendCmdReply
                       _SetAsicClock
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SendCmdReply                                        14     9      5     495
                                             14 BANK0      6     1      5
                                              0 BANK1      8     8      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     136
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _AsicPushWork                                         5     5      0    2016
                                             69 BANK1      5     5      0
                       _SendAsicData
                        _AsicPreCalc
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     136
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _AsicPreCalc                                         69    67      2    1836
                                              0 BANK1     69    67      2
                             _rotate
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _rotate                                              13     8      5      88
                                              8 BANK0     13     8      5
 ---------------------------------------------------------------------------------
 (4) _SendAsicData                                         6     4      2      44
                                             14 BANK0      6     4      2
                             _Send32
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Send32                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0    3363
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             0     0      0    2967
                        _DetectAsics
                            _InitFAN
                     _InitTempSensor
                       _InitWorkTick
                       _InitResultRx
 ---------------------------------------------------------------------------------
 (3) _InitResultRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitWorkTick                                         0     0      0    2389
                       _SetAsicClock
 ---------------------------------------------------------------------------------
 (3) _SetAsicClock                                        12     8      4    2389
                                             62 BANK1     12     8      4
                            ___ftadd
                            ___ftdiv
                            ___fttol
                           ___lltoft
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     162
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8      92
                                              8 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4     278
                                             16 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6     489
                                             32 BANK1     16    10      6
                           ___ftpack
                            ___ftadd (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitTempSensor                                       1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitFAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DetectAsics                                         10    10      0     578
                                             17 BANK0      7     7      0
                                              0 BANK1      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     445
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _WorkTick                                             3     3      0    2500
                                             69 BANK1      3     3      0
                     _UpdateFanLevel
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     296
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _UpdateFanLevel                                       7     7      0    2204
                                             62 BANK1      7     7      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     252
                                             48 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      45
                                             16 BANK1      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6     535
                                              0 BANK1     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3     300
                                             16 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    9048
                                             18 BANK1      3     3      0
                      _USBDeviceInit
                 _USBWakeFromSuspend
                         _USBSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    5563
                                             14 BANK1      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                             11 BANK0      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             14 BANK0      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                             10 BANK0      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    5127
                                             13 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    3984
                                             12 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1530
                                              6 BANK1      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      68
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    1379
                                              6 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               9     3      6     137
                                              8 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                             13 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                             11 BANK0      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0     136
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    1007
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    1007
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    1007
                                              0 BANK1      6     0      6
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
                  _USBCBErrorHandler
                 _USBCBCheckOtherReq
              _USBCBStdSetDscHandler
                        _USBCBInitEP
 ---------------------------------------------------------------------------------
 (7) _USBCBInitEP                                          3     3      0     976
                                             21 BANK0      3     3      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     4      3     440
                                             12 BANK0      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     536
                                             15 BANK0      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 7     6      1     316
                                              8 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBCheckOtherReq                                   0     0      0       0
              _USBCheckVendorRequest
 ---------------------------------------------------------------------------------
 (8) _USBCheckVendorRequest                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     396
                                              8 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    1049
                                             19 BANK1     13     7      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISRCode                                             1     1      0    1210
                                             13 COMMON     1     1      0
                           _ResultRx
 ---------------------------------------------------------------------------------
 (11) _ResultRx                                            1     1      0    1210
                                             12 COMMON     1     1      0
                     i1_SendCmdReply
 ---------------------------------------------------------------------------------
 (12) i1_SendCmdReply                                     14     9      5    1210
                                              6 COMMON     6     1      5
                                              0 BANK0      8     8      0
                           i1___wmul
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) i1___bmul                                            4     3      1     212
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1___wmul                                            6     2      4     372
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceTasks
     _USBDeviceInit
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
       _USBCBErrorHandler
       _USBCBCheckOtherReq
         _USBCheckVendorRequest
       _USBCBStdSetDscHandler
       _USBCBInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
           ___bmul (ARG)
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
           _USBCBErrorHandler
           _USBCBCheckOtherReq
             _USBCheckVendorRequest
           _USBCBStdSetDscHandler
           _USBCBInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
               ___bmul (ARG)
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
             _USBCBErrorHandler
             _USBCBCheckOtherReq
               _USBCheckVendorRequest
             _USBCBStdSetDscHandler
             _USBCBInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
                 ___bmul (ARG)
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
   _AsicPushWork
     _SendAsicData
       _Send32
       ___wmul (ARG)
     _AsicPreCalc
       _rotate
       ___wmul (ARG)
     ___wmul
   _WorkTick
     _UpdateFanLevel
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
         ___lltoft (ARG)
           ___ftpack
     ___awmod
   _InitializeSystem
     _USBDeviceInit
     _UserInit
       _DetectAsics
         ___awdiv
       _InitFAN
       _InitTempSensor
       _InitWorkTick
         _SetAsicClock
           ___ftadd
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___ftadd (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft
             ___ftpack
           ___lmul
           ___lwdiv
       _InitResultRx
   _ProcessIO
     _USBTransferOnePacket
       ___bmul (ARG)
     _ProcessCmd
       _AsicPushWork
         _SendAsicData
           _Send32
           ___wmul (ARG)
         _AsicPreCalc
           _rotate
           ___wmul (ARG)
         ___wmul
       _SendCmdReply
         ___bmul
         ___wmul
       _SetAsicClock
         ___ftadd
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft
           ___ftpack
         ___lmul
         ___lwdiv
       ___wmul
     ___bmul

 _ISRCode (ROOT)
   _ResultRx
     i1_SendCmdReply
       i1___wmul
       i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0      11       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     18      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      B      4D       9       96.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      41      11       81.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      0      10      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               10      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     15C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8                8      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     16D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Jan 31 12:30:16 2014

                              _USB_SD_Ptr 0801                                         pc 0002  
                          ___bmul@product 005A                               _SSPSTATbits 0214  
                                      _ID 089F                    ?_USBCheckVendorRequest 0070  
                            ___awdiv@sign 005E                             _USBDeviceInit 090A  
                     ___wmul@multiplicand 005A                          i1___wmul@product 0074  
                            ___ftadd@exp1 00BF                              ___ftadd@exp2 00BE  
                     __end_of_AsicPreCalc 0414                                       LATC 010E  
                              _BankRanges 0340      USER_USB_CALLBACK_EVENT_HANDLER@event 00A0  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 00A2                              ___ftadd@sign 00BD  
                     __end_of_DetectAsics 0BBF                                       l140 0E12  
                                     l142 0E16                                       l128 094F  
                                     l208 1253                                       l330 10F0  
                                     l146 0E3C                                       l315 1172  
                                     l155 0EA3                                       l332 109B  
                                     l156 0EF9                                       l341 10C5  
             __end_of_USBStdGetDscHandler 1407                                       l318 11A8  
                                     l271 1F5E                                       l353 05BF  
                                     l274 1F9D                                       l354 05C0  
                                     l275 1F6A                                       l276 1F6D  
                                     l366 0632                                       l358 05F3  
                                     l720 0540                                       l671 078C  
                                     l824 1B57                                       l905 1DE2  
                                     _BDT 0020                                       l677 06F7  
                                     _GIE 005F                                       _PR2 001B  
                                     _UIE 0E92                                       _UIR 0E90  
                                     _Cfg 01DA                                       _WQI 0150  
                                     _WQX 0151                                       _buf 0260  
                              _USBSuspend 1BA2                                       _ptr 006F  
                            ___awmod@sign 005E                      USBStdSetCfgHandler@i 00AA  
                    USBStdSetCfgHandler@p 00A7                                       wreg 0009  
                          _USBDeviceTasks 0E05                            _USBDeviceState 00EE  
                  ??_USBCBWakeFromSuspend 0058                                      S7752 1800  
                   ??_USBCtrlTrfRxService 005A                  USBEnableEndpoint@options 005F  
                                    INDF1 0001                              __CFG_LVP$OFF 0000  
                                    FSR1H 0007                                      FSR1L 0006  
                            ___ftdiv@cntr 00CA                              ___ftdiv@sign 00CF  
                                    l1052 1124                                      l1081 0F9B  
                                    l1058 113B                                      l1264 1C00  
              USBConfigureEndpoint@handle 005E                                      l6000 0CE6  
                                    l6012 0D02                                      l6110 1D4B  
                                    l6008 0CFA                                      l6120 1D66  
                                    l7002 10A3                                      l7004 10A6  
                                    l6036 14A6                                      l6116 1D5D  
                                    l6108 1D3F                                      l5092 005E  
                                    l7110 0660                                      l7014 10B3  
                                    l7006 10A9                                      l6070 150B  
                                    l6062 14F1                                      l6054 14D6  
                                    l5086 0028                                      l7104 0639  
                                    l7016 10B6                                      l7032 10E5  
                                    l6064 14FA                                      l6056 14E4  
                                    l5512 105B                                      l6080 1CF4  
                                    l4474 1C8F                                      l7050 0572  
                                    l7018 10B9                                      l6410 0E29  
                                    l6066 14FD                                      l5514 1061  
                                    l6090 1019                                      l6332 0936  
                                    l6324 0929                                      l6316 0919  
                                    l4476 1C91                                      l7108 0658  
                                    l7028 10D5                                      l6430 0E4C  
                                    l5542 0524                                      l6078 1CE4  
                                    l6086 100F                                      l6352 0954  
                                    l7072 05CE                                      l7064 05A1  
                                    l7048 0570                                      l5800 1E2E  
                                    l7400 071F                                      l5730 1110  
                                    l5722 10FA                                      l6354 0964  
                                    l6530 1DB1                                      l6522 1DA5  
                                    l7082 05EC                                      l6602 1369  
                                    l6450 0E78                                      l6418 0E36  
                                    l5538 050C                                      l7402 0733  
                                    l5900 0F7A                                      l6372 0998  
                                    l6620 1CCB                                      l6532 1DB4  
                                    l6524 1DA8                                      l7084 05FC  
                                    l6460 0E85                                      l6444 0E6C  
                                    l5812 1E3B                                      l5804 1E35  
                                    l5726 1101                                      l6366 0979  
                                    l6534 1DB7                                      l6526 1DAB  
                                    l7094 0621                                      l6606 137A  
                                    l6454 0E7E                                      l6438 0E58  
                                    l5814 1E47                                      l5822 1E5C  
                                    l5736 1129                                      l5728 110B  
                                    l5912 0FAD                                      l6616 1CC3  
                                    l6528 1DAE                                      l6560 11D9  
                                    l7096 0626                                      l6608 137D  
                                    l7408 0754                                      l7416 0774  
                                    l7520 12DF                                      l5738 1131  
                                    l5906 0F8D                                      l6634 1E11  
                                    l6538 1DBA                                      l6706 155E  
                                    l6714 157B                                      l5826 1E64  
                                    l5818 1E53                                      l7522 12E1  
                                    l7514 12CB                                      l7506 12AB  
                                    l5916 0FBF                                      l5908 0F97  
                                    l6652 1E83                                      l6644 1E75  
                                    l6716 1580                                      l6724 159D  
                                    l6740 1230                                      l6804 17F8  
                                    l6468 0E9B                                      l7620 1BFA  
                                    l7604 1ADF                                      l7444 0A19  
                                    l7356 0679                                      l7508 12AD  
                                    l5926 0FDA                                      l5870 0F2B  
                                    l6662 1EAE                                      l6494 0EDD  
                                    l6478 0EA9                                      l6398 0E19  
                                    l5838 1CA3                                      l5942 0BEC  
                                    l7446 0A53                                      l7382 06D3  
                                    l6736 122C                                      l6496 0EED  
                                    l6488 0EC4                                      l7464 0B66  
                                    l5936 0BD6                                      l7608 1AE5  
                                    l7392 0702                                      l7376 06BE  
                                    l7368 06BA                                      l7480 1B67  
                                    l5866 0F24                                      l6674 1EDC  
                                    l6842 15E9                                      l6826 15BD  
                                    l6818 15AD                                      l6906 1F79  
                                    l7466 0BB6                                      l7378 06D1  
                                    l5876 0F3A                                      l6692 152D  
                                    l6748 125F                                      l6756 1269  
                                    l6836 15D5                                      l6916 1F91  
                                    l6596 1340                                      l7572 1FC2  
                                    l5964 0C46                                      l5956 0C2D  
                                    l7476 1B5F                                      l5894 0F67  
                                    l6678 1EF1                                      l6790 17A6  
                                    l7590 1FE8                                      l7582 1FCA  
                                    l7566 1FB7                                      l7398 0719  
                                    l5896 0F71                                      l5888 0F54  
                                    l6696 1537                                      l6960 1D33  
                                    l5984 0CA3                                      l7584 1FD6  
                                    l5898 0F76                                      l7754 1DC3  
                                    l6858 161C                                      l6890 13F7  
                                    l6882 13D2                                      l6874 1393  
                                    l6778 1771                                      l6954 1D11  
                                    l5978 0C8D                                      l7594 1FF1  
                                    l7756 1DDD                                      l6868 1C1C  
                                    l6876 139D                                      l6796 17CF  
                                    l6788 178A                                      l6972 116C  
                                    l5996 0CDE                                      l6894 13FA  
                                    l6798 17D7                                      l6982 1194  
                                    l7598 1FF9                                      l6888 13F4  
                                    l6992 11B1                                      l6994 11B2  
                                    l6986 11A0                                      _LATC 010E  
                                    u5005 03A5                                      u5015 03BD  
                                    u5025 03D2                                      u5035 03E8  
                                    u5045 03FD                                      u6125 0F7B  
                                    u4720 1D80                                      u6065 0F55  
                                    u6305 0CAF                                      u5505 0538  
                                    u6225 0BFE                                      u4730 1D91  
                                    u6155 0F8E                                      u6315 0CBF  
                                    u5435 1054                                      u6235 0C0E  
                                    u4740 001E                                      _RCIF 008D  
                                    u6245 0C2E                                      u5365 0DAE  
                                    u4725 1D7B                                      u4805 007C  
                                    u6095 0F68                                      u6335 0CE7  
                                    u6255 0C3D                                      u5375 0DCB  
                                    u4735 1D8D                                      u4815 009D  
                                    u5705 112C                                      u7305 1DF2  
                                    u7225 131B                                      u6345 0CED  
                                    u6425 14AD                                      u6265 0C47  
                                    u4905 0213                                      u4825 00C1  
                                    u8210 06E7                                      u7315 1DFA  
                                    u5475 04EC                                      u6515 1CE9  
                                    u4915 0228                                      u4835 00E4  
                                    u5485 0502                                      u6605 1D4C  
                                    u4925 023E                                      u4845 0113  
                                    u4765 0046                                      u5735 1142  
                                    u6375 0D03                                      u6455 14D7  
                                    u5495 0520                                      u6615 1D56  
                                    u4935 026D                                      u4855 0128  
                   ??_USBCtrlTrfTxService 0058                                      u5665 1106  
                                    u6385 0D09                                      u5905 1E4D  
                                    u8305 0B9F                                      u6545 101A  
                                    u6625 1D5E                                      u4945 02B0  
                                    u4865 0157                                      u7515 176A  
                                    u5915 1E54                                      u6555 1021  
                                    u4955 02F4                                      u4875 019A  
                                    u4795 0067                                      u8180 06A9  
                                    u5685 111F                                      u6485 14F2  
                                    u4965 0309                                      u4885 01E9  
                                    u7295 1DEC                                      u7375 1EE6  
                                    u4975 032B                                      u4895 01FE  
                                    _UCFG 0E91                                      u7625 1C26  
                                    u8505 1FD7                                      u6585 1D42  
                                    u4985 0350                                      u8265 09E5  
                                    u8515 1FE1                                      u4995 0365  
                                    _UEP0 0E98                                      u5885 1E3E  
                                    u8525 1FE9                                      u8285 0B71  
                                    _UEP1 0E99                                      u8295 0B88  
                                    u6865 0939                                      _UEIE 0E97  
                                    u8485 1FCD                                      u8585 1C01  
                                    u8595 1C06                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                         __end_of_ISRCode 0012                                      _Step 0122  
  USBStdFeatureReqHandler@current_ep_data 00AA                                      _pDst 0144  
                                    _main 1B54                              ___ftpack@arg 0058  
                            ___ftpack@exp 005B                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                    __end_of_AsicPushWork 148D                                      start 0012  
                           __CFG_IESO$OFF 0000                        _USBCBCheckOtherReq 07FD  
              __end_of_USBCheckStdRequest 10F1                    ??_USBCtrlTrfOutHandler 005E  
                       ___bmul@multiplier 005B                              ___ftmul@cntr 00AE  
                            ___ftmul@sign 00AF                 ??_USBStdFeatureReqHandler 00A6  
                         __end_of_InitFAN 1BDA                  ??_USBStdGetStatusHandler 0058  
                            ___fttol@exp1 00DD                              ___fttol@lval 00D9  
                          ?_USBDeviceInit 0070                             ?_InitResultRx 0070  
                     ?_USBCBCheckOtherReq 0070                           i1SendCmdReply@n 007B  
                                   ?_main 0070                           __end_of___awdiv 2000  
                         __end_of___ftadd 1000                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 1E6B         __size_of_USBCtrlEPServiceComplete 0079  
                         __end_of___ftdiv 0C76                           __end_of___ftneg 1AA6  
                         __end_of___ftmul 0D38                           ___awdiv@divisor 0058  
                  __end_of_USBDeviceTasks 0EFC                           __end_of___fttol 1514  
               ?_USBCtrlEPServiceComplete 0070                                     _IOCBF 0396  
                         __end_of___lwdiv 1D6D                                     i1l710 08D8  
                                   i1l821 000E                                     _UADDR 0E96  
                         ___awdiv@counter 005D                                     _RCREG 0199  
                           ?_InitWorkTick 0070                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 0064                       ___lmul@multiplicand 005C  
                           __CFG_PWRTE$ON 0000                              ___lltoft@exp 0065  
                                   _Error 014C                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 1F09                                     _sd000 08AB  
                                   _sd001 0805                                     _sd002 0839  
                           ___awtoft@sign 0065                             ___ftpack@sign 005C  
                    ??_USBCBCheckOtherReq 0058                          __end_ofi1___bmul 1ADC  
                        __end_ofi1___wmul 1BF7                          ??i1_SendCmdReply 0050  
                                   status 0003                       i1___wmul@multiplier 0070  
                                   wtemp0 007E              __size_of_USBStdSetCfgHandler 008F  
                          __CFG_MCLRE$OFF 0000                           __initialization 078F  
                             _AsicPreCalc 0014                              __end_of_main 1B6B  
                             _DetectAsics 0B08                            ??_InitResultRx 0058  
               __size_of_USBCtrlEPService 007C                                    ??_main 0068  
                           ___fttol@sign1 00D8                            ??_InitWorkTick 0066  
               __size_of_InitializeSystem 0017                           ?_USBDeviceTasks 0070  
                             ?_USBSuspend 0070                          __end_of_ResultRx 090A  
                               ??_ISRCode 007D                            _InitTempSensor 1B26  
                        __end_of_UserInit 1B26                                    _I2CCmd 006A  
                                  _ACTCON 039B                                    _ADRESH 009C  
                        ___awdiv@dividend 005A                          __end_of___awtoft 1CBA  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                          __end_of___ftpack 1152  
                        __end_of_WorkTick 1093                          __end_of___lltoft 1D09  
                                  i1l1264 1BE2                                    i1l6150 1ACD  
                                  i1l6154 1AD3                                    i1l7632 1BDC  
                                  i1l7652 168B                                    i1l7654 16BB  
                                  i1l7680 0902                                    i1l7664 08CA  
                                  i1l7672 08B1                                    i1l7674 08E5  
                                  _OSCCON 0099                                    _TMR0IF 005A  
                                  _TMR0CS 04AD                                    _PWM1OE 309E  
                                  _TMR2IF 0089                                    u862_25 1BE3  
                                  u863_25 1BE8                                    _TMR2ON 00E2  
                                  u865_25 165B                                    _SSP1EN 10AD  
                                  _SSP1IF 008B                                    _SSPADD 0212  
                                  _SSPBUF 0211                                 ??_InitFAN 0058  
                           ?_SetAsicClock 00DE                                _TempTarget 01E0  
                                  _Send32 0A5C                         _shortPacketStatus 0146  
                           ?_SendCmdReply 005E                           USBDeviceTasks@i 00B4  
                           ?_SendAsicData 005E               USBStdFeatureReqHandler@pUEP 00A8  
                USBTransferOnePacket@data 005D                USBCtrlTrfInHandler@lastDTS 005D  
                                  _Status 0152                           ??_USBDeviceInit 0058  
                                  ___bmul 1ADC                                    ___lmul 1006  
                                  ___wmul 1BF7                                 ??___awdiv 005C  
                               ??___ftadd 00B9                                 ??___awmod 005C  
                               ??___ftdiv 00C6                                 ??___ftneg 0066  
                               ??___ftmul 00A6                                 ??___fttol 00D4  
                            ?_USBCBInitEP 0070                                 ??___lwdiv 005C  
                       _USBEnableEndpoint 1CBA           __size_of_USBStdGetStatusHandler 0053  
                                  _memset 1C15                          ___awdiv@quotient 005F  
                         ___awmod@divisor 0058                                _ProcessCmd 0676  
                         ___awmod@counter 005D                        ?_USBEnableEndpoint 005F  
                                  _rotate 1D6D                     _USBCBStdSetDscHandler 0003  
                   ___ftmul@f3_as_product 00AB             __size_of_USBTransferOnePacket 004E  
                      __size_of_ProcessIO 007A                    __end_of_InitTempSensor 1B3D  
                     ??_USBEnableEndpoint 0060                               _CtrlTrfData 0048  
                   __size_of_AsicPushWork 0086                      _controlTransferState 006C  
                 __end_of__initialization 07FA                                ___ftadd@f1 00B3  
                              ___ftadd@f2 00B6                            ??_SetAsicClock 00E2  
                              ___ftdiv@f1 00C3                                ___ftdiv@f2 00C0  
                              ___ftdiv@f3 00CB                  __size_of_USBStallHandler 0022  
                          ??_SendCmdReply 00A0                                ___ftneg@f1 00B0  
                              ___awtoft@c 0060                       ___bmul@multiplicand 0058  
                          ??_SendAsicData 0060                       __size_of_USBSuspend 001C  
                              ___ftmul@f1 00A0                                ___ftmul@f2 00A3  
                 ??_USBCheckVendorRequest 0058                                ___fttol@f1 00D0  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 1CDF  
                           __end_of_sd000 08AF                             __end_of_sd001 0839  
                           __end_of_sd002 086D                              __pidataBANK2 1ABE  
                            __pidataBANK3 1AEE                              __pidataBANK6 1C35  
                       _USBCB_SOF_Handler 1004                                ___lltoft@c 0060  
        __size_of_USBCtrlEPAllowDataStage 0050             __size_of_USBConfigureEndpoint 0040  
             __end_of_USBCtrlTrfInHandler 11B5                        ?_USBCB_SOF_Handler 0070  
                              __end_of_ID 08AB                                 ?i1___bmul 0070  
                               ?i1___wmul 0070                            _OPTION_REGbits 0095  
                            _AsicPushWork 1407                           ?_InitTempSensor 0070  
                     i1SendCmdReply@count 007A                       ??_USBCB_SOF_Handler 0058  
                ??_USBCtrlTrfSetupHandler 00AD                          i1___bmul@product 0073  
                  _USBStdGetStatusHandler 1F59                      __end_of_InitResultRx 1B13  
                              __pbssBANK0 0068                                __pbssBANK1 00EE  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK4 0260                                __pbssBANK6 0320  
                       i1SendCmdReply@cmd 0076                      __end_of_InitWorkTick 1C76  
             __size_of_USBWakeFromSuspend 001B                               _pBDTEntryIn 0068  
                       __end_of_ProcessIO 130C          __end_of_USBCtrlEPServiceComplete 1292  
                                 ?_Send32 0070                 __end_of_USBCB_SOF_Handler 1005  
                              __pmaintext 1B54                      USBCtrlTrfRxService@i 005C  
                               ?_ResultRx 0070                                   ?___bmul 0058  
                                 ?___lmul 0058                                   ?___wmul 0058  
                              __pintentry 0004                                 ?_UserInit 0070  
                                 _I2CAddr 012D                                   ?_memset 0058  
                  ?_USBCBStdSetDscHandler 0070                            ___lmul@product 0060  
                              _device_dsc 088D                                 ?___awtoft 0060  
                               ?___ftpack 0058                          _USBCtrlEPService 130C  
                               ?_WorkTick 0070                               ?_ProcessCmd 0070  
                              ??i1___bmul 0071                                _ep_data_in 0124  
                               ?___lltoft 0060                                   ?_rotate 0058  
                              ??i1___wmul 0074                          _InitializeSystem 1B3D  
                             _NonceRanges 0320               __end_of_USBCtrlTrfRxService 1800  
                      _USBCheckStdRequest 1093                         _configDescriptor1 086D  
             __end_of_USBCtrlTrfTxService 15A2                       _USBStdSetCfgHandler 15A2  
                                 _ISRCode 0004                                   _PWM1DCH 0612  
                                 _PWM1DCL 0611                                   _OSCTUNE 0098  
                                 _PWM1CON 0613                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
           __size_of_USBCBWakeFromSuspend 0001                                __stringtab 0800  
                                 _UIRbits 0E90                                   _InitFAN 1BBE  
                    ?_USBStdSetCfgHandler 0070                           __size_of_Send32 00AC  
                                 _TimeOut 0136                                ??_ResultRx 007C  
              __size_of_USBEnableEndpoint 0025                              ?_AsicPreCalc 00A0  
                            ?_DetectAsics 0070                      ??_USBCheckStdRequest 00AC  
                         __size_of___bmul 0012             __size_of_USBCtrlTrfOutHandler 002D  
                                 ___awdiv 1FAC                           __size_of___lmul 0030  
                                 ___ftadd 0EFC                                   ___awmod 1E23  
                                 ___ftdiv 0BBF                                   ___ftneg 1A9D  
                        ??_USBDeviceTasks 00B2                           __size_of___wmul 001E  
                                 _WorkNow 0140                                   ___ftmul 0C76  
                                 _WorkQue 2288                                   ___fttol 148D  
                                 ___lwdiv 1D36                         ??_USBStallHandler 0058  
                              ??_UserInit 0068                                ??___awtoft 0063  
                              ??___ftpack 005D                           __size_of_memset 0020  
                              ??_WorkTick 00E5                 __end_of_configDescriptor1 088D  
                    __size_of_USBCBInitEP 001C                                ??___lltoft 0064  
                                 __ptext1 1292                                   __ptext2 0676  
                                 __ptext3 09B3                                   __ptext4 1ADC  
                                 __ptext5 1407                                   __ptext6 1BF7  
                                 __ptext7 0014                                   __ptext8 1D6D  
                                 __ptext9 16C4                                   _inPipes 0147  
                        _DetectAsics$2765 00A0                   __size_of_UpdateFanLevel 0147  
             _USBDeferOUTDataStagePackets 0139                           __size_of_rotate 0037  
                            ??_USBSuspend 00A6                                 _T2CONbits 001C  
                    __end_of_SetAsicClock 0E05                         _USBCBErrorHandler 1005  
                        ___awmod@dividend 005A                      __end_of_SendCmdReply 0A5C  
                     i1___bmul@multiplier 0072                                 _IOCBPbits 0394  
                    __end_of_SendAsicData 1758                        ?_USBCBErrorHandler 0070  
                           ?_USBCBSuspend 0070                        __end_of_USB_CD_Ptr 0805  
         __size_of_USBCtrlTrfSetupHandler 0050                                   clrloop0 1AB3  
                    end_of_initialization 07FA                            _ProcessIO$2308 0168  
                          _ProcessIO$2274 0166               __size_of_USBCBCheckOtherReq 0003  
                      __end_of_USB_SD_Ptr 0804                       _pBDTEntryEP0OutNext 006E  
                                 init_ram 1AA6                       ??_USBCBErrorHandler 0058  
                                 memset@c 005A                                   memset@n 005C  
                                 memset@p 005F                                   initloop 1AA7  
                     __size_of_ProcessCmd 0119                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 00A6                          SendCmdReply@data 0060  
              __size_of_USBCB_SOF_Handler 0001                        __end_of_USBSuspend 1BBE  
                 _USBCtrlEPAllowDataStage 1EB9                                 _RCSTAbits 019D  
                                 rotate@x 0058                                   rotate@y 005C  
                         AsicPreCalc@work 00A0                  _USBCtrlEPServiceComplete 1219  
                   i1___wmul@multiplicand 0072                _USBStatusStageEnabledFlag1 013C  
              _USBStatusStageEnabledFlag2 013D                        USBEnableEndpoint@p 0062  
               __end_of_USBCBErrorHandler 1006                          __CFG_FOSC$INTOSC 0000  
                   __size_of_InitResultRx 0013                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                          ??_USBCBSuspend 0058                        _BothEP0OutUOWNsSet 012C  
               USBStdSetCfgHandler@i_1089 00A9                                 _OUTPacket 02A0  
               USBConfigureEndpoint@EPNum 005D                ?_USBCtrlEPAllowStatusStage 0070  
                   __size_of_InitWorkTick 0021       USER_USB_CALLBACK_EVENT_HANDLER@size 00A4  
                               _USTATcopy 00EF              __end_of_USBTransferOnePacket 1EB9  
                             ___ftdiv@exp 00CE                                 _TXSTAbits 019E  
                           _PrecalcHashes 01A8                               ___ftmul@exp 00AA  
                      USBDeviceInit@i_718 005C                            __end_of_Send32 0B08  
                  _USBCtrlTrfSetupHandler 1F09            __size_of_USBCheckVendorRequest 0001  
           __end_of_USBCheckVendorRequest 0003                   __size_ofi1_SendCmdReply 0093  
                          __end_of___bmul 1AEE                     __end_of_USBDeviceInit 09B3  
                          __end_of___lmul 1036                              _InitResultRx 1B00  
                          __end_of___wmul 1C15                          ??_InitTempSensor 0058  
                             _BAUDCONbits 019F                            __end_of_memset 1C35  
                       _USBBusIsSuspended 0137                            __end_of_rotate 1DA4  
                            _InitWorkTick 1C55                         __size_ofi1___bmul 0011  
                               _LastError 01A6                       start_initialization 078F  
                       __size_ofi1___wmul 001D                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 005D              __end_of_USBConfigureEndpoint 1E23  
         __end_of_USBStdFeatureReqHandler 0676         __end_of_USBCtrlEPAllowStatusStage 1219  
                __end_of_USBCtrlEPService 1388                          SendAsicData@work 005E  
                __end_of_InitializeSystem 1B54                 ??_USBCtrlEPAllowDataStage 005B  
                          USBDeviceInit@i 005D                                  ??_Send32 0058  
                          USBDeviceInit@p 005A                    _pBDTEntryEP0OutCurrent 006D  
                 USBTransferOnePacket@dir 005C                   USBTransferOnePacket@len 005E  
                 ??_USBCBStdSetDscHandler 0058                                  ??___bmul 0059  
                                ??___lmul 0060                                 _ResultQue 01C8  
                                ??___wmul 005C                       _USBStdGetDscHandler 1388  
                               _ProcessIO 1292                               __pdataBANK2 0152  
                             __pdataBANK3 01CE                               __pdataBANK6 0340  
                       __size_of_ResultRx 005B                     __size_of_SetAsicClock 00CD  
                    __size_of_AsicPreCalc 0400                                  ??_memset 005E  
                    __size_of_DetectAsics 00B7                              ??_ProcessCmd 00EA  
                   __size_of_SendCmdReply 00A9                     SetAsicClock@frequency 00DE  
                          _UpdateFanLevel 0414                                  ??_rotate 005D  
              __size_of_USBCBErrorHandler 0001                     __size_of_SendAsicData 0094  
                       __size_of_UserInit 0013                    _USBActiveConfiguration 014E  
          __end_of_USBStdGetStatusHandler 1FAC                         __size_of___awtoft 0022  
                       __size_of___ftpack 0061                               __pbssBIGRAM 2288  
                       __size_of_WorkTick 005D                         __size_of___lltoft 002A  
                           __pcstackBANK0 0050                             __pcstackBANK1 00A0  
                           __pcstackBANK2 015F              __size_of_USBCtrlTrfInHandler 0063  
                                ?_ISRCode 0070                      ?_USBStdGetDscHandler 0070  
                      i1SendCmdReply@data 0078                __end_of_USBWakeFromSuspend 1B86  
                         _USBStallHandler 1C76                              _pBDTEntryOut 0128  
                                ?_InitFAN 0070                              _send32_count 0145  
                               __pnvBANK2 016A                                 __pnvBANK3 01E0  
                      __end_of_ProcessCmd 078F                              _SetAsicClock 0D38  
                        ___lwdiv@dividend 005A                              _SendCmdReply 09B3  
                            _SendAsicData 16C4                      __end_of_USBCBSuspend 1003  
            __end_of_USBCBWakeFromSuspend 1004                                  ?___awdiv 0058  
                                ?___ftadd 00B3                                  ?___awmod 0058  
                                ?___ftdiv 00C0                                  ?___ftneg 00B0  
                              ?_ProcessIO 0070                                  ?___ftmul 00A0  
                                ?___fttol 00D0                                  ?___lwdiv 0058  
                  __end_of_UpdateFanLevel 055B                              AsicPreCalc@K 00AC  
                            AsicPreCalc@m 00B8                              AsicPreCalc@n 00E4  
                            AsicPreCalc@x 00E0                              AsicPreCalc@y 00DC  
                            AsicPreCalc@z 00D8                                 __pstrings 0800  
              USBCBSendResume@delay_count 0120                                 __pswtext1 1800  
                    _USBTransferOnePacket 1E6B                                  _I2CInBuf 012F  
                            DetectAsics@x 00A2                                  _I2CCount 012E  
                                _I2CState 0130                                 _last_bit0 0142  
                               _last_bit1 0143              __end_of_USBCtrlTrfOutHandler 1D36  
                   ??_USBStdGetDscHandler 0058                               _ep_data_out 0126  
                        ___lwdiv@quotient 005D              __size_of_USBCtrlTrfRxService 00A8  
           USBConfigureEndpoint@direction 0058              __size_of_USBCtrlTrfTxService 008E  
                          ___wmul@product 005C                                  _LATAbits 010C  
              ??_USBCtrlEPServiceComplete 005D                                 clear_ram0 1AB2  
                                _PIE2bits 0092                     i1___bmul@multiplicand 0070  
                         SendCmdReply@cmd 005E                                  _PIR2bits 0012  
                                _INPacket 0220                 USBCtrlEPService@setup_cnt 00B1  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 0138  
                          i1_SendCmdReply 1631                             ??_USBCBInitEP 0065  
             __size_of_USBCheckStdRequest 005E                                  _UCONbits 0E8E  
                         ?_UpdateFanLevel 0070                       _UpdateFanLevel$2766 00E2  
                    _USBConfigureEndpoint 1DE3                             ProcessCmd@cmd 0161  
        __size_of_USBStdFeatureReqHandler 011B                                  i1___bmul 1ACB  
                              _ADCON0bits 009D                                _ADCON1bits 009E  
                              _ADCON2bits 009F                         ___wmul@multiplier 0058  
                   ?_USBTransferOnePacket 005C                                  i1___wmul 1BDA  
                                _BankSize 016C                                  _FanLevel 016A  
                            _RemoteWakeup 0132                                  _ClockCfg 01C0  
              __end_of_USBCBCheckOtherReq 0800                                  _HashTime 016B  
                 __end_of_USBStallHandler 1C98                          __size_of_ISRCode 000E  
                       ___lmul@multiplier 0058               ??_USBCtrlEPAllowStatusStage 0058  
             __end_of_USBStdSetCfgHandler 1631                                  _LastTemp 0131  
                            _SlaveAddress 0134                        __end_of_device_dsc 089F  
                 ?_USBCtrlTrfSetupHandler 0070                          __size_of_InitFAN 001C  
               SetAsicClock@CLOCK_F_VALUE 00E6                   USBStdGetStatusHandler@p 0059  
                  __end_ofi1_SendCmdReply 16C4                    USBTransferOnePacket@ep 0061  
                                _ResultQC 0133                                  _ResultRx 08AF  
                                _SetupPkt 0040                                  _SlowTick 0135  
                             ??_ProcessIO 0162                     ?_USBConfigureEndpoint 0058  
                                _UserInit 1B13                          __size_of___awdiv 0054  
                        __size_of___ftadd 0104                          __size_of___awmod 0048  
                        __size_of___ftdiv 00B7                          __size_of___ftneg 0009  
                        __size_of___ftmul 00C2                          __size_of___fttol 0087  
                        __size_of___lwdiv 0037                                  ___awtoft 1C98  
                                ___ftpack 10F1                                  _WorkTick 1036  
                      __end_of__stringtab 0801                                  ___lltoft 1CDF  
                              _ANSELBbits 018D                       __end_of_USBCBInitEP 1BA2  
                           ?_AsicPushWork 0070                               _send32_data 012A  
                 __size_of_USBDeviceTasks 00F7                           ___lwdiv@divisor 0058  
                         ___lwdiv@counter 005F                                  __ptext10 0A5C  
                                __ptext11 1B3D                                  __ptext20 1B26  
                                __ptext12 1B13                                  __ptext21 1BBE  
                                __ptext13 1B00                                  __ptext30 1C98  
                                __ptext22 0B08                                  __ptext14 1C55  
                                __ptext31 0E05                                  __ptext23 1FAC  
                                __ptext15 0D38                                  __ptext40 1388  
                                __ptext32 130C                                  __ptext24 1036  
                                __ptext16 1D36                                  __ptext41 15A2  
                                __ptext33 1152                                  __ptext25 1E23  
                                __ptext17 1006                                  __ptext50 1DA4  
                                __ptext42 1C15                                  __ptext34 1D09  
                                __ptext26 0414                                  __ptext18 1CDF  
                                __ptext51 1B86                                  __ptext43 1219  
                                __ptext35 1758                                  __ptext27 148D  
                                __ptext19 0BBF                                  __ptext60 1003  
                                __ptext52 1E6B                                  __ptext44 1EB9  
                                __ptext36 1F09                                  __ptext28 1A9D  
                                __ptext61 1002                                  __ptext53 1CBA  
                                __ptext45 1514                                  __ptext37 1093  
                                __ptext29 0C76                                  __ptext62 090A  
                                __ptext54 1DE3                                  __ptext46 11B5  
                                __ptext38 055B                                  __ptext63 0EFC  
                                __ptext55 0003                                  __ptext47 1C76  
                                __ptext39 1F59                                  __ptext64 10F1  
                                __ptext56 07FD                                  __ptext48 1BA2  
                                __ptext57 0002                                  __ptext49 1B6B  
                                __ptext66 08AF                                  __ptext58 1005  
                                __ptext67 1631                                  __ptext59 1004  
                                __ptext68 1ACB                                  __ptext69 1BDA  
                    _USBCBWakeFromSuspend 1003            __end_of_USBCtrlTrfSetupHandler 1F59  
                           __size_of_main 0017                         ?_USBCtrlEPService 0070  
                   __size_of_USBCBSuspend 0001                         ?_InitializeSystem 0070  
                      ??_USBCtrlEPService 00AE                       _USBGenericOutHandle 013B  
                     _USBCtrlTrfInHandler 1152                           ?i1_SendCmdReply 0076  
                      ??_InitializeSystem 0068                                  _outPipes 01A0  
                    _USBCtrlTrfOutHandler 1D09                 _USBCtrlEPAllowStatusStage 11B5  
          __size_of_USBCBStdSetDscHandler 0001             __end_of_USBCBStdSetDscHandler 0004  
                  ??_USBTransferOnePacket 005F                     _USBCheckVendorRequest 0002  
                          ??_AsicPushWork 00E5                 _USBDeferStatusStagePacket 006B  
                              _INTCONbits 000B                        _USBGenericInHandle 013A  
                    ?_USBCtrlTrfInHandler 0070             USBCtrlTrfTxService@byteToSend 005A  
                                memset@p1 0058                              _USBCBSuspend 1002  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 00AB  
                   ?_USBCBWakeFromSuspend 0070                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00A9   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1DE3  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 003F         ??_USER_USB_CALLBACK_EVENT_HANDLER 0068  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 00A0           _USER_USB_CALLBACK_EVENT_HANDLER 1DA4  
                        AsicPreCalc@F3343 01CE                                  next_word 0A61  
                       SendCmdReply@count 0062                             SendCmdReply@n 0063  
                           ??_AsicPreCalc 00A2                              _VerySlowTick 013F  
                           ??_DetectAsics 0061                           _ProcessCmd$1976 015F  
                  ??_USBConfigureEndpoint 0059                     ?_USBCtrlTrfOutHandler 0070  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 1758  
                             _USBCBInitEP 1B86                        _USBWakeFromSuspend 1B6B  
                 _USBStdFeatureReqHandler 055B                       _USBCtrlTrfTxService 1514  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 005B  
                   _USBAlternateInterface 014F                               _SSPCON1bits 0215  
                             _SSPCON2bits 0216                       USBEnableEndpoint@ep 0064  
                             _SSPCON3bits 0217                           _endpoint_number 0141  
                 __size_of_InitTempSensor 0017                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
            _USBStatusStageTimeoutCounter 013E                      ??_USBWakeFromSuspend 00A6  
              USBTransferOnePacket@handle 0062                          ??_UpdateFanLevel 00DE  
                              _USB_CD_Ptr 0804  
